{
  "version": 3,
  "sources": ["../../../../node_modules/lodash/noop.js", "../../../../node_modules/lodash/_createSet.js", "../../../../node_modules/lodash/_baseUniq.js", "../../../../node_modules/lodash/uniq.js", "../../../../node_modules/lodash/uniqBy.js", "../../../../node_modules/lodash/_createBaseEach.js", "../../../../node_modules/lodash/_baseEach.js", "../../../../node_modules/lodash/_baseMap.js", "../../../../node_modules/lodash/_baseSortBy.js", "../../../../node_modules/lodash/_compareAscending.js", "../../../../node_modules/lodash/_compareMultiple.js", "../../../../node_modules/lodash/_baseOrderBy.js", "../../../../node_modules/lodash/sortBy.js", "../../../../node_modules/lodash/_baseIsDate.js", "../../../../node_modules/lodash/isDate.js", "../../../../node_modules/@nivo/line/node_modules/d3-scale-chromatic/src/colors.js", "../../../../node_modules/@nivo/line/node_modules/d3-scale-chromatic/src/categorical/category10.js", "../../../../node_modules/@nivo/line/node_modules/d3-scale-chromatic/src/categorical/Accent.js", "../../../../node_modules/@nivo/line/node_modules/d3-scale-chromatic/src/categorical/Dark2.js", "../../../../node_modules/@nivo/line/node_modules/d3-scale-chromatic/src/categorical/Paired.js", "../../../../node_modules/@nivo/line/node_modules/d3-scale-chromatic/src/categorical/Pastel1.js", "../../../../node_modules/@nivo/line/node_modules/d3-scale-chromatic/src/categorical/Pastel2.js", "../../../../node_modules/@nivo/line/node_modules/d3-scale-chromatic/src/categorical/Set1.js", "../../../../node_modules/@nivo/line/node_modules/d3-scale-chromatic/src/categorical/Set2.js", "../../../../node_modules/@nivo/line/node_modules/d3-scale-chromatic/src/categorical/Set3.js", "../../../../node_modules/@nivo/line/node_modules/d3-scale-chromatic/src/categorical/Tableau10.js", "../../../../node_modules/@nivo/line/node_modules/d3-scale-chromatic/src/ramp.js", "../../../../node_modules/@nivo/line/node_modules/d3-scale-chromatic/src/diverging/BrBG.js", "../../../../node_modules/@nivo/line/node_modules/d3-scale-chromatic/src/diverging/PRGn.js", "../../../../node_modules/@nivo/line/node_modules/d3-scale-chromatic/src/diverging/PiYG.js", "../../../../node_modules/@nivo/line/node_modules/d3-scale-chromatic/src/diverging/PuOr.js", "../../../../node_modules/@nivo/line/node_modules/d3-scale-chromatic/src/diverging/RdBu.js", "../../../../node_modules/@nivo/line/node_modules/d3-scale-chromatic/src/diverging/RdGy.js", "../../../../node_modules/@nivo/line/node_modules/d3-scale-chromatic/src/diverging/RdYlBu.js", "../../../../node_modules/@nivo/line/node_modules/d3-scale-chromatic/src/diverging/RdYlGn.js", "../../../../node_modules/@nivo/line/node_modules/d3-scale-chromatic/src/diverging/Spectral.js", "../../../../node_modules/@nivo/line/node_modules/d3-scale-chromatic/src/sequential-multi/BuGn.js", "../../../../node_modules/@nivo/line/node_modules/d3-scale-chromatic/src/sequential-multi/BuPu.js", "../../../../node_modules/@nivo/line/node_modules/d3-scale-chromatic/src/sequential-multi/GnBu.js", "../../../../node_modules/@nivo/line/node_modules/d3-scale-chromatic/src/sequential-multi/OrRd.js", "../../../../node_modules/@nivo/line/node_modules/d3-scale-chromatic/src/sequential-multi/PuBuGn.js", "../../../../node_modules/@nivo/line/node_modules/d3-scale-chromatic/src/sequential-multi/PuBu.js", "../../../../node_modules/@nivo/line/node_modules/d3-scale-chromatic/src/sequential-multi/PuRd.js", "../../../../node_modules/@nivo/line/node_modules/d3-scale-chromatic/src/sequential-multi/RdPu.js", "../../../../node_modules/@nivo/line/node_modules/d3-scale-chromatic/src/sequential-multi/YlGnBu.js", "../../../../node_modules/@nivo/line/node_modules/d3-scale-chromatic/src/sequential-multi/YlGn.js", "../../../../node_modules/@nivo/line/node_modules/d3-scale-chromatic/src/sequential-multi/YlOrBr.js", "../../../../node_modules/@nivo/line/node_modules/d3-scale-chromatic/src/sequential-multi/YlOrRd.js", "../../../../node_modules/@nivo/line/node_modules/d3-scale-chromatic/src/sequential-single/Blues.js", "../../../../node_modules/@nivo/line/node_modules/d3-scale-chromatic/src/sequential-single/Greens.js", "../../../../node_modules/@nivo/line/node_modules/d3-scale-chromatic/src/sequential-single/Greys.js", "../../../../node_modules/@nivo/line/node_modules/d3-scale-chromatic/src/sequential-single/Purples.js", "../../../../node_modules/@nivo/line/node_modules/d3-scale-chromatic/src/sequential-single/Reds.js", "../../../../node_modules/@nivo/line/node_modules/d3-scale-chromatic/src/sequential-single/Oranges.js", "../../../../node_modules/@nivo/line/node_modules/d3-scale-chromatic/src/sequential-multi/cividis.js", "../../../../node_modules/@nivo/line/node_modules/d3-color/src/define.js", "../../../../node_modules/@nivo/line/node_modules/d3-color/src/color.js", "../../../../node_modules/@nivo/line/node_modules/d3-color/src/math.js", "../../../../node_modules/@nivo/line/node_modules/d3-color/src/lab.js", "../../../../node_modules/@nivo/line/node_modules/d3-color/src/cubehelix.js", "../../../../node_modules/@nivo/line/node_modules/d3-scale-chromatic/src/sequential-multi/cubehelix.js", "../../../../node_modules/@nivo/line/node_modules/d3-scale-chromatic/src/sequential-multi/rainbow.js", "../../../../node_modules/@nivo/line/node_modules/d3-scale-chromatic/src/sequential-multi/sinebow.js", "../../../../node_modules/@nivo/line/node_modules/d3-scale-chromatic/src/sequential-multi/turbo.js", "../../../../node_modules/@nivo/line/node_modules/d3-scale-chromatic/src/sequential-multi/viridis.js", "../../../../node_modules/@nivo/line/node_modules/@nivo/colors/src/schemes/categorical.ts", "../../../../node_modules/@nivo/line/node_modules/@nivo/colors/src/schemes/diverging.ts", "../../../../node_modules/@nivo/line/node_modules/@nivo/colors/src/schemes/sequential.ts", "../../../../node_modules/@nivo/line/node_modules/@nivo/colors/src/schemes/all.ts", "../../../../node_modules/@nivo/line/node_modules/@nivo/colors/src/schemes/cyclical.ts", "../../../../node_modules/@nivo/line/node_modules/@nivo/colors/src/schemes/interpolators.ts", "../../../../node_modules/@nivo/line/node_modules/@nivo/colors/src/inheritedColor.ts", "../../../../node_modules/@nivo/line/node_modules/@nivo/colors/src/props.ts", "../../../../node_modules/@nivo/line/node_modules/@nivo/colors/src/scales/sequentialColorScale.ts", "../../../../node_modules/@nivo/line/node_modules/@nivo/colors/src/scales/divergingColorScale.ts", "../../../../node_modules/@nivo/line/node_modules/@nivo/colors/src/scales/quantizeColorScale.ts", "../../../../node_modules/@nivo/line/node_modules/@nivo/colors/src/scales/continuousColorScale.ts", "../../../../node_modules/@nivo/line/node_modules/@nivo/colors/src/scales/ordinalColorScale.ts", "../../../../node_modules/@nivo/line/node_modules/@react-spring/rafz/dist/react-spring-rafz.esm.js", "../../../../node_modules/@nivo/line/node_modules/@react-spring/shared/dist/react-spring-shared.esm.js", "../../../../node_modules/@nivo/line/node_modules/@react-spring/core/dist/react-spring-core.esm.js", "../../../../node_modules/@nivo/line/node_modules/@react-spring/animated/dist/react-spring-animated.esm.js", "../../../../node_modules/@nivo/line/node_modules/@react-spring/web/dist/react-spring-web.esm.js", "../../../../node_modules/@nivo/line/node_modules/d3-time/src/interval.js", "../../../../node_modules/@nivo/line/node_modules/d3-time/src/millisecond.js", "../../../../node_modules/@nivo/line/node_modules/d3-time/src/duration.js", "../../../../node_modules/@nivo/line/node_modules/d3-time/src/second.js", "../../../../node_modules/@nivo/line/node_modules/d3-time/src/minute.js", "../../../../node_modules/@nivo/line/node_modules/d3-time/src/hour.js", "../../../../node_modules/@nivo/line/node_modules/d3-time/src/day.js", "../../../../node_modules/@nivo/line/node_modules/d3-time/src/week.js", "../../../../node_modules/@nivo/line/node_modules/d3-time/src/month.js", "../../../../node_modules/@nivo/line/node_modules/d3-time/src/year.js", "../../../../node_modules/@nivo/line/node_modules/d3-time/src/utcMinute.js", "../../../../node_modules/@nivo/line/node_modules/d3-time/src/utcHour.js", "../../../../node_modules/@nivo/line/node_modules/d3-time/src/utcDay.js", "../../../../node_modules/@nivo/line/node_modules/d3-time/src/utcWeek.js", "../../../../node_modules/@nivo/line/node_modules/d3-time/src/utcMonth.js", "../../../../node_modules/@nivo/line/node_modules/d3-time/src/utcYear.js", "../../../../node_modules/@nivo/line/node_modules/@nivo/scales/src/timeHelpers.ts", "../../../../node_modules/@nivo/line/node_modules/@nivo/scales/src/linearScale.ts", "../../../../node_modules/@nivo/line/node_modules/@nivo/scales/src/pointScale.ts", "../../../../node_modules/@nivo/line/node_modules/@nivo/scales/src/bandScale.ts", "../../../../node_modules/@nivo/line/node_modules/@nivo/scales/src/timeScale.ts", "../../../../node_modules/@nivo/line/node_modules/@nivo/scales/src/logScale.ts", "../../../../node_modules/@nivo/line/node_modules/@nivo/scales/src/symlogScale.ts", "../../../../node_modules/@nivo/line/node_modules/@nivo/scales/src/compute.ts", "../../../../node_modules/@nivo/line/node_modules/@nivo/scales/src/ticks.ts", "../../../../node_modules/@nivo/line/node_modules/@nivo/axes/src/compute.ts", "../../../../node_modules/@nivo/line/node_modules/@nivo/axes/src/components/AxisTick.tsx", "../../../../node_modules/@nivo/line/node_modules/@nivo/axes/src/components/Axis.tsx", "../../../../node_modules/@nivo/line/node_modules/@nivo/axes/src/props.ts", "../../../../node_modules/@nivo/line/node_modules/@nivo/axes/src/components/Axes.tsx", "../../../../node_modules/@nivo/line/node_modules/@nivo/axes/src/components/GridLine.tsx", "../../../../node_modules/@nivo/line/node_modules/@nivo/axes/src/components/GridLines.tsx", "../../../../node_modules/@nivo/line/node_modules/@nivo/axes/src/components/Grid.tsx", "../../../../node_modules/@nivo/line/node_modules/@nivo/axes/src/canvas.ts", "../../../../node_modules/@nivo/line/node_modules/@nivo/legends/src/svg/symbols/SymbolCircle.tsx", "../../../../node_modules/@nivo/line/node_modules/@nivo/legends/src/svg/symbols/SymbolDiamond.tsx", "../../../../node_modules/@nivo/line/node_modules/@nivo/legends/src/svg/symbols/SymbolSquare.tsx", "../../../../node_modules/@nivo/line/node_modules/@nivo/legends/src/svg/symbols/SymbolTriangle.tsx", "../../../../node_modules/@nivo/line/node_modules/@nivo/legends/src/defaults.ts", "../../../../node_modules/@nivo/line/node_modules/@nivo/legends/src/compute.ts", "../../../../node_modules/@nivo/line/node_modules/@nivo/legends/src/svg/ContinuousColorsLegendSvg.tsx", "../../../../node_modules/@nivo/line/node_modules/@nivo/legends/src/svg/AnchoredContinuousColorsLegendSvg.tsx", "../../../../node_modules/@nivo/line/node_modules/@nivo/legends/src/svg/LegendSvgItem.tsx", "../../../../node_modules/@nivo/line/node_modules/@nivo/legends/src/svg/LegendSvg.tsx", "../../../../node_modules/@nivo/line/node_modules/@nivo/legends/src/svg/BoxLegendSvg.tsx", "../../../../node_modules/@nivo/line/node_modules/@nivo/legends/src/canvas.ts", "../../../../node_modules/@nivo/line/node_modules/@nivo/legends/src/hooks.ts", "../../../../node_modules/@nivo/line/node_modules/@nivo/legends/src/props.ts", "../../../../node_modules/@nivo/line/node_modules/@nivo/tooltip/src/TooltipWrapper.tsx", "../../../../node_modules/@nivo/line/node_modules/@nivo/tooltip/src/Chip.tsx", "../../../../node_modules/@nivo/line/node_modules/@nivo/tooltip/src/BasicTooltip.tsx", "../../../../node_modules/@nivo/line/node_modules/@nivo/tooltip/src/TableTooltip.tsx", "../../../../node_modules/@nivo/line/node_modules/@nivo/tooltip/src/CrosshairLine.tsx", "../../../../node_modules/@nivo/line/node_modules/@nivo/tooltip/src/Crosshair.tsx", "../../../../node_modules/@nivo/line/node_modules/@nivo/tooltip/src/context.ts", "../../../../node_modules/@nivo/line/node_modules/@nivo/tooltip/src/hooks.ts", "../../../../node_modules/@nivo/line/node_modules/@nivo/tooltip/src/Tooltip.tsx", "../../../../node_modules/@nivo/line/node_modules/@nivo/tooltip/src/TooltipProvider.tsx", "../../../../node_modules/delaunator/index.js", "../../../../node_modules/d3-delaunay/src/path.js", "../../../../node_modules/d3-delaunay/src/polygon.js", "../../../../node_modules/d3-delaunay/src/voronoi.js", "../../../../node_modules/d3-delaunay/src/delaunay.js", "../../../../node_modules/@nivo/voronoi/src/props.ts", "../../../../node_modules/@nivo/voronoi/src/computeMesh.ts", "../../../../node_modules/@nivo/voronoi/src/hooks.ts", "../../../../node_modules/@nivo/voronoi/src/Voronoi.tsx", "../../../../node_modules/@nivo/voronoi/src/ResponsiveVoronoi.tsx", "../../../../node_modules/@nivo/voronoi/src/Mesh.tsx", "../../../../node_modules/@nivo/voronoi/src/meshCanvas.ts", "../../../../node_modules/@nivo/line/src/PointTooltip.js", "../../../../node_modules/@nivo/line/src/SliceTooltip.js", "../../../../node_modules/@nivo/line/src/props.js", "../../../../node_modules/@nivo/line/src/hooks.js", "../../../../node_modules/@nivo/line/src/Areas.js", "../../../../node_modules/@nivo/line/src/LinesItem.js", "../../../../node_modules/@nivo/line/src/Lines.js", "../../../../node_modules/@nivo/line/src/SlicesItem.js", "../../../../node_modules/@nivo/line/src/Slices.js", "../../../../node_modules/@nivo/line/src/Points.js", "../../../../node_modules/@nivo/line/src/Mesh.js", "../../../../node_modules/@nivo/line/src/Line.js", "../../../../node_modules/@nivo/line/src/ResponsiveLine.js", "../../../../node_modules/@nivo/line/src/LineCanvas.js", "../../../../node_modules/@nivo/line/src/ResponsiveLineCanvas.js"],
  "sourcesContent": ["/**\n * This method returns `undefined`.\n *\n * @static\n * @memberOf _\n * @since 2.3.0\n * @category Util\n * @example\n *\n * _.times(2, _.noop);\n * // => [undefined, undefined]\n */\nfunction noop() {\n  // No operation performed.\n}\n\nmodule.exports = noop;\n", "var Set = require('./_Set'),\n    noop = require('./noop'),\n    setToArray = require('./_setToArray');\n\n/** Used as references for various `Number` constants. */\nvar INFINITY = 1 / 0;\n\n/**\n * Creates a set object of `values`.\n *\n * @private\n * @param {Array} values The values to add to the set.\n * @returns {Object} Returns the new set.\n */\nvar createSet = !(Set && (1 / setToArray(new Set([,-0]))[1]) == INFINITY) ? noop : function(values) {\n  return new Set(values);\n};\n\nmodule.exports = createSet;\n", "var SetCache = require('./_SetCache'),\n    arrayIncludes = require('./_arrayIncludes'),\n    arrayIncludesWith = require('./_arrayIncludesWith'),\n    cacheHas = require('./_cacheHas'),\n    createSet = require('./_createSet'),\n    setToArray = require('./_setToArray');\n\n/** Used as the size to enable large array optimizations. */\nvar LARGE_ARRAY_SIZE = 200;\n\n/**\n * The base implementation of `_.uniqBy` without support for iteratee shorthands.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {Function} [iteratee] The iteratee invoked per element.\n * @param {Function} [comparator] The comparator invoked per element.\n * @returns {Array} Returns the new duplicate free array.\n */\nfunction baseUniq(array, iteratee, comparator) {\n  var index = -1,\n      includes = arrayIncludes,\n      length = array.length,\n      isCommon = true,\n      result = [],\n      seen = result;\n\n  if (comparator) {\n    isCommon = false;\n    includes = arrayIncludesWith;\n  }\n  else if (length >= LARGE_ARRAY_SIZE) {\n    var set = iteratee ? null : createSet(array);\n    if (set) {\n      return setToArray(set);\n    }\n    isCommon = false;\n    includes = cacheHas;\n    seen = new SetCache;\n  }\n  else {\n    seen = iteratee ? [] : result;\n  }\n  outer:\n  while (++index < length) {\n    var value = array[index],\n        computed = iteratee ? iteratee(value) : value;\n\n    value = (comparator || value !== 0) ? value : 0;\n    if (isCommon && computed === computed) {\n      var seenIndex = seen.length;\n      while (seenIndex--) {\n        if (seen[seenIndex] === computed) {\n          continue outer;\n        }\n      }\n      if (iteratee) {\n        seen.push(computed);\n      }\n      result.push(value);\n    }\n    else if (!includes(seen, computed, comparator)) {\n      if (seen !== result) {\n        seen.push(computed);\n      }\n      result.push(value);\n    }\n  }\n  return result;\n}\n\nmodule.exports = baseUniq;\n", "var baseUniq = require('./_baseUniq');\n\n/**\n * Creates a duplicate-free version of an array, using\n * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * for equality comparisons, in which only the first occurrence of each element\n * is kept. The order of result values is determined by the order they occur\n * in the array.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Array\n * @param {Array} array The array to inspect.\n * @returns {Array} Returns the new duplicate free array.\n * @example\n *\n * _.uniq([2, 1, 2]);\n * // => [2, 1]\n */\nfunction uniq(array) {\n  return (array && array.length) ? baseUniq(array) : [];\n}\n\nmodule.exports = uniq;\n", "var baseIteratee = require('./_baseIteratee'),\n    baseUniq = require('./_baseUniq');\n\n/**\n * This method is like `_.uniq` except that it accepts `iteratee` which is\n * invoked for each element in `array` to generate the criterion by which\n * uniqueness is computed. The order of result values is determined by the\n * order they occur in the array. The iteratee is invoked with one argument:\n * (value).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Array\n * @param {Array} array The array to inspect.\n * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n * @returns {Array} Returns the new duplicate free array.\n * @example\n *\n * _.uniqBy([2.1, 1.2, 2.3], Math.floor);\n * // => [2.1, 1.2]\n *\n * // The `_.property` iteratee shorthand.\n * _.uniqBy([{ 'x': 1 }, { 'x': 2 }, { 'x': 1 }], 'x');\n * // => [{ 'x': 1 }, { 'x': 2 }]\n */\nfunction uniqBy(array, iteratee) {\n  return (array && array.length) ? baseUniq(array, baseIteratee(iteratee, 2)) : [];\n}\n\nmodule.exports = uniqBy;\n", "var isArrayLike = require('./isArrayLike');\n\n/**\n * Creates a `baseEach` or `baseEachRight` function.\n *\n * @private\n * @param {Function} eachFunc The function to iterate over a collection.\n * @param {boolean} [fromRight] Specify iterating from right to left.\n * @returns {Function} Returns the new base function.\n */\nfunction createBaseEach(eachFunc, fromRight) {\n  return function(collection, iteratee) {\n    if (collection == null) {\n      return collection;\n    }\n    if (!isArrayLike(collection)) {\n      return eachFunc(collection, iteratee);\n    }\n    var length = collection.length,\n        index = fromRight ? length : -1,\n        iterable = Object(collection);\n\n    while ((fromRight ? index-- : ++index < length)) {\n      if (iteratee(iterable[index], index, iterable) === false) {\n        break;\n      }\n    }\n    return collection;\n  };\n}\n\nmodule.exports = createBaseEach;\n", "var baseForOwn = require('./_baseForOwn'),\n    createBaseEach = require('./_createBaseEach');\n\n/**\n * The base implementation of `_.forEach` without support for iteratee shorthands.\n *\n * @private\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array|Object} Returns `collection`.\n */\nvar baseEach = createBaseEach(baseForOwn);\n\nmodule.exports = baseEach;\n", "var baseEach = require('./_baseEach'),\n    isArrayLike = require('./isArrayLike');\n\n/**\n * The base implementation of `_.map` without support for iteratee shorthands.\n *\n * @private\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns the new mapped array.\n */\nfunction baseMap(collection, iteratee) {\n  var index = -1,\n      result = isArrayLike(collection) ? Array(collection.length) : [];\n\n  baseEach(collection, function(value, key, collection) {\n    result[++index] = iteratee(value, key, collection);\n  });\n  return result;\n}\n\nmodule.exports = baseMap;\n", "/**\n * The base implementation of `_.sortBy` which uses `comparer` to define the\n * sort order of `array` and replaces criteria objects with their corresponding\n * values.\n *\n * @private\n * @param {Array} array The array to sort.\n * @param {Function} comparer The function to define sort order.\n * @returns {Array} Returns `array`.\n */\nfunction baseSortBy(array, comparer) {\n  var length = array.length;\n\n  array.sort(comparer);\n  while (length--) {\n    array[length] = array[length].value;\n  }\n  return array;\n}\n\nmodule.exports = baseSortBy;\n", "var isSymbol = require('./isSymbol');\n\n/**\n * Compares values to sort them in ascending order.\n *\n * @private\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @returns {number} Returns the sort order indicator for `value`.\n */\nfunction compareAscending(value, other) {\n  if (value !== other) {\n    var valIsDefined = value !== undefined,\n        valIsNull = value === null,\n        valIsReflexive = value === value,\n        valIsSymbol = isSymbol(value);\n\n    var othIsDefined = other !== undefined,\n        othIsNull = other === null,\n        othIsReflexive = other === other,\n        othIsSymbol = isSymbol(other);\n\n    if ((!othIsNull && !othIsSymbol && !valIsSymbol && value > other) ||\n        (valIsSymbol && othIsDefined && othIsReflexive && !othIsNull && !othIsSymbol) ||\n        (valIsNull && othIsDefined && othIsReflexive) ||\n        (!valIsDefined && othIsReflexive) ||\n        !valIsReflexive) {\n      return 1;\n    }\n    if ((!valIsNull && !valIsSymbol && !othIsSymbol && value < other) ||\n        (othIsSymbol && valIsDefined && valIsReflexive && !valIsNull && !valIsSymbol) ||\n        (othIsNull && valIsDefined && valIsReflexive) ||\n        (!othIsDefined && valIsReflexive) ||\n        !othIsReflexive) {\n      return -1;\n    }\n  }\n  return 0;\n}\n\nmodule.exports = compareAscending;\n", "var compareAscending = require('./_compareAscending');\n\n/**\n * Used by `_.orderBy` to compare multiple properties of a value to another\n * and stable sort them.\n *\n * If `orders` is unspecified, all values are sorted in ascending order. Otherwise,\n * specify an order of \"desc\" for descending or \"asc\" for ascending sort order\n * of corresponding values.\n *\n * @private\n * @param {Object} object The object to compare.\n * @param {Object} other The other object to compare.\n * @param {boolean[]|string[]} orders The order to sort by for each property.\n * @returns {number} Returns the sort order indicator for `object`.\n */\nfunction compareMultiple(object, other, orders) {\n  var index = -1,\n      objCriteria = object.criteria,\n      othCriteria = other.criteria,\n      length = objCriteria.length,\n      ordersLength = orders.length;\n\n  while (++index < length) {\n    var result = compareAscending(objCriteria[index], othCriteria[index]);\n    if (result) {\n      if (index >= ordersLength) {\n        return result;\n      }\n      var order = orders[index];\n      return result * (order == 'desc' ? -1 : 1);\n    }\n  }\n  // Fixes an `Array#sort` bug in the JS engine embedded in Adobe applications\n  // that causes it, under certain circumstances, to provide the same value for\n  // `object` and `other`. See https://github.com/jashkenas/underscore/pull/1247\n  // for more details.\n  //\n  // This also ensures a stable sort in V8 and other engines.\n  // See https://bugs.chromium.org/p/v8/issues/detail?id=90 for more details.\n  return object.index - other.index;\n}\n\nmodule.exports = compareMultiple;\n", "var arrayMap = require('./_arrayMap'),\n    baseGet = require('./_baseGet'),\n    baseIteratee = require('./_baseIteratee'),\n    baseMap = require('./_baseMap'),\n    baseSortBy = require('./_baseSortBy'),\n    baseUnary = require('./_baseUnary'),\n    compareMultiple = require('./_compareMultiple'),\n    identity = require('./identity'),\n    isArray = require('./isArray');\n\n/**\n * The base implementation of `_.orderBy` without param guards.\n *\n * @private\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function[]|Object[]|string[]} iteratees The iteratees to sort by.\n * @param {string[]} orders The sort orders of `iteratees`.\n * @returns {Array} Returns the new sorted array.\n */\nfunction baseOrderBy(collection, iteratees, orders) {\n  if (iteratees.length) {\n    iteratees = arrayMap(iteratees, function(iteratee) {\n      if (isArray(iteratee)) {\n        return function(value) {\n          return baseGet(value, iteratee.length === 1 ? iteratee[0] : iteratee);\n        }\n      }\n      return iteratee;\n    });\n  } else {\n    iteratees = [identity];\n  }\n\n  var index = -1;\n  iteratees = arrayMap(iteratees, baseUnary(baseIteratee));\n\n  var result = baseMap(collection, function(value, key, collection) {\n    var criteria = arrayMap(iteratees, function(iteratee) {\n      return iteratee(value);\n    });\n    return { 'criteria': criteria, 'index': ++index, 'value': value };\n  });\n\n  return baseSortBy(result, function(object, other) {\n    return compareMultiple(object, other, orders);\n  });\n}\n\nmodule.exports = baseOrderBy;\n", "var baseFlatten = require('./_baseFlatten'),\n    baseOrderBy = require('./_baseOrderBy'),\n    baseRest = require('./_baseRest'),\n    isIterateeCall = require('./_isIterateeCall');\n\n/**\n * Creates an array of elements, sorted in ascending order by the results of\n * running each element in a collection thru each iteratee. This method\n * performs a stable sort, that is, it preserves the original sort order of\n * equal elements. The iteratees are invoked with one argument: (value).\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Collection\n * @param {Array|Object} collection The collection to iterate over.\n * @param {...(Function|Function[])} [iteratees=[_.identity]]\n *  The iteratees to sort by.\n * @returns {Array} Returns the new sorted array.\n * @example\n *\n * var users = [\n *   { 'user': 'fred',   'age': 48 },\n *   { 'user': 'barney', 'age': 36 },\n *   { 'user': 'fred',   'age': 30 },\n *   { 'user': 'barney', 'age': 34 }\n * ];\n *\n * _.sortBy(users, [function(o) { return o.user; }]);\n * // => objects for [['barney', 36], ['barney', 34], ['fred', 48], ['fred', 30]]\n *\n * _.sortBy(users, ['user', 'age']);\n * // => objects for [['barney', 34], ['barney', 36], ['fred', 30], ['fred', 48]]\n */\nvar sortBy = baseRest(function(collection, iteratees) {\n  if (collection == null) {\n    return [];\n  }\n  var length = iteratees.length;\n  if (length > 1 && isIterateeCall(collection, iteratees[0], iteratees[1])) {\n    iteratees = [];\n  } else if (length > 2 && isIterateeCall(iteratees[0], iteratees[1], iteratees[2])) {\n    iteratees = [iteratees[0]];\n  }\n  return baseOrderBy(collection, baseFlatten(iteratees, 1), []);\n});\n\nmodule.exports = sortBy;\n", "var baseGetTag = require('./_baseGetTag'),\n    isObjectLike = require('./isObjectLike');\n\n/** `Object#toString` result references. */\nvar dateTag = '[object Date]';\n\n/**\n * The base implementation of `_.isDate` without Node.js optimizations.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a date object, else `false`.\n */\nfunction baseIsDate(value) {\n  return isObjectLike(value) && baseGetTag(value) == dateTag;\n}\n\nmodule.exports = baseIsDate;\n", "var baseIsDate = require('./_baseIsDate'),\n    baseUnary = require('./_baseUnary'),\n    nodeUtil = require('./_nodeUtil');\n\n/* Node.js helper references. */\nvar nodeIsDate = nodeUtil && nodeUtil.isDate;\n\n/**\n * Checks if `value` is classified as a `Date` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a date object, else `false`.\n * @example\n *\n * _.isDate(new Date);\n * // => true\n *\n * _.isDate('Mon April 23 2012');\n * // => false\n */\nvar isDate = nodeIsDate ? baseUnary(nodeIsDate) : baseIsDate;\n\nmodule.exports = isDate;\n", "export default function(specifier) {\n  var n = specifier.length / 6 | 0, colors = new Array(n), i = 0;\n  while (i < n) colors[i] = \"#\" + specifier.slice(i * 6, ++i * 6);\n  return colors;\n}\n", "import colors from \"../colors.js\";\n\nexport default colors(\"1f77b4ff7f0e2ca02cd627289467bd8c564be377c27f7f7fbcbd2217becf\");\n", "import colors from \"../colors.js\";\n\nexport default colors(\"7fc97fbeaed4fdc086ffff99386cb0f0027fbf5b17666666\");\n", "import colors from \"../colors.js\";\n\nexport default colors(\"1b9e77d95f027570b3e7298a66a61ee6ab02a6761d666666\");\n", "import colors from \"../colors.js\";\n\nexport default colors(\"a6cee31f78b4b2df8a33a02cfb9a99e31a1cfdbf6fff7f00cab2d66a3d9affff99b15928\");\n", "import colors from \"../colors.js\";\n\nexport default colors(\"fbb4aeb3cde3ccebc5decbe4fed9a6ffffcce5d8bdfddaecf2f2f2\");\n", "import colors from \"../colors.js\";\n\nexport default colors(\"b3e2cdfdcdaccbd5e8f4cae4e6f5c9fff2aef1e2cccccccc\");\n", "import colors from \"../colors.js\";\n\nexport default colors(\"e41a1c377eb84daf4a984ea3ff7f00ffff33a65628f781bf999999\");\n", "import colors from \"../colors.js\";\n\nexport default colors(\"66c2a5fc8d628da0cbe78ac3a6d854ffd92fe5c494b3b3b3\");\n", "import colors from \"../colors.js\";\n\nexport default colors(\"8dd3c7ffffb3bebadafb807280b1d3fdb462b3de69fccde5d9d9d9bc80bdccebc5ffed6f\");\n", "import colors from \"../colors.js\";\n\nexport default colors(\"4e79a7f28e2ce1575976b7b259a14fedc949af7aa1ff9da79c755fbab0ab\");\n", "import {interpolateRgbBasis} from \"d3-interpolate\";\n\nexport default scheme => interpolateRgbBasis(scheme[scheme.length - 1]);\n", "import colors from \"../colors.js\";\nimport ramp from \"../ramp.js\";\n\nexport var scheme = new Array(3).concat(\n  \"d8b365f5f5f55ab4ac\",\n  \"a6611adfc27d80cdc1018571\",\n  \"a6611adfc27df5f5f580cdc1018571\",\n  \"8c510ad8b365f6e8c3c7eae55ab4ac01665e\",\n  \"8c510ad8b365f6e8c3f5f5f5c7eae55ab4ac01665e\",\n  \"8c510abf812ddfc27df6e8c3c7eae580cdc135978f01665e\",\n  \"8c510abf812ddfc27df6e8c3f5f5f5c7eae580cdc135978f01665e\",\n  \"5430058c510abf812ddfc27df6e8c3c7eae580cdc135978f01665e003c30\",\n  \"5430058c510abf812ddfc27df6e8c3f5f5f5c7eae580cdc135978f01665e003c30\"\n).map(colors);\n\nexport default ramp(scheme);\n", "import colors from \"../colors.js\";\nimport ramp from \"../ramp.js\";\n\nexport var scheme = new Array(3).concat(\n  \"af8dc3f7f7f77fbf7b\",\n  \"7b3294c2a5cfa6dba0008837\",\n  \"7b3294c2a5cff7f7f7a6dba0008837\",\n  \"762a83af8dc3e7d4e8d9f0d37fbf7b1b7837\",\n  \"762a83af8dc3e7d4e8f7f7f7d9f0d37fbf7b1b7837\",\n  \"762a839970abc2a5cfe7d4e8d9f0d3a6dba05aae611b7837\",\n  \"762a839970abc2a5cfe7d4e8f7f7f7d9f0d3a6dba05aae611b7837\",\n  \"40004b762a839970abc2a5cfe7d4e8d9f0d3a6dba05aae611b783700441b\",\n  \"40004b762a839970abc2a5cfe7d4e8f7f7f7d9f0d3a6dba05aae611b783700441b\"\n).map(colors);\n\nexport default ramp(scheme);\n", "import colors from \"../colors.js\";\nimport ramp from \"../ramp.js\";\n\nexport var scheme = new Array(3).concat(\n  \"e9a3c9f7f7f7a1d76a\",\n  \"d01c8bf1b6dab8e1864dac26\",\n  \"d01c8bf1b6daf7f7f7b8e1864dac26\",\n  \"c51b7de9a3c9fde0efe6f5d0a1d76a4d9221\",\n  \"c51b7de9a3c9fde0eff7f7f7e6f5d0a1d76a4d9221\",\n  \"c51b7dde77aef1b6dafde0efe6f5d0b8e1867fbc414d9221\",\n  \"c51b7dde77aef1b6dafde0eff7f7f7e6f5d0b8e1867fbc414d9221\",\n  \"8e0152c51b7dde77aef1b6dafde0efe6f5d0b8e1867fbc414d9221276419\",\n  \"8e0152c51b7dde77aef1b6dafde0eff7f7f7e6f5d0b8e1867fbc414d9221276419\"\n).map(colors);\n\nexport default ramp(scheme);\n", "import colors from \"../colors.js\";\nimport ramp from \"../ramp.js\";\n\nexport var scheme = new Array(3).concat(\n  \"998ec3f7f7f7f1a340\",\n  \"5e3c99b2abd2fdb863e66101\",\n  \"5e3c99b2abd2f7f7f7fdb863e66101\",\n  \"542788998ec3d8daebfee0b6f1a340b35806\",\n  \"542788998ec3d8daebf7f7f7fee0b6f1a340b35806\",\n  \"5427888073acb2abd2d8daebfee0b6fdb863e08214b35806\",\n  \"5427888073acb2abd2d8daebf7f7f7fee0b6fdb863e08214b35806\",\n  \"2d004b5427888073acb2abd2d8daebfee0b6fdb863e08214b358067f3b08\",\n  \"2d004b5427888073acb2abd2d8daebf7f7f7fee0b6fdb863e08214b358067f3b08\"\n).map(colors);\n\nexport default ramp(scheme);\n", "import colors from \"../colors.js\";\nimport ramp from \"../ramp.js\";\n\nexport var scheme = new Array(3).concat(\n  \"ef8a62f7f7f767a9cf\",\n  \"ca0020f4a58292c5de0571b0\",\n  \"ca0020f4a582f7f7f792c5de0571b0\",\n  \"b2182bef8a62fddbc7d1e5f067a9cf2166ac\",\n  \"b2182bef8a62fddbc7f7f7f7d1e5f067a9cf2166ac\",\n  \"b2182bd6604df4a582fddbc7d1e5f092c5de4393c32166ac\",\n  \"b2182bd6604df4a582fddbc7f7f7f7d1e5f092c5de4393c32166ac\",\n  \"67001fb2182bd6604df4a582fddbc7d1e5f092c5de4393c32166ac053061\",\n  \"67001fb2182bd6604df4a582fddbc7f7f7f7d1e5f092c5de4393c32166ac053061\"\n).map(colors);\n\nexport default ramp(scheme);\n", "import colors from \"../colors.js\";\nimport ramp from \"../ramp.js\";\n\nexport var scheme = new Array(3).concat(\n  \"ef8a62ffffff999999\",\n  \"ca0020f4a582bababa404040\",\n  \"ca0020f4a582ffffffbababa404040\",\n  \"b2182bef8a62fddbc7e0e0e09999994d4d4d\",\n  \"b2182bef8a62fddbc7ffffffe0e0e09999994d4d4d\",\n  \"b2182bd6604df4a582fddbc7e0e0e0bababa8787874d4d4d\",\n  \"b2182bd6604df4a582fddbc7ffffffe0e0e0bababa8787874d4d4d\",\n  \"67001fb2182bd6604df4a582fddbc7e0e0e0bababa8787874d4d4d1a1a1a\",\n  \"67001fb2182bd6604df4a582fddbc7ffffffe0e0e0bababa8787874d4d4d1a1a1a\"\n).map(colors);\n\nexport default ramp(scheme);\n", "import colors from \"../colors.js\";\nimport ramp from \"../ramp.js\";\n\nexport var scheme = new Array(3).concat(\n  \"fc8d59ffffbf91bfdb\",\n  \"d7191cfdae61abd9e92c7bb6\",\n  \"d7191cfdae61ffffbfabd9e92c7bb6\",\n  \"d73027fc8d59fee090e0f3f891bfdb4575b4\",\n  \"d73027fc8d59fee090ffffbfe0f3f891bfdb4575b4\",\n  \"d73027f46d43fdae61fee090e0f3f8abd9e974add14575b4\",\n  \"d73027f46d43fdae61fee090ffffbfe0f3f8abd9e974add14575b4\",\n  \"a50026d73027f46d43fdae61fee090e0f3f8abd9e974add14575b4313695\",\n  \"a50026d73027f46d43fdae61fee090ffffbfe0f3f8abd9e974add14575b4313695\"\n).map(colors);\n\nexport default ramp(scheme);\n", "import colors from \"../colors.js\";\nimport ramp from \"../ramp.js\";\n\nexport var scheme = new Array(3).concat(\n  \"fc8d59ffffbf91cf60\",\n  \"d7191cfdae61a6d96a1a9641\",\n  \"d7191cfdae61ffffbfa6d96a1a9641\",\n  \"d73027fc8d59fee08bd9ef8b91cf601a9850\",\n  \"d73027fc8d59fee08bffffbfd9ef8b91cf601a9850\",\n  \"d73027f46d43fdae61fee08bd9ef8ba6d96a66bd631a9850\",\n  \"d73027f46d43fdae61fee08bffffbfd9ef8ba6d96a66bd631a9850\",\n  \"a50026d73027f46d43fdae61fee08bd9ef8ba6d96a66bd631a9850006837\",\n  \"a50026d73027f46d43fdae61fee08bffffbfd9ef8ba6d96a66bd631a9850006837\"\n).map(colors);\n\nexport default ramp(scheme);\n", "import colors from \"../colors.js\";\nimport ramp from \"../ramp.js\";\n\nexport var scheme = new Array(3).concat(\n  \"fc8d59ffffbf99d594\",\n  \"d7191cfdae61abdda42b83ba\",\n  \"d7191cfdae61ffffbfabdda42b83ba\",\n  \"d53e4ffc8d59fee08be6f59899d5943288bd\",\n  \"d53e4ffc8d59fee08bffffbfe6f59899d5943288bd\",\n  \"d53e4ff46d43fdae61fee08be6f598abdda466c2a53288bd\",\n  \"d53e4ff46d43fdae61fee08bffffbfe6f598abdda466c2a53288bd\",\n  \"9e0142d53e4ff46d43fdae61fee08be6f598abdda466c2a53288bd5e4fa2\",\n  \"9e0142d53e4ff46d43fdae61fee08bffffbfe6f598abdda466c2a53288bd5e4fa2\"\n).map(colors);\n\nexport default ramp(scheme);\n", "import colors from \"../colors.js\";\nimport ramp from \"../ramp.js\";\n\nexport var scheme = new Array(3).concat(\n  \"e5f5f999d8c92ca25f\",\n  \"edf8fbb2e2e266c2a4238b45\",\n  \"edf8fbb2e2e266c2a42ca25f006d2c\",\n  \"edf8fbccece699d8c966c2a42ca25f006d2c\",\n  \"edf8fbccece699d8c966c2a441ae76238b45005824\",\n  \"f7fcfde5f5f9ccece699d8c966c2a441ae76238b45005824\",\n  \"f7fcfde5f5f9ccece699d8c966c2a441ae76238b45006d2c00441b\"\n).map(colors);\n\nexport default ramp(scheme);\n", "import colors from \"../colors.js\";\nimport ramp from \"../ramp.js\";\n\nexport var scheme = new Array(3).concat(\n  \"e0ecf49ebcda8856a7\",\n  \"edf8fbb3cde38c96c688419d\",\n  \"edf8fbb3cde38c96c68856a7810f7c\",\n  \"edf8fbbfd3e69ebcda8c96c68856a7810f7c\",\n  \"edf8fbbfd3e69ebcda8c96c68c6bb188419d6e016b\",\n  \"f7fcfde0ecf4bfd3e69ebcda8c96c68c6bb188419d6e016b\",\n  \"f7fcfde0ecf4bfd3e69ebcda8c96c68c6bb188419d810f7c4d004b\"\n).map(colors);\n\nexport default ramp(scheme);\n", "import colors from \"../colors.js\";\nimport ramp from \"../ramp.js\";\n\nexport var scheme = new Array(3).concat(\n  \"e0f3dba8ddb543a2ca\",\n  \"f0f9e8bae4bc7bccc42b8cbe\",\n  \"f0f9e8bae4bc7bccc443a2ca0868ac\",\n  \"f0f9e8ccebc5a8ddb57bccc443a2ca0868ac\",\n  \"f0f9e8ccebc5a8ddb57bccc44eb3d32b8cbe08589e\",\n  \"f7fcf0e0f3dbccebc5a8ddb57bccc44eb3d32b8cbe08589e\",\n  \"f7fcf0e0f3dbccebc5a8ddb57bccc44eb3d32b8cbe0868ac084081\"\n).map(colors);\n\nexport default ramp(scheme);\n", "import colors from \"../colors.js\";\nimport ramp from \"../ramp.js\";\n\nexport var scheme = new Array(3).concat(\n  \"fee8c8fdbb84e34a33\",\n  \"fef0d9fdcc8afc8d59d7301f\",\n  \"fef0d9fdcc8afc8d59e34a33b30000\",\n  \"fef0d9fdd49efdbb84fc8d59e34a33b30000\",\n  \"fef0d9fdd49efdbb84fc8d59ef6548d7301f990000\",\n  \"fff7ecfee8c8fdd49efdbb84fc8d59ef6548d7301f990000\",\n  \"fff7ecfee8c8fdd49efdbb84fc8d59ef6548d7301fb300007f0000\"\n).map(colors);\n\nexport default ramp(scheme);\n", "import colors from \"../colors.js\";\nimport ramp from \"../ramp.js\";\n\nexport var scheme = new Array(3).concat(\n  \"ece2f0a6bddb1c9099\",\n  \"f6eff7bdc9e167a9cf02818a\",\n  \"f6eff7bdc9e167a9cf1c9099016c59\",\n  \"f6eff7d0d1e6a6bddb67a9cf1c9099016c59\",\n  \"f6eff7d0d1e6a6bddb67a9cf3690c002818a016450\",\n  \"fff7fbece2f0d0d1e6a6bddb67a9cf3690c002818a016450\",\n  \"fff7fbece2f0d0d1e6a6bddb67a9cf3690c002818a016c59014636\"\n).map(colors);\n\nexport default ramp(scheme);\n", "import colors from \"../colors.js\";\nimport ramp from \"../ramp.js\";\n\nexport var scheme = new Array(3).concat(\n  \"ece7f2a6bddb2b8cbe\",\n  \"f1eef6bdc9e174a9cf0570b0\",\n  \"f1eef6bdc9e174a9cf2b8cbe045a8d\",\n  \"f1eef6d0d1e6a6bddb74a9cf2b8cbe045a8d\",\n  \"f1eef6d0d1e6a6bddb74a9cf3690c00570b0034e7b\",\n  \"fff7fbece7f2d0d1e6a6bddb74a9cf3690c00570b0034e7b\",\n  \"fff7fbece7f2d0d1e6a6bddb74a9cf3690c00570b0045a8d023858\"\n).map(colors);\n\nexport default ramp(scheme);\n", "import colors from \"../colors.js\";\nimport ramp from \"../ramp.js\";\n\nexport var scheme = new Array(3).concat(\n  \"e7e1efc994c7dd1c77\",\n  \"f1eef6d7b5d8df65b0ce1256\",\n  \"f1eef6d7b5d8df65b0dd1c77980043\",\n  \"f1eef6d4b9dac994c7df65b0dd1c77980043\",\n  \"f1eef6d4b9dac994c7df65b0e7298ace125691003f\",\n  \"f7f4f9e7e1efd4b9dac994c7df65b0e7298ace125691003f\",\n  \"f7f4f9e7e1efd4b9dac994c7df65b0e7298ace125698004367001f\"\n).map(colors);\n\nexport default ramp(scheme);\n", "import colors from \"../colors.js\";\nimport ramp from \"../ramp.js\";\n\nexport var scheme = new Array(3).concat(\n  \"fde0ddfa9fb5c51b8a\",\n  \"feebe2fbb4b9f768a1ae017e\",\n  \"feebe2fbb4b9f768a1c51b8a7a0177\",\n  \"feebe2fcc5c0fa9fb5f768a1c51b8a7a0177\",\n  \"feebe2fcc5c0fa9fb5f768a1dd3497ae017e7a0177\",\n  \"fff7f3fde0ddfcc5c0fa9fb5f768a1dd3497ae017e7a0177\",\n  \"fff7f3fde0ddfcc5c0fa9fb5f768a1dd3497ae017e7a017749006a\"\n).map(colors);\n\nexport default ramp(scheme);\n", "import colors from \"../colors.js\";\nimport ramp from \"../ramp.js\";\n\nexport var scheme = new Array(3).concat(\n  \"edf8b17fcdbb2c7fb8\",\n  \"ffffcca1dab441b6c4225ea8\",\n  \"ffffcca1dab441b6c42c7fb8253494\",\n  \"ffffccc7e9b47fcdbb41b6c42c7fb8253494\",\n  \"ffffccc7e9b47fcdbb41b6c41d91c0225ea80c2c84\",\n  \"ffffd9edf8b1c7e9b47fcdbb41b6c41d91c0225ea80c2c84\",\n  \"ffffd9edf8b1c7e9b47fcdbb41b6c41d91c0225ea8253494081d58\"\n).map(colors);\n\nexport default ramp(scheme);\n", "import colors from \"../colors.js\";\nimport ramp from \"../ramp.js\";\n\nexport var scheme = new Array(3).concat(\n  \"f7fcb9addd8e31a354\",\n  \"ffffccc2e69978c679238443\",\n  \"ffffccc2e69978c67931a354006837\",\n  \"ffffccd9f0a3addd8e78c67931a354006837\",\n  \"ffffccd9f0a3addd8e78c67941ab5d238443005a32\",\n  \"ffffe5f7fcb9d9f0a3addd8e78c67941ab5d238443005a32\",\n  \"ffffe5f7fcb9d9f0a3addd8e78c67941ab5d238443006837004529\"\n).map(colors);\n\nexport default ramp(scheme);\n", "import colors from \"../colors.js\";\nimport ramp from \"../ramp.js\";\n\nexport var scheme = new Array(3).concat(\n  \"fff7bcfec44fd95f0e\",\n  \"ffffd4fed98efe9929cc4c02\",\n  \"ffffd4fed98efe9929d95f0e993404\",\n  \"ffffd4fee391fec44ffe9929d95f0e993404\",\n  \"ffffd4fee391fec44ffe9929ec7014cc4c028c2d04\",\n  \"ffffe5fff7bcfee391fec44ffe9929ec7014cc4c028c2d04\",\n  \"ffffe5fff7bcfee391fec44ffe9929ec7014cc4c02993404662506\"\n).map(colors);\n\nexport default ramp(scheme);\n", "import colors from \"../colors.js\";\nimport ramp from \"../ramp.js\";\n\nexport var scheme = new Array(3).concat(\n  \"ffeda0feb24cf03b20\",\n  \"ffffb2fecc5cfd8d3ce31a1c\",\n  \"ffffb2fecc5cfd8d3cf03b20bd0026\",\n  \"ffffb2fed976feb24cfd8d3cf03b20bd0026\",\n  \"ffffb2fed976feb24cfd8d3cfc4e2ae31a1cb10026\",\n  \"ffffccffeda0fed976feb24cfd8d3cfc4e2ae31a1cb10026\",\n  \"ffffccffeda0fed976feb24cfd8d3cfc4e2ae31a1cbd0026800026\"\n).map(colors);\n\nexport default ramp(scheme);\n", "import colors from \"../colors.js\";\nimport ramp from \"../ramp.js\";\n\nexport var scheme = new Array(3).concat(\n  \"deebf79ecae13182bd\",\n  \"eff3ffbdd7e76baed62171b5\",\n  \"eff3ffbdd7e76baed63182bd08519c\",\n  \"eff3ffc6dbef9ecae16baed63182bd08519c\",\n  \"eff3ffc6dbef9ecae16baed64292c62171b5084594\",\n  \"f7fbffdeebf7c6dbef9ecae16baed64292c62171b5084594\",\n  \"f7fbffdeebf7c6dbef9ecae16baed64292c62171b508519c08306b\"\n).map(colors);\n\nexport default ramp(scheme);\n", "import colors from \"../colors.js\";\nimport ramp from \"../ramp.js\";\n\nexport var scheme = new Array(3).concat(\n  \"e5f5e0a1d99b31a354\",\n  \"edf8e9bae4b374c476238b45\",\n  \"edf8e9bae4b374c47631a354006d2c\",\n  \"edf8e9c7e9c0a1d99b74c47631a354006d2c\",\n  \"edf8e9c7e9c0a1d99b74c47641ab5d238b45005a32\",\n  \"f7fcf5e5f5e0c7e9c0a1d99b74c47641ab5d238b45005a32\",\n  \"f7fcf5e5f5e0c7e9c0a1d99b74c47641ab5d238b45006d2c00441b\"\n).map(colors);\n\nexport default ramp(scheme);\n", "import colors from \"../colors.js\";\nimport ramp from \"../ramp.js\";\n\nexport var scheme = new Array(3).concat(\n  \"f0f0f0bdbdbd636363\",\n  \"f7f7f7cccccc969696525252\",\n  \"f7f7f7cccccc969696636363252525\",\n  \"f7f7f7d9d9d9bdbdbd969696636363252525\",\n  \"f7f7f7d9d9d9bdbdbd969696737373525252252525\",\n  \"fffffff0f0f0d9d9d9bdbdbd969696737373525252252525\",\n  \"fffffff0f0f0d9d9d9bdbdbd969696737373525252252525000000\"\n).map(colors);\n\nexport default ramp(scheme);\n", "import colors from \"../colors.js\";\nimport ramp from \"../ramp.js\";\n\nexport var scheme = new Array(3).concat(\n  \"efedf5bcbddc756bb1\",\n  \"f2f0f7cbc9e29e9ac86a51a3\",\n  \"f2f0f7cbc9e29e9ac8756bb154278f\",\n  \"f2f0f7dadaebbcbddc9e9ac8756bb154278f\",\n  \"f2f0f7dadaebbcbddc9e9ac8807dba6a51a34a1486\",\n  \"fcfbfdefedf5dadaebbcbddc9e9ac8807dba6a51a34a1486\",\n  \"fcfbfdefedf5dadaebbcbddc9e9ac8807dba6a51a354278f3f007d\"\n).map(colors);\n\nexport default ramp(scheme);\n", "import colors from \"../colors.js\";\nimport ramp from \"../ramp.js\";\n\nexport var scheme = new Array(3).concat(\n  \"fee0d2fc9272de2d26\",\n  \"fee5d9fcae91fb6a4acb181d\",\n  \"fee5d9fcae91fb6a4ade2d26a50f15\",\n  \"fee5d9fcbba1fc9272fb6a4ade2d26a50f15\",\n  \"fee5d9fcbba1fc9272fb6a4aef3b2ccb181d99000d\",\n  \"fff5f0fee0d2fcbba1fc9272fb6a4aef3b2ccb181d99000d\",\n  \"fff5f0fee0d2fcbba1fc9272fb6a4aef3b2ccb181da50f1567000d\"\n).map(colors);\n\nexport default ramp(scheme);\n", "import colors from \"../colors.js\";\nimport ramp from \"../ramp.js\";\n\nexport var scheme = new Array(3).concat(\n  \"fee6cefdae6be6550d\",\n  \"feeddefdbe85fd8d3cd94701\",\n  \"feeddefdbe85fd8d3ce6550da63603\",\n  \"feeddefdd0a2fdae6bfd8d3ce6550da63603\",\n  \"feeddefdd0a2fdae6bfd8d3cf16913d948018c2d04\",\n  \"fff5ebfee6cefdd0a2fdae6bfd8d3cf16913d948018c2d04\",\n  \"fff5ebfee6cefdd0a2fdae6bfd8d3cf16913d94801a636037f2704\"\n).map(colors);\n\nexport default ramp(scheme);\n", "export default function(t) {\n  t = Math.max(0, Math.min(1, t));\n  return \"rgb(\"\n      + Math.max(0, Math.min(255, Math.round(-4.54 - t * (35.34 - t * (2381.73 - t * (6402.7 - t * (7024.72 - t * 2710.57))))))) + \", \"\n      + Math.max(0, Math.min(255, Math.round(32.49 + t * (170.73 + t * (52.82 - t * (131.46 - t * (176.58 - t * 67.37))))))) + \", \"\n      + Math.max(0, Math.min(255, Math.round(81.24 + t * (442.36 - t * (2482.43 - t * (6167.24 - t * (6614.94 - t * 2475.67)))))))\n      + \")\";\n}\n", "export default function(constructor, factory, prototype) {\n  constructor.prototype = factory.prototype = prototype;\n  prototype.constructor = constructor;\n}\n\nexport function extend(parent, definition) {\n  var prototype = Object.create(parent.prototype);\n  for (var key in definition) prototype[key] = definition[key];\n  return prototype;\n}\n", "import define, {extend} from \"./define.js\";\n\nexport function Color() {}\n\nexport var darker = 0.7;\nexport var brighter = 1 / darker;\n\nvar reI = \"\\\\s*([+-]?\\\\d+)\\\\s*\",\n    reN = \"\\\\s*([+-]?\\\\d*\\\\.?\\\\d+(?:[eE][+-]?\\\\d+)?)\\\\s*\",\n    reP = \"\\\\s*([+-]?\\\\d*\\\\.?\\\\d+(?:[eE][+-]?\\\\d+)?)%\\\\s*\",\n    reHex = /^#([0-9a-f]{3,8})$/,\n    reRgbInteger = new RegExp(\"^rgb\\\\(\" + [reI, reI, reI] + \"\\\\)$\"),\n    reRgbPercent = new RegExp(\"^rgb\\\\(\" + [reP, reP, reP] + \"\\\\)$\"),\n    reRgbaInteger = new RegExp(\"^rgba\\\\(\" + [reI, reI, reI, reN] + \"\\\\)$\"),\n    reRgbaPercent = new RegExp(\"^rgba\\\\(\" + [reP, reP, reP, reN] + \"\\\\)$\"),\n    reHslPercent = new RegExp(\"^hsl\\\\(\" + [reN, reP, reP] + \"\\\\)$\"),\n    reHslaPercent = new RegExp(\"^hsla\\\\(\" + [reN, reP, reP, reN] + \"\\\\)$\");\n\nvar named = {\n  aliceblue: 0xf0f8ff,\n  antiquewhite: 0xfaebd7,\n  aqua: 0x00ffff,\n  aquamarine: 0x7fffd4,\n  azure: 0xf0ffff,\n  beige: 0xf5f5dc,\n  bisque: 0xffe4c4,\n  black: 0x000000,\n  blanchedalmond: 0xffebcd,\n  blue: 0x0000ff,\n  blueviolet: 0x8a2be2,\n  brown: 0xa52a2a,\n  burlywood: 0xdeb887,\n  cadetblue: 0x5f9ea0,\n  chartreuse: 0x7fff00,\n  chocolate: 0xd2691e,\n  coral: 0xff7f50,\n  cornflowerblue: 0x6495ed,\n  cornsilk: 0xfff8dc,\n  crimson: 0xdc143c,\n  cyan: 0x00ffff,\n  darkblue: 0x00008b,\n  darkcyan: 0x008b8b,\n  darkgoldenrod: 0xb8860b,\n  darkgray: 0xa9a9a9,\n  darkgreen: 0x006400,\n  darkgrey: 0xa9a9a9,\n  darkkhaki: 0xbdb76b,\n  darkmagenta: 0x8b008b,\n  darkolivegreen: 0x556b2f,\n  darkorange: 0xff8c00,\n  darkorchid: 0x9932cc,\n  darkred: 0x8b0000,\n  darksalmon: 0xe9967a,\n  darkseagreen: 0x8fbc8f,\n  darkslateblue: 0x483d8b,\n  darkslategray: 0x2f4f4f,\n  darkslategrey: 0x2f4f4f,\n  darkturquoise: 0x00ced1,\n  darkviolet: 0x9400d3,\n  deeppink: 0xff1493,\n  deepskyblue: 0x00bfff,\n  dimgray: 0x696969,\n  dimgrey: 0x696969,\n  dodgerblue: 0x1e90ff,\n  firebrick: 0xb22222,\n  floralwhite: 0xfffaf0,\n  forestgreen: 0x228b22,\n  fuchsia: 0xff00ff,\n  gainsboro: 0xdcdcdc,\n  ghostwhite: 0xf8f8ff,\n  gold: 0xffd700,\n  goldenrod: 0xdaa520,\n  gray: 0x808080,\n  green: 0x008000,\n  greenyellow: 0xadff2f,\n  grey: 0x808080,\n  honeydew: 0xf0fff0,\n  hotpink: 0xff69b4,\n  indianred: 0xcd5c5c,\n  indigo: 0x4b0082,\n  ivory: 0xfffff0,\n  khaki: 0xf0e68c,\n  lavender: 0xe6e6fa,\n  lavenderblush: 0xfff0f5,\n  lawngreen: 0x7cfc00,\n  lemonchiffon: 0xfffacd,\n  lightblue: 0xadd8e6,\n  lightcoral: 0xf08080,\n  lightcyan: 0xe0ffff,\n  lightgoldenrodyellow: 0xfafad2,\n  lightgray: 0xd3d3d3,\n  lightgreen: 0x90ee90,\n  lightgrey: 0xd3d3d3,\n  lightpink: 0xffb6c1,\n  lightsalmon: 0xffa07a,\n  lightseagreen: 0x20b2aa,\n  lightskyblue: 0x87cefa,\n  lightslategray: 0x778899,\n  lightslategrey: 0x778899,\n  lightsteelblue: 0xb0c4de,\n  lightyellow: 0xffffe0,\n  lime: 0x00ff00,\n  limegreen: 0x32cd32,\n  linen: 0xfaf0e6,\n  magenta: 0xff00ff,\n  maroon: 0x800000,\n  mediumaquamarine: 0x66cdaa,\n  mediumblue: 0x0000cd,\n  mediumorchid: 0xba55d3,\n  mediumpurple: 0x9370db,\n  mediumseagreen: 0x3cb371,\n  mediumslateblue: 0x7b68ee,\n  mediumspringgreen: 0x00fa9a,\n  mediumturquoise: 0x48d1cc,\n  mediumvioletred: 0xc71585,\n  midnightblue: 0x191970,\n  mintcream: 0xf5fffa,\n  mistyrose: 0xffe4e1,\n  moccasin: 0xffe4b5,\n  navajowhite: 0xffdead,\n  navy: 0x000080,\n  oldlace: 0xfdf5e6,\n  olive: 0x808000,\n  olivedrab: 0x6b8e23,\n  orange: 0xffa500,\n  orangered: 0xff4500,\n  orchid: 0xda70d6,\n  palegoldenrod: 0xeee8aa,\n  palegreen: 0x98fb98,\n  paleturquoise: 0xafeeee,\n  palevioletred: 0xdb7093,\n  papayawhip: 0xffefd5,\n  peachpuff: 0xffdab9,\n  peru: 0xcd853f,\n  pink: 0xffc0cb,\n  plum: 0xdda0dd,\n  powderblue: 0xb0e0e6,\n  purple: 0x800080,\n  rebeccapurple: 0x663399,\n  red: 0xff0000,\n  rosybrown: 0xbc8f8f,\n  royalblue: 0x4169e1,\n  saddlebrown: 0x8b4513,\n  salmon: 0xfa8072,\n  sandybrown: 0xf4a460,\n  seagreen: 0x2e8b57,\n  seashell: 0xfff5ee,\n  sienna: 0xa0522d,\n  silver: 0xc0c0c0,\n  skyblue: 0x87ceeb,\n  slateblue: 0x6a5acd,\n  slategray: 0x708090,\n  slategrey: 0x708090,\n  snow: 0xfffafa,\n  springgreen: 0x00ff7f,\n  steelblue: 0x4682b4,\n  tan: 0xd2b48c,\n  teal: 0x008080,\n  thistle: 0xd8bfd8,\n  tomato: 0xff6347,\n  turquoise: 0x40e0d0,\n  violet: 0xee82ee,\n  wheat: 0xf5deb3,\n  white: 0xffffff,\n  whitesmoke: 0xf5f5f5,\n  yellow: 0xffff00,\n  yellowgreen: 0x9acd32\n};\n\ndefine(Color, color, {\n  copy: function(channels) {\n    return Object.assign(new this.constructor, this, channels);\n  },\n  displayable: function() {\n    return this.rgb().displayable();\n  },\n  hex: color_formatHex, // Deprecated! Use color.formatHex.\n  formatHex: color_formatHex,\n  formatHsl: color_formatHsl,\n  formatRgb: color_formatRgb,\n  toString: color_formatRgb\n});\n\nfunction color_formatHex() {\n  return this.rgb().formatHex();\n}\n\nfunction color_formatHsl() {\n  return hslConvert(this).formatHsl();\n}\n\nfunction color_formatRgb() {\n  return this.rgb().formatRgb();\n}\n\nexport default function color(format) {\n  var m, l;\n  format = (format + \"\").trim().toLowerCase();\n  return (m = reHex.exec(format)) ? (l = m[1].length, m = parseInt(m[1], 16), l === 6 ? rgbn(m) // #ff0000\n      : l === 3 ? new Rgb((m >> 8 & 0xf) | (m >> 4 & 0xf0), (m >> 4 & 0xf) | (m & 0xf0), ((m & 0xf) << 4) | (m & 0xf), 1) // #f00\n      : l === 8 ? rgba(m >> 24 & 0xff, m >> 16 & 0xff, m >> 8 & 0xff, (m & 0xff) / 0xff) // #ff000000\n      : l === 4 ? rgba((m >> 12 & 0xf) | (m >> 8 & 0xf0), (m >> 8 & 0xf) | (m >> 4 & 0xf0), (m >> 4 & 0xf) | (m & 0xf0), (((m & 0xf) << 4) | (m & 0xf)) / 0xff) // #f000\n      : null) // invalid hex\n      : (m = reRgbInteger.exec(format)) ? new Rgb(m[1], m[2], m[3], 1) // rgb(255, 0, 0)\n      : (m = reRgbPercent.exec(format)) ? new Rgb(m[1] * 255 / 100, m[2] * 255 / 100, m[3] * 255 / 100, 1) // rgb(100%, 0%, 0%)\n      : (m = reRgbaInteger.exec(format)) ? rgba(m[1], m[2], m[3], m[4]) // rgba(255, 0, 0, 1)\n      : (m = reRgbaPercent.exec(format)) ? rgba(m[1] * 255 / 100, m[2] * 255 / 100, m[3] * 255 / 100, m[4]) // rgb(100%, 0%, 0%, 1)\n      : (m = reHslPercent.exec(format)) ? hsla(m[1], m[2] / 100, m[3] / 100, 1) // hsl(120, 50%, 50%)\n      : (m = reHslaPercent.exec(format)) ? hsla(m[1], m[2] / 100, m[3] / 100, m[4]) // hsla(120, 50%, 50%, 1)\n      : named.hasOwnProperty(format) ? rgbn(named[format]) // eslint-disable-line no-prototype-builtins\n      : format === \"transparent\" ? new Rgb(NaN, NaN, NaN, 0)\n      : null;\n}\n\nfunction rgbn(n) {\n  return new Rgb(n >> 16 & 0xff, n >> 8 & 0xff, n & 0xff, 1);\n}\n\nfunction rgba(r, g, b, a) {\n  if (a <= 0) r = g = b = NaN;\n  return new Rgb(r, g, b, a);\n}\n\nexport function rgbConvert(o) {\n  if (!(o instanceof Color)) o = color(o);\n  if (!o) return new Rgb;\n  o = o.rgb();\n  return new Rgb(o.r, o.g, o.b, o.opacity);\n}\n\nexport function rgb(r, g, b, opacity) {\n  return arguments.length === 1 ? rgbConvert(r) : new Rgb(r, g, b, opacity == null ? 1 : opacity);\n}\n\nexport function Rgb(r, g, b, opacity) {\n  this.r = +r;\n  this.g = +g;\n  this.b = +b;\n  this.opacity = +opacity;\n}\n\ndefine(Rgb, rgb, extend(Color, {\n  brighter: function(k) {\n    k = k == null ? brighter : Math.pow(brighter, k);\n    return new Rgb(this.r * k, this.g * k, this.b * k, this.opacity);\n  },\n  darker: function(k) {\n    k = k == null ? darker : Math.pow(darker, k);\n    return new Rgb(this.r * k, this.g * k, this.b * k, this.opacity);\n  },\n  rgb: function() {\n    return this;\n  },\n  displayable: function() {\n    return (-0.5 <= this.r && this.r < 255.5)\n        && (-0.5 <= this.g && this.g < 255.5)\n        && (-0.5 <= this.b && this.b < 255.5)\n        && (0 <= this.opacity && this.opacity <= 1);\n  },\n  hex: rgb_formatHex, // Deprecated! Use color.formatHex.\n  formatHex: rgb_formatHex,\n  formatRgb: rgb_formatRgb,\n  toString: rgb_formatRgb\n}));\n\nfunction rgb_formatHex() {\n  return \"#\" + hex(this.r) + hex(this.g) + hex(this.b);\n}\n\nfunction rgb_formatRgb() {\n  var a = this.opacity; a = isNaN(a) ? 1 : Math.max(0, Math.min(1, a));\n  return (a === 1 ? \"rgb(\" : \"rgba(\")\n      + Math.max(0, Math.min(255, Math.round(this.r) || 0)) + \", \"\n      + Math.max(0, Math.min(255, Math.round(this.g) || 0)) + \", \"\n      + Math.max(0, Math.min(255, Math.round(this.b) || 0))\n      + (a === 1 ? \")\" : \", \" + a + \")\");\n}\n\nfunction hex(value) {\n  value = Math.max(0, Math.min(255, Math.round(value) || 0));\n  return (value < 16 ? \"0\" : \"\") + value.toString(16);\n}\n\nfunction hsla(h, s, l, a) {\n  if (a <= 0) h = s = l = NaN;\n  else if (l <= 0 || l >= 1) h = s = NaN;\n  else if (s <= 0) h = NaN;\n  return new Hsl(h, s, l, a);\n}\n\nexport function hslConvert(o) {\n  if (o instanceof Hsl) return new Hsl(o.h, o.s, o.l, o.opacity);\n  if (!(o instanceof Color)) o = color(o);\n  if (!o) return new Hsl;\n  if (o instanceof Hsl) return o;\n  o = o.rgb();\n  var r = o.r / 255,\n      g = o.g / 255,\n      b = o.b / 255,\n      min = Math.min(r, g, b),\n      max = Math.max(r, g, b),\n      h = NaN,\n      s = max - min,\n      l = (max + min) / 2;\n  if (s) {\n    if (r === max) h = (g - b) / s + (g < b) * 6;\n    else if (g === max) h = (b - r) / s + 2;\n    else h = (r - g) / s + 4;\n    s /= l < 0.5 ? max + min : 2 - max - min;\n    h *= 60;\n  } else {\n    s = l > 0 && l < 1 ? 0 : h;\n  }\n  return new Hsl(h, s, l, o.opacity);\n}\n\nexport function hsl(h, s, l, opacity) {\n  return arguments.length === 1 ? hslConvert(h) : new Hsl(h, s, l, opacity == null ? 1 : opacity);\n}\n\nfunction Hsl(h, s, l, opacity) {\n  this.h = +h;\n  this.s = +s;\n  this.l = +l;\n  this.opacity = +opacity;\n}\n\ndefine(Hsl, hsl, extend(Color, {\n  brighter: function(k) {\n    k = k == null ? brighter : Math.pow(brighter, k);\n    return new Hsl(this.h, this.s, this.l * k, this.opacity);\n  },\n  darker: function(k) {\n    k = k == null ? darker : Math.pow(darker, k);\n    return new Hsl(this.h, this.s, this.l * k, this.opacity);\n  },\n  rgb: function() {\n    var h = this.h % 360 + (this.h < 0) * 360,\n        s = isNaN(h) || isNaN(this.s) ? 0 : this.s,\n        l = this.l,\n        m2 = l + (l < 0.5 ? l : 1 - l) * s,\n        m1 = 2 * l - m2;\n    return new Rgb(\n      hsl2rgb(h >= 240 ? h - 240 : h + 120, m1, m2),\n      hsl2rgb(h, m1, m2),\n      hsl2rgb(h < 120 ? h + 240 : h - 120, m1, m2),\n      this.opacity\n    );\n  },\n  displayable: function() {\n    return (0 <= this.s && this.s <= 1 || isNaN(this.s))\n        && (0 <= this.l && this.l <= 1)\n        && (0 <= this.opacity && this.opacity <= 1);\n  },\n  formatHsl: function() {\n    var a = this.opacity; a = isNaN(a) ? 1 : Math.max(0, Math.min(1, a));\n    return (a === 1 ? \"hsl(\" : \"hsla(\")\n        + (this.h || 0) + \", \"\n        + (this.s || 0) * 100 + \"%, \"\n        + (this.l || 0) * 100 + \"%\"\n        + (a === 1 ? \")\" : \", \" + a + \")\");\n  }\n}));\n\n/* From FvD 13.37, CSS Color Module Level 3 */\nfunction hsl2rgb(h, m1, m2) {\n  return (h < 60 ? m1 + (m2 - m1) * h / 60\n      : h < 180 ? m2\n      : h < 240 ? m1 + (m2 - m1) * (240 - h) / 60\n      : m1) * 255;\n}\n", "export const radians = Math.PI / 180;\nexport const degrees = 180 / Math.PI;\n", "import define, {extend} from \"./define.js\";\nimport {Color, rgbConvert, Rgb} from \"./color.js\";\nimport {degrees, radians} from \"./math.js\";\n\n// https://observablehq.com/@mbostock/lab-and-rgb\nconst K = 18,\n    Xn = 0.96422,\n    Yn = 1,\n    Zn = 0.82521,\n    t0 = 4 / 29,\n    t1 = 6 / 29,\n    t2 = 3 * t1 * t1,\n    t3 = t1 * t1 * t1;\n\nfunction labConvert(o) {\n  if (o instanceof Lab) return new Lab(o.l, o.a, o.b, o.opacity);\n  if (o instanceof Hcl) return hcl2lab(o);\n  if (!(o instanceof Rgb)) o = rgbConvert(o);\n  var r = rgb2lrgb(o.r),\n      g = rgb2lrgb(o.g),\n      b = rgb2lrgb(o.b),\n      y = xyz2lab((0.2225045 * r + 0.7168786 * g + 0.0606169 * b) / Yn), x, z;\n  if (r === g && g === b) x = z = y; else {\n    x = xyz2lab((0.4360747 * r + 0.3850649 * g + 0.1430804 * b) / Xn);\n    z = xyz2lab((0.0139322 * r + 0.0971045 * g + 0.7141733 * b) / Zn);\n  }\n  return new Lab(116 * y - 16, 500 * (x - y), 200 * (y - z), o.opacity);\n}\n\nexport function gray(l, opacity) {\n  return new Lab(l, 0, 0, opacity == null ? 1 : opacity);\n}\n\nexport default function lab(l, a, b, opacity) {\n  return arguments.length === 1 ? labConvert(l) : new Lab(l, a, b, opacity == null ? 1 : opacity);\n}\n\nexport function Lab(l, a, b, opacity) {\n  this.l = +l;\n  this.a = +a;\n  this.b = +b;\n  this.opacity = +opacity;\n}\n\ndefine(Lab, lab, extend(Color, {\n  brighter: function(k) {\n    return new Lab(this.l + K * (k == null ? 1 : k), this.a, this.b, this.opacity);\n  },\n  darker: function(k) {\n    return new Lab(this.l - K * (k == null ? 1 : k), this.a, this.b, this.opacity);\n  },\n  rgb: function() {\n    var y = (this.l + 16) / 116,\n        x = isNaN(this.a) ? y : y + this.a / 500,\n        z = isNaN(this.b) ? y : y - this.b / 200;\n    x = Xn * lab2xyz(x);\n    y = Yn * lab2xyz(y);\n    z = Zn * lab2xyz(z);\n    return new Rgb(\n      lrgb2rgb( 3.1338561 * x - 1.6168667 * y - 0.4906146 * z),\n      lrgb2rgb(-0.9787684 * x + 1.9161415 * y + 0.0334540 * z),\n      lrgb2rgb( 0.0719453 * x - 0.2289914 * y + 1.4052427 * z),\n      this.opacity\n    );\n  }\n}));\n\nfunction xyz2lab(t) {\n  return t > t3 ? Math.pow(t, 1 / 3) : t / t2 + t0;\n}\n\nfunction lab2xyz(t) {\n  return t > t1 ? t * t * t : t2 * (t - t0);\n}\n\nfunction lrgb2rgb(x) {\n  return 255 * (x <= 0.0031308 ? 12.92 * x : 1.055 * Math.pow(x, 1 / 2.4) - 0.055);\n}\n\nfunction rgb2lrgb(x) {\n  return (x /= 255) <= 0.04045 ? x / 12.92 : Math.pow((x + 0.055) / 1.055, 2.4);\n}\n\nfunction hclConvert(o) {\n  if (o instanceof Hcl) return new Hcl(o.h, o.c, o.l, o.opacity);\n  if (!(o instanceof Lab)) o = labConvert(o);\n  if (o.a === 0 && o.b === 0) return new Hcl(NaN, 0 < o.l && o.l < 100 ? 0 : NaN, o.l, o.opacity);\n  var h = Math.atan2(o.b, o.a) * degrees;\n  return new Hcl(h < 0 ? h + 360 : h, Math.sqrt(o.a * o.a + o.b * o.b), o.l, o.opacity);\n}\n\nexport function lch(l, c, h, opacity) {\n  return arguments.length === 1 ? hclConvert(l) : new Hcl(h, c, l, opacity == null ? 1 : opacity);\n}\n\nexport function hcl(h, c, l, opacity) {\n  return arguments.length === 1 ? hclConvert(h) : new Hcl(h, c, l, opacity == null ? 1 : opacity);\n}\n\nexport function Hcl(h, c, l, opacity) {\n  this.h = +h;\n  this.c = +c;\n  this.l = +l;\n  this.opacity = +opacity;\n}\n\nfunction hcl2lab(o) {\n  if (isNaN(o.h)) return new Lab(o.l, 0, 0, o.opacity);\n  var h = o.h * radians;\n  return new Lab(o.l, Math.cos(h) * o.c, Math.sin(h) * o.c, o.opacity);\n}\n\ndefine(Hcl, hcl, extend(Color, {\n  brighter: function(k) {\n    return new Hcl(this.h, this.c, this.l + K * (k == null ? 1 : k), this.opacity);\n  },\n  darker: function(k) {\n    return new Hcl(this.h, this.c, this.l - K * (k == null ? 1 : k), this.opacity);\n  },\n  rgb: function() {\n    return hcl2lab(this).rgb();\n  }\n}));\n", "import define, {extend} from \"./define.js\";\nimport {Color, rgbConvert, Rgb, darker, brighter} from \"./color.js\";\nimport {degrees, radians} from \"./math.js\";\n\nvar A = -0.14861,\n    B = +1.78277,\n    C = -0.29227,\n    D = -0.90649,\n    E = +1.97294,\n    ED = E * D,\n    EB = E * B,\n    BC_DA = B * C - D * A;\n\nfunction cubehelixConvert(o) {\n  if (o instanceof Cubehelix) return new Cubehelix(o.h, o.s, o.l, o.opacity);\n  if (!(o instanceof Rgb)) o = rgbConvert(o);\n  var r = o.r / 255,\n      g = o.g / 255,\n      b = o.b / 255,\n      l = (BC_DA * b + ED * r - EB * g) / (BC_DA + ED - EB),\n      bl = b - l,\n      k = (E * (g - l) - C * bl) / D,\n      s = Math.sqrt(k * k + bl * bl) / (E * l * (1 - l)), // NaN if l=0 or l=1\n      h = s ? Math.atan2(k, bl) * degrees - 120 : NaN;\n  return new Cubehelix(h < 0 ? h + 360 : h, s, l, o.opacity);\n}\n\nexport default function cubehelix(h, s, l, opacity) {\n  return arguments.length === 1 ? cubehelixConvert(h) : new Cubehelix(h, s, l, opacity == null ? 1 : opacity);\n}\n\nexport function Cubehelix(h, s, l, opacity) {\n  this.h = +h;\n  this.s = +s;\n  this.l = +l;\n  this.opacity = +opacity;\n}\n\ndefine(Cubehelix, cubehelix, extend(Color, {\n  brighter: function(k) {\n    k = k == null ? brighter : Math.pow(brighter, k);\n    return new Cubehelix(this.h, this.s, this.l * k, this.opacity);\n  },\n  darker: function(k) {\n    k = k == null ? darker : Math.pow(darker, k);\n    return new Cubehelix(this.h, this.s, this.l * k, this.opacity);\n  },\n  rgb: function() {\n    var h = isNaN(this.h) ? 0 : (this.h + 120) * radians,\n        l = +this.l,\n        a = isNaN(this.s) ? 0 : this.s * l * (1 - l),\n        cosh = Math.cos(h),\n        sinh = Math.sin(h);\n    return new Rgb(\n      255 * (l + a * (A * cosh + B * sinh)),\n      255 * (l + a * (C * cosh + D * sinh)),\n      255 * (l + a * (E * cosh)),\n      this.opacity\n    );\n  }\n}));\n", "import {cubehelix} from \"d3-color\";\nimport {interpolateCubehelixLong} from \"d3-interpolate\";\n\nexport default interpolateCubehelixLong(cubehelix(300, 0.5, 0.0), cubehelix(-240, 0.5, 1.0));\n", "import {cubehelix} from \"d3-color\";\nimport {interpolateCubehelixLong} from \"d3-interpolate\";\n\nexport var warm = interpolateCubehelixLong(cubehelix(-100, 0.75, 0.35), cubehelix(80, 1.50, 0.8));\n\nexport var cool = interpolateCubehelixLong(cubehelix(260, 0.75, 0.35), cubehelix(80, 1.50, 0.8));\n\nvar c = cubehelix();\n\nexport default function(t) {\n  if (t < 0 || t > 1) t -= Math.floor(t);\n  var ts = Math.abs(t - 0.5);\n  c.h = 360 * t - 100;\n  c.s = 1.5 - 1.5 * ts;\n  c.l = 0.8 - 0.9 * ts;\n  return c + \"\";\n}\n", "import {rgb} from \"d3-color\";\n\nvar c = rgb(),\n    pi_1_3 = Math.PI / 3,\n    pi_2_3 = Math.PI * 2 / 3;\n\nexport default function(t) {\n  var x;\n  t = (0.5 - t) * Math.PI;\n  c.r = 255 * (x = Math.sin(t)) * x;\n  c.g = 255 * (x = Math.sin(t + pi_1_3)) * x;\n  c.b = 255 * (x = Math.sin(t + pi_2_3)) * x;\n  return c + \"\";\n}\n", "export default function(t) {\n  t = Math.max(0, Math.min(1, t));\n  return \"rgb(\"\n      + Math.max(0, Math.min(255, Math.round(34.61 + t * (1172.33 - t * (10793.56 - t * (33300.12 - t * (38394.49 - t * 14825.05))))))) + \", \"\n      + Math.max(0, Math.min(255, Math.round(23.31 + t * (557.33 + t * (1225.33 - t * (3574.96 - t * (1073.77 + t * 707.56))))))) + \", \"\n      + Math.max(0, Math.min(255, Math.round(27.2 + t * (3211.1 - t * (15327.97 - t * (27814 - t * (22569.18 - t * 6838.66)))))))\n      + \")\";\n}\n", "import colors from \"../colors.js\";\n\nfunction ramp(range) {\n  var n = range.length;\n  return function(t) {\n    return range[Math.max(0, Math.min(n - 1, Math.floor(t * n)))];\n  };\n}\n\nexport default ramp(colors(\"44015444025645045745055946075a46085c460a5d460b5e470d60470e6147106347116447136548146748166848176948186a481a6c481b6d481c6e481d6f481f70482071482173482374482475482576482677482878482979472a7a472c7a472d7b472e7c472f7d46307e46327e46337f463480453581453781453882443983443a83443b84433d84433e85423f854240864241864142874144874045884046883f47883f48893e49893e4a893e4c8a3d4d8a3d4e8a3c4f8a3c508b3b518b3b528b3a538b3a548c39558c39568c38588c38598c375a8c375b8d365c8d365d8d355e8d355f8d34608d34618d33628d33638d32648e32658e31668e31678e31688e30698e306a8e2f6b8e2f6c8e2e6d8e2e6e8e2e6f8e2d708e2d718e2c718e2c728e2c738e2b748e2b758e2a768e2a778e2a788e29798e297a8e297b8e287c8e287d8e277e8e277f8e27808e26818e26828e26828e25838e25848e25858e24868e24878e23888e23898e238a8d228b8d228c8d228d8d218e8d218f8d21908d21918c20928c20928c20938c1f948c1f958b1f968b1f978b1f988b1f998a1f9a8a1e9b8a1e9c891e9d891f9e891f9f881fa0881fa1881fa1871fa28720a38620a48621a58521a68522a78522a88423a98324aa8325ab8225ac8226ad8127ad8128ae8029af7f2ab07f2cb17e2db27d2eb37c2fb47c31b57b32b67a34b67935b77937b87838b9773aba763bbb753dbc743fbc7340bd7242be7144bf7046c06f48c16e4ac16d4cc26c4ec36b50c46a52c56954c56856c66758c7655ac8645cc8635ec96260ca6063cb5f65cb5e67cc5c69cd5b6ccd5a6ece5870cf5773d05675d05477d1537ad1517cd2507fd34e81d34d84d44b86d54989d5488bd6468ed64590d74393d74195d84098d83e9bd93c9dd93ba0da39a2da37a5db36a8db34aadc32addc30b0dd2fb2dd2db5de2bb8de29bade28bddf26c0df25c2df23c5e021c8e020cae11fcde11dd0e11cd2e21bd5e21ad8e219dae319dde318dfe318e2e418e5e419e7e419eae51aece51befe51cf1e51df4e61ef6e620f8e621fbe723fde725\"));\n\nexport var magma = ramp(colors(\"00000401000501010601010802010902020b02020d03030f03031204041405041606051806051a07061c08071e0907200a08220b09240c09260d0a290e0b2b100b2d110c2f120d31130d34140e36150e38160f3b180f3d19103f1a10421c10441d11471e114920114b21114e22115024125325125527125829115a2a115c2c115f2d11612f116331116533106734106936106b38106c390f6e3b0f703d0f713f0f72400f74420f75440f764510774710784910784a10794c117a4e117b4f127b51127c52137c54137d56147d57157e59157e5a167e5c167f5d177f5f187f601880621980641a80651a80671b80681c816a1c816b1d816d1d816e1e81701f81721f817320817521817621817822817922827b23827c23827e24828025828125818326818426818627818827818928818b29818c29818e2a81902a81912b81932b80942c80962c80982d80992d809b2e7f9c2e7f9e2f7fa02f7fa1307ea3307ea5317ea6317da8327daa337dab337cad347cae347bb0357bb2357bb3367ab5367ab73779b83779ba3878bc3978bd3977bf3a77c03a76c23b75c43c75c53c74c73d73c83e73ca3e72cc3f71cd4071cf4070d0416fd2426fd3436ed5446dd6456cd8456cd9466bdb476adc4869de4968df4a68e04c67e24d66e34e65e44f64e55064e75263e85362e95462ea5661eb5760ec5860ed5a5fee5b5eef5d5ef05f5ef1605df2625df2645cf3655cf4675cf4695cf56b5cf66c5cf66e5cf7705cf7725cf8745cf8765cf9785df9795df97b5dfa7d5efa7f5efa815ffb835ffb8560fb8761fc8961fc8a62fc8c63fc8e64fc9065fd9266fd9467fd9668fd9869fd9a6afd9b6bfe9d6cfe9f6dfea16efea36ffea571fea772fea973feaa74feac76feae77feb078feb27afeb47bfeb67cfeb77efeb97ffebb81febd82febf84fec185fec287fec488fec68afec88cfeca8dfecc8ffecd90fecf92fed194fed395fed597fed799fed89afdda9cfddc9efddea0fde0a1fde2a3fde3a5fde5a7fde7a9fde9aafdebacfcecaefceeb0fcf0b2fcf2b4fcf4b6fcf6b8fcf7b9fcf9bbfcfbbdfcfdbf\"));\n\nexport var inferno = ramp(colors(\"00000401000501010601010802010a02020c02020e03021004031204031405041706041907051b08051d09061f0a07220b07240c08260d08290e092b10092d110a30120a32140b34150b37160b39180c3c190c3e1b0c411c0c431e0c451f0c48210c4a230c4c240c4f260c51280b53290b552b0b572d0b592f0a5b310a5c320a5e340a5f3609613809623909633b09643d09653e0966400a67420a68440a68450a69470b6a490b6a4a0c6b4c0c6b4d0d6c4f0d6c510e6c520e6d540f6d550f6d57106e59106e5a116e5c126e5d126e5f136e61136e62146e64156e65156e67166e69166e6a176e6c186e6d186e6f196e71196e721a6e741a6e751b6e771c6d781c6d7a1d6d7c1d6d7d1e6d7f1e6c801f6c82206c84206b85216b87216b88226a8a226a8c23698d23698f24699025689225689326679526679727669827669a28659b29649d29649f2a63a02a63a22b62a32c61a52c60a62d60a82e5fa92e5eab2f5ead305dae305cb0315bb1325ab3325ab43359b63458b73557b93556ba3655bc3754bd3853bf3952c03a51c13a50c33b4fc43c4ec63d4dc73e4cc83f4bca404acb4149cc4248ce4347cf4446d04545d24644d34743d44842d54a41d74b3fd84c3ed94d3dda4e3cdb503bdd513ade5238df5337e05536e15635e25734e35933e45a31e55c30e65d2fe75e2ee8602de9612bea632aeb6429eb6628ec6726ed6925ee6a24ef6c23ef6e21f06f20f1711ff1731df2741cf3761bf37819f47918f57b17f57d15f67e14f68013f78212f78410f8850ff8870ef8890cf98b0bf98c0af98e09fa9008fa9207fa9407fb9606fb9706fb9906fb9b06fb9d07fc9f07fca108fca309fca50afca60cfca80dfcaa0ffcac11fcae12fcb014fcb216fcb418fbb61afbb81dfbba1ffbbc21fbbe23fac026fac228fac42afac62df9c72ff9c932f9cb35f8cd37f8cf3af7d13df7d340f6d543f6d746f5d949f5db4cf4dd4ff4df53f4e156f3e35af3e55df2e661f2e865f2ea69f1ec6df1ed71f1ef75f1f179f2f27df2f482f3f586f3f68af4f88ef5f992f6fa96f8fb9af9fc9dfafda1fcffa4\"));\n\nexport var plasma = ramp(colors(\"0d088710078813078916078a19068c1b068d1d068e20068f2206902406912605912805922a05932c05942e05952f059631059733059735049837049938049a3a049a3c049b3e049c3f049c41049d43039e44039e46039f48039f4903a04b03a14c02a14e02a25002a25102a35302a35502a45601a45801a45901a55b01a55c01a65e01a66001a66100a76300a76400a76600a76700a86900a86a00a86c00a86e00a86f00a87100a87201a87401a87501a87701a87801a87a02a87b02a87d03a87e03a88004a88104a78305a78405a78606a68707a68808a68a09a58b0aa58d0ba58e0ca48f0da4910ea3920fa39410a29511a19613a19814a099159f9a169f9c179e9d189d9e199da01a9ca11b9ba21d9aa31e9aa51f99a62098a72197a82296aa2395ab2494ac2694ad2793ae2892b02991b12a90b22b8fb32c8eb42e8db52f8cb6308bb7318ab83289ba3388bb3488bc3587bd3786be3885bf3984c03a83c13b82c23c81c33d80c43e7fc5407ec6417dc7427cc8437bc9447aca457acb4679cc4778cc4977cd4a76ce4b75cf4c74d04d73d14e72d24f71d35171d45270d5536fd5546ed6556dd7566cd8576bd9586ada5a6ada5b69db5c68dc5d67dd5e66de5f65de6164df6263e06363e16462e26561e26660e3685fe4695ee56a5de56b5de66c5ce76e5be76f5ae87059e97158e97257ea7457eb7556eb7655ec7754ed7953ed7a52ee7b51ef7c51ef7e50f07f4ff0804ef1814df1834cf2844bf3854bf3874af48849f48948f58b47f58c46f68d45f68f44f79044f79143f79342f89441f89540f9973ff9983ef99a3efa9b3dfa9c3cfa9e3bfb9f3afba139fba238fca338fca537fca636fca835fca934fdab33fdac33fdae32fdaf31fdb130fdb22ffdb42ffdb52efeb72dfeb82cfeba2cfebb2bfebd2afebe2afec029fdc229fdc328fdc527fdc627fdc827fdca26fdcb26fccd25fcce25fcd025fcd225fbd324fbd524fbd724fad824fada24f9dc24f9dd25f8df25f8e125f7e225f7e425f6e626f6e826f5e926f5eb27f4ed27f3ee27f3f027f2f227f1f426f1f525f0f724f0f921\"));\n", "import {\n    schemeCategory10,\n    schemeAccent,\n    schemeDark2,\n    schemePaired,\n    schemePastel1,\n    schemePastel2,\n    schemeSet1,\n    schemeSet2,\n    schemeSet3,\n} from 'd3-scale-chromatic'\n\nexport const categoricalColorSchemes = {\n    nivo: ['#e8c1a0', '#f47560', '#f1e15b', '#e8a838', '#61cdbb', '#97e3d5'],\n    category10: schemeCategory10,\n    accent: schemeAccent,\n    dark2: schemeDark2,\n    paired: schemePaired,\n    pastel1: schemePastel1,\n    pastel2: schemePastel2,\n    set1: schemeSet1,\n    set2: schemeSet2,\n    set3: schemeSet3,\n}\n\nexport type CategoricalColorSchemeId = keyof typeof categoricalColorSchemes\n\nexport const categoricalColorSchemeIds = Object.keys(\n    categoricalColorSchemes\n) as CategoricalColorSchemeId[]\n", "import {\n    schemeBrBG,\n    interpolateBrBG,\n    schemePRGn,\n    interpolatePRGn,\n    schemePiYG,\n    interpolatePiYG,\n    schemePuOr,\n    interpolatePuOr,\n    schemeRdBu,\n    interpolateRdBu,\n    schemeRdGy,\n    interpolateRdGy,\n    schemeRdYlBu,\n    interpolateRdYlBu,\n    schemeRdYlGn,\n    interpolateRdYlGn,\n    schemeSpectral,\n    interpolateSpectral,\n} from 'd3-scale-chromatic'\n\n// Diverging color schemes support a size k ranging from 3 to 11\nexport const divergingColorSchemes = {\n    brown_blueGreen: schemeBrBG,\n    purpleRed_green: schemePRGn,\n    pink_yellowGreen: schemePiYG,\n    purple_orange: schemePuOr,\n    red_blue: schemeRdBu,\n    red_grey: schemeRdGy,\n    red_yellow_blue: schemeRdYlBu,\n    red_yellow_green: schemeRdYlGn,\n    spectral: schemeSpectral,\n}\n\nexport type DivergingColorSchemeId = keyof typeof divergingColorSchemes\n\nexport const divergingColorSchemeIds = Object.keys(\n    divergingColorSchemes\n) as DivergingColorSchemeId[]\n\nexport const divergingColorInterpolators = {\n    brown_blueGreen: interpolateBrBG,\n    purpleRed_green: interpolatePRGn,\n    pink_yellowGreen: interpolatePiYG,\n    purple_orange: interpolatePuOr,\n    red_blue: interpolateRdBu,\n    red_grey: interpolateRdGy,\n    red_yellow_blue: interpolateRdYlBu,\n    red_yellow_green: interpolateRdYlGn,\n    spectral: interpolateSpectral,\n}\n\nexport type DivergingColorInterpolatorId = keyof typeof divergingColorInterpolators\n", "import {\n    // single hue\n    schemeBlues,\n    interpolateBlues,\n    schemeGreens,\n    interpolateGreens,\n    schemeGreys,\n    interpolateGreys,\n    schemeOranges,\n    interpolateOranges,\n    schemePurples,\n    interpolatePurples,\n    schemeReds,\n    interpolateReds,\n    // multi hue\n    schemeBuGn,\n    interpolateBuGn,\n    schemeBuPu,\n    interpolateBuPu,\n    schemeGnBu,\n    interpolateGnBu,\n    schemeOrRd,\n    interpolateOrRd,\n    schemePuBuGn,\n    interpolatePuBuGn,\n    schemePuBu,\n    interpolatePuBu,\n    schemePuRd,\n    interpolatePuRd,\n    schemeRdPu,\n    interpolateRdPu,\n    schemeYlGnBu,\n    interpolateYlGnBu,\n    schemeYlGn,\n    interpolateYlGn,\n    schemeYlOrBr,\n    interpolateYlOrBr,\n    schemeYlOrRd,\n    interpolateYlOrRd,\n    interpolateTurbo,\n    interpolateViridis,\n    interpolateInferno,\n    interpolateMagma,\n    interpolatePlasma,\n    interpolateCividis,\n    interpolateWarm,\n    interpolateCool,\n    interpolateCubehelixDefault,\n} from 'd3-scale-chromatic'\n\n// Sequential, single-hue color schemes support a size k ranging from 3 to 9\n// Sequential, multi-hue color schemes support a size k ranging from 3 to 9\nexport const sequentialColorSchemes = {\n    // single hue\n    blues: schemeBlues,\n    greens: schemeGreens,\n    greys: schemeGreys,\n    oranges: schemeOranges,\n    purples: schemePurples,\n    reds: schemeReds,\n    // multi hue\n    blue_green: schemeBuGn,\n    blue_purple: schemeBuPu,\n    green_blue: schemeGnBu,\n    orange_red: schemeOrRd,\n    purple_blue_green: schemePuBuGn,\n    purple_blue: schemePuBu,\n    purple_red: schemePuRd,\n    red_purple: schemeRdPu,\n    yellow_green_blue: schemeYlGnBu,\n    yellow_green: schemeYlGn,\n    yellow_orange_brown: schemeYlOrBr,\n    yellow_orange_red: schemeYlOrRd,\n}\n\nexport type SequentialColorSchemeId = keyof typeof sequentialColorSchemes\n\nexport const sequentialColorSchemeIds = Object.keys(\n    sequentialColorSchemes\n) as SequentialColorSchemeId[]\n\nexport const sequentialColorInterpolators = {\n    // single hue\n    blues: interpolateBlues,\n    greens: interpolateGreens,\n    greys: interpolateGreys,\n    oranges: interpolateOranges,\n    purples: interpolatePurples,\n    reds: interpolateReds,\n    // multi hue\n    turbo: interpolateTurbo,\n    viridis: interpolateViridis,\n    inferno: interpolateInferno,\n    magma: interpolateMagma,\n    plasma: interpolatePlasma,\n    cividis: interpolateCividis,\n    warm: interpolateWarm,\n    cool: interpolateCool,\n    cubehelixDefault: interpolateCubehelixDefault,\n    blue_green: interpolateBuGn,\n    blue_purple: interpolateBuPu,\n    green_blue: interpolateGnBu,\n    orange_red: interpolateOrRd,\n    purple_blue_green: interpolatePuBuGn,\n    purple_blue: interpolatePuBu,\n    purple_red: interpolatePuRd,\n    red_purple: interpolateRdPu,\n    yellow_green_blue: interpolateYlGnBu,\n    yellow_green: interpolateYlGn,\n    yellow_orange_brown: interpolateYlOrBr,\n    yellow_orange_red: interpolateYlOrRd,\n}\n\nexport type SequentialColorInterpolatorId = keyof typeof sequentialColorInterpolators\n", "import {\n    categoricalColorSchemes,\n    categoricalColorSchemeIds,\n    CategoricalColorSchemeId,\n} from './categorical'\nimport { divergingColorSchemes, divergingColorSchemeIds, DivergingColorSchemeId } from './diverging'\nimport {\n    sequentialColorSchemes,\n    sequentialColorSchemeIds,\n    SequentialColorSchemeId,\n} from './sequential'\n\nexport const colorSchemes = {\n    ...categoricalColorSchemes,\n    ...divergingColorSchemes,\n    ...sequentialColorSchemes,\n}\n\nexport type ColorSchemeId =\n    | CategoricalColorSchemeId\n    | DivergingColorSchemeId\n    | SequentialColorSchemeId\n\nexport const colorSchemeIds = Object.keys(colorSchemes) as ColorSchemeId[]\n\nexport const isCategoricalColorScheme = (\n    scheme: ColorSchemeId\n): scheme is CategoricalColorSchemeId =>\n    categoricalColorSchemeIds.includes(scheme as CategoricalColorSchemeId)\n\nexport const isDivergingColorScheme = (scheme: ColorSchemeId): scheme is DivergingColorSchemeId =>\n    divergingColorSchemeIds.includes(scheme as DivergingColorSchemeId)\n\nexport const isSequentialColorScheme = (scheme: ColorSchemeId): scheme is SequentialColorSchemeId =>\n    sequentialColorSchemeIds.includes(scheme as SequentialColorSchemeId)\n", "import { interpolateRainbow, interpolateSinebow } from 'd3-scale-chromatic'\n\nexport const cyclicalColorInterpolators = {\n    rainbow: interpolateRainbow,\n    sinebow: interpolateSinebow,\n}\n\nexport type CyclicalColorInterpolatorId = keyof typeof cyclicalColorInterpolators\n", "import { divergingColorInterpolators, DivergingColorInterpolatorId } from './diverging'\nimport { sequentialColorInterpolators, SequentialColorInterpolatorId } from './sequential'\nimport { cyclicalColorInterpolators, CyclicalColorInterpolatorId } from './cyclical'\n\nexport const colorInterpolators = {\n    ...divergingColorInterpolators,\n    ...sequentialColorInterpolators,\n    ...cyclicalColorInterpolators,\n}\n\nexport type ColorInterpolatorId =\n    | DivergingColorInterpolatorId\n    | SequentialColorInterpolatorId\n    | CyclicalColorInterpolatorId\n\nexport const colorInterpolatorIds = Object.keys(colorInterpolators) as ColorInterpolatorId[]\n", "import { useMemo } from 'react'\nimport { get, isPlainObject } from 'lodash'\nimport { rgb, RGBColor } from 'd3-color'\nimport { Theme } from '@nivo/core'\n\nexport type ColorModifierBrightness = ['brighter', number]\n\nexport type ColorModifierDarkness = ['darker', number]\n\nexport type ColorModifierOpacity = ['opacity', number]\n\nexport type ColorModifier = ColorModifierBrightness | ColorModifierDarkness | ColorModifierOpacity\n\nexport type ColorModifierFunction = (color: RGBColor) => RGBColor\n\nexport type InheritedColorConfigStaticColor = string\n\nexport type InheritedColorConfigCustomFunction<Datum> = (d: Datum, ...drest: Datum[]) => string\n\nexport interface InheritedColorConfigFromTheme {\n    theme: string\n}\n\nexport interface InheritedColorConfigFromContext {\n    from: string\n    modifiers?: ColorModifier[]\n}\n\nexport type InheritedColorConfig<Datum> =\n    | InheritedColorConfigStaticColor\n    | InheritedColorConfigCustomFunction<Datum>\n    | InheritedColorConfigFromTheme\n    | InheritedColorConfigFromContext\n\nconst isInheritedColorConfigFromTheme = <Datum>(\n    config: InheritedColorConfig<Datum>\n): config is InheritedColorConfigFromTheme => {\n    return (config as InheritedColorConfigFromTheme).theme !== undefined\n}\n\nconst isInheritedColorConfigFromContext = <Datum>(\n    config: InheritedColorConfig<Datum>\n): config is InheritedColorConfigFromContext => {\n    return (config as InheritedColorConfigFromContext).from !== undefined\n}\n\n/**\n * Create a color generator for items which\n * might inherit from parent context,\n * for example labels, outlines…\n *\n * Support the following strategies:\n * - custom function\n * - color from theme\n * - color from parent, with optional color modifiers\n * - static color\n */\nexport const getInheritedColorGenerator = <Datum = any>(\n    config: InheritedColorConfig<Datum>,\n    theme?: Theme\n) => {\n    // user provided function\n    if (typeof config === 'function') {\n        return config\n    }\n\n    if (isPlainObject(config)) {\n        // use color from theme\n        if (isInheritedColorConfigFromTheme(config)) {\n            if (theme === undefined) {\n                throw new Error(`Unable to use color from theme as no theme was provided`)\n            }\n\n            const themeColor = get(theme, config.theme)\n            if (themeColor === undefined) {\n                throw new Error(`Color from theme is undefined at path: '${config.theme}'`)\n            }\n\n            return () => themeColor\n        }\n\n        // use color from parent with optional color modifiers\n        if (isInheritedColorConfigFromContext(config)) {\n            const getColor = (d: Datum) => get(d, config.from)\n\n            if (Array.isArray(config.modifiers)) {\n                const modifiers: ColorModifierFunction[] = []\n                for (const modifier of config.modifiers) {\n                    const [modifierType, amount] = modifier\n                    if (modifierType === 'brighter') {\n                        modifiers.push(color => color.brighter(amount))\n                    } else if (modifierType === 'darker') {\n                        modifiers.push(color => color.darker(amount))\n                    } else if (modifierType === 'opacity') {\n                        modifiers.push(color => {\n                            color.opacity = amount\n\n                            return color\n                        })\n                    } else {\n                        throw new Error(\n                            `Invalid color modifier: '${modifierType}', must be one of: 'brighter', 'darker', 'opacity'`\n                        )\n                    }\n                }\n\n                if (modifiers.length === 0) return getColor\n\n                return (datum: Datum) =>\n                    modifiers\n                        .reduce((color, modify) => modify(color), rgb(getColor(datum)))\n                        .toString()\n            }\n\n            // no modifier\n            return getColor\n        }\n\n        throw new Error(\n            `Invalid color spec, you should either specify 'theme' or 'from' when using a config object`\n        )\n    }\n\n    // use provided color statically\n    return () => config as string\n}\n\nexport const useInheritedColor = <Datum = any>(\n    config: InheritedColorConfig<Datum>,\n    theme?: Theme\n) => useMemo(() => getInheritedColorGenerator<Datum>(config, theme), [config, theme])\n", "import PropTypes from 'prop-types'\nimport { colorSchemeIds } from './schemes'\n\nexport const ordinalColorsPropType = PropTypes.oneOfType([\n    PropTypes.func,\n    PropTypes.arrayOf(PropTypes.string),\n    PropTypes.shape({\n        scheme: PropTypes.oneOf(colorSchemeIds).isRequired,\n        size: PropTypes.number,\n    }),\n    PropTypes.shape({\n        datum: PropTypes.string.isRequired,\n    }),\n    PropTypes.string,\n])\n\nexport const inheritedColorPropType = PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.func,\n    PropTypes.shape({\n        theme: PropTypes.string.isRequired,\n    }),\n    PropTypes.shape({\n        from: PropTypes.string.isRequired,\n        modifiers: PropTypes.arrayOf(PropTypes.array),\n    }),\n])\n", "import { useMemo } from 'react'\nimport { scaleSequential } from 'd3-scale'\nimport { colorInterpolators, ColorInterpolatorId } from '../schemes'\n\nexport interface SequentialColorScaleConfig {\n    type: 'sequential'\n    scheme?: ColorInterpolatorId\n    minValue?: number\n    maxValue?: number\n}\n\nexport interface SequentialColorScaleValues {\n    min: number\n    max: number\n}\n\nexport const sequentialColorScaleDefaults: {\n    scheme: ColorInterpolatorId\n} = {\n    scheme: 'turbo',\n}\n\nexport const getSequentialColorScale = (\n    {\n        scheme = sequentialColorScaleDefaults.scheme,\n        minValue,\n        maxValue,\n    }: SequentialColorScaleConfig,\n    values: SequentialColorScaleValues\n) => {\n    const min = minValue !== undefined ? minValue : values.min\n    const max = maxValue !== undefined ? maxValue : values.max\n\n    return scaleSequential().domain([min, max]).interpolator(colorInterpolators[scheme])\n}\n\nexport const useSequentialColorScale = (\n    config: SequentialColorScaleConfig,\n    values: SequentialColorScaleValues\n) => useMemo(() => getSequentialColorScale(config, values), [config, values])\n", "import { useMemo } from 'react'\nimport { scaleDiverging } from 'd3-scale'\nimport { colorInterpolators, ColorInterpolatorId } from '../schemes'\n\nexport interface DivergingColorScaleConfig {\n    type: 'diverging'\n    scheme?: ColorInterpolatorId\n    minValue?: number\n    maxValue?: number\n    divergeAt?: number\n}\n\nexport interface DivergingColorScaleValues {\n    min: number\n    max: number\n}\n\nexport const divergingColorScaleDefaults: {\n    scheme: ColorInterpolatorId\n    divergeAt: number\n} = {\n    scheme: 'red_yellow_blue',\n    divergeAt: 0.5,\n}\n\nexport const getDivergingColorScale = (\n    {\n        scheme = divergingColorScaleDefaults.scheme,\n        divergeAt = divergingColorScaleDefaults.divergeAt,\n        minValue,\n        maxValue,\n    }: DivergingColorScaleConfig,\n    values: DivergingColorScaleValues\n) => {\n    const min = minValue !== undefined ? minValue : values.min\n    const max = maxValue !== undefined ? maxValue : values.max\n    const domain = [min, min + (max - min) / 2, max]\n\n    const interpolator = colorInterpolators[scheme]\n    const offset = 0.5 - divergeAt\n    const offsetInterpolator = (t: number) => interpolator(t + offset)\n\n    return scaleDiverging(offsetInterpolator).domain(domain).clamp(true)\n}\n\nexport const useDivergingColorScale = (\n    config: DivergingColorScaleConfig,\n    values: DivergingColorScaleValues\n) => useMemo(() => getDivergingColorScale(config, values), [config, values])\n", "import { useMemo } from 'react'\nimport { scaleQuantize } from 'd3-scale'\nimport { colorInterpolators, ColorInterpolatorId } from '../schemes'\n\n// colors from a scheme\nexport interface QuantizeColorScaleSchemeConfig {\n    type: 'quantize'\n    domain?: [number, number]\n    scheme?: ColorInterpolatorId\n    steps?: number\n}\n\n// explicit colors\nexport interface QuantizeColorScaleColorsConfig {\n    type: 'quantize'\n    domain?: [number, number]\n    colors: string[]\n}\n\nexport type QuantizeColorScaleConfig =\n    | QuantizeColorScaleSchemeConfig\n    | QuantizeColorScaleColorsConfig\n\nexport interface QuantizeColorScaleValues {\n    min: number\n    max: number\n}\n\nexport const quantizeColorScaleDefaults: {\n    scheme: ColorInterpolatorId\n    steps: NonNullable<QuantizeColorScaleSchemeConfig['steps']>\n} = {\n    scheme: 'turbo',\n    steps: 7,\n}\n\nexport const getQuantizeColorScale = (\n    config: QuantizeColorScaleConfig,\n    values: QuantizeColorScaleValues\n) => {\n    const colorScale = scaleQuantize<string>()\n        .domain(config.domain || [values.min, values.max])\n        .nice()\n\n    if ('colors' in config) {\n        colorScale.range(config.colors)\n    } else {\n        const scheme = config.scheme || quantizeColorScaleDefaults.scheme\n        const steps = config.steps === undefined ? quantizeColorScaleDefaults.steps : config.steps\n        const interpolator = colorInterpolators[scheme]\n        const colors = Array.from({ length: steps }).map((_, step) =>\n            interpolator(step * (1 / (steps - 1)))\n        )\n\n        colorScale.range(colors)\n    }\n\n    return colorScale\n}\n\nexport const useQuantizeColorScale = (\n    config: QuantizeColorScaleConfig,\n    values: QuantizeColorScaleValues\n) => useMemo(() => getQuantizeColorScale(config, values), [config, values])\n", "import { useMemo } from 'react'\nimport { ScaleDiverging, ScaleQuantize, ScaleSequential, scaleLinear } from 'd3-scale'\nimport {\n    SequentialColorScaleConfig,\n    SequentialColorScaleValues,\n    getSequentialColorScale,\n} from './sequentialColorScale'\nimport {\n    DivergingColorScaleConfig,\n    DivergingColorScaleValues,\n    getDivergingColorScale,\n} from './divergingColorScale'\nimport {\n    QuantizeColorScaleConfig,\n    QuantizeColorScaleValues,\n    getQuantizeColorScale,\n} from './quantizeColorScale'\n\nexport type ContinuousColorScaleConfig =\n    | SequentialColorScaleConfig\n    | DivergingColorScaleConfig\n    | QuantizeColorScaleConfig\n\nexport type ContinuousColorScaleValues =\n    | SequentialColorScaleValues\n    | DivergingColorScaleValues\n    | QuantizeColorScaleValues\n\nconst isSequentialColorScaleConfig = (\n    config: ContinuousColorScaleConfig\n): config is SequentialColorScaleConfig => config.type === 'sequential'\n\nconst isDivergingColorScaleConfig = (\n    config: ContinuousColorScaleConfig\n): config is DivergingColorScaleConfig => config.type === 'diverging'\n\nconst isQuantizeColorScaleConfig = (\n    config: ContinuousColorScaleConfig\n): config is QuantizeColorScaleConfig => config.type === 'quantize'\n\nexport const getContinuousColorScale = <Config extends ContinuousColorScaleConfig>(\n    config: Config,\n    values: ContinuousColorScaleValues\n) => {\n    if (isSequentialColorScaleConfig(config)) {\n        return getSequentialColorScale(config, values)\n    }\n\n    if (isDivergingColorScaleConfig(config)) {\n        return getDivergingColorScale(config, values)\n    }\n\n    if (isQuantizeColorScaleConfig(config)) {\n        return getQuantizeColorScale(config, values)\n    }\n\n    throw new Error('Invalid continuous color scale config')\n}\n\nexport const useContinuousColorScale = (\n    config: ContinuousColorScaleConfig,\n    values: ContinuousColorScaleValues\n) => useMemo(() => getContinuousColorScale(config, values), [config, values])\n\nexport const computeContinuousColorScaleColorStops = (\n    scale: ScaleSequential<string> | ScaleDiverging<string> | ScaleQuantize<string>,\n    steps = 16\n) => {\n    const domain = scale.domain()\n\n    // quantize\n    if ('thresholds' in scale) {\n        const stops: {\n            key: string\n            offset: number\n            stopColor: string\n        }[] = []\n\n        const normalizedScale = scaleLinear().domain(domain).range([0, 1])\n        scale.range().forEach((color, index) => {\n            const [start, end] = scale.invertExtent(color)\n\n            stops.push({\n                key: `${index}.0`,\n                offset: normalizedScale(start),\n                stopColor: color,\n            })\n            stops.push({\n                key: `${index}.1`,\n                offset: normalizedScale(end),\n                stopColor: color,\n            })\n        })\n\n        return stops\n    }\n\n    const colorStopsScale = scale.copy()\n    if (domain.length === 2) {\n        // sequential\n        colorStopsScale.domain([0, 1])\n    } else if (domain.length === 3) {\n        // diverging\n        colorStopsScale.domain([0, 0.5, 1])\n    }\n\n    return ((colorStopsScale as any).ticks(steps) as number[]).map((value: number) => ({\n        key: `${value}`,\n        offset: value,\n        stopColor: `${colorStopsScale(value)}`,\n    }))\n}\n", "import { useMemo } from 'react'\nimport { get, isPlainObject } from 'lodash'\nimport { scaleOrdinal } from 'd3-scale'\nimport {\n    ColorSchemeId,\n    colorSchemes,\n    isCategoricalColorScheme,\n    isSequentialColorScheme,\n    isDivergingColorScheme,\n} from '../schemes'\n\n/**\n * Static color.\n */\nexport type OrdinalColorScaleConfigStaticColor = string\n\n/**\n * User defined function, receiving the current datum.\n */\nexport type OrdinalColorScaleConfigCustomFunction<Datum> = (d: Datum) => string\n\n/**\n * Pre-defined color scheme.\n */\nexport interface OrdinalColorScaleConfigScheme {\n    scheme: ColorSchemeId\n    // size is useful for diverging & sequential colors,\n    // as they are array of array, whereas categorical colors\n    // are simple arrays, if the size isn't specified,\n    // the bigger array will be selected, this means the 11th\n    // for diverging colors and 9th for sequential ones.\n    size?: number\n}\n\n/**\n * User defined colors.\n */\nexport type OrdinalColorScaleConfigCustomColors = string[]\n\n/**\n * Get color from datum.\n */\nexport interface OrdinalColorScaleConfigDatumProperty {\n    // path to the color property\n    datum: string\n}\n\nexport type OrdinalColorScaleConfig<Datum = any> =\n    | OrdinalColorScaleConfigStaticColor\n    | OrdinalColorScaleConfigCustomFunction<Datum>\n    | OrdinalColorScaleConfigScheme\n    | OrdinalColorScaleConfigCustomColors\n    | OrdinalColorScaleConfigDatumProperty\n\nconst isOrdinalColorScaleConfigScheme = <Datum>(\n    config: OrdinalColorScaleConfig<Datum>\n): config is OrdinalColorScaleConfigScheme => {\n    return (config as OrdinalColorScaleConfigScheme).scheme !== undefined\n}\n\nconst isOrdinalColorScaleConfigDatumProperty = <Datum>(\n    config: OrdinalColorScaleConfig<Datum>\n): config is OrdinalColorScaleConfigDatumProperty => {\n    return (config as OrdinalColorScaleConfigDatumProperty).datum !== undefined\n}\n\nexport type DatumIdentityAccessor<Datum> = (datum: Datum) => string | number\n\nexport type OrdinalColorScale<Datum> = (d: Datum) => string\n\n/**\n * Compute an ordinal color scale\n */\nexport const getOrdinalColorScale = <Datum = any>(\n    config: OrdinalColorScaleConfig<Datum>,\n    identity?: string | DatumIdentityAccessor<Datum>\n): OrdinalColorScale<Datum> => {\n    // user defined function\n    if (typeof config === 'function') {\n        return config\n    }\n\n    // compute accessor to the datum identity\n    const getIdentity =\n        typeof identity === 'function' ? identity : (datum: Datum) => get(datum, identity as string)\n\n    // user defined color array\n    if (Array.isArray(config)) {\n        const scale = scaleOrdinal(config)\n        const generator = (datum: Datum) => scale(getIdentity(datum))\n        generator.scale = scale\n\n        return generator as OrdinalColorScale<Datum>\n    }\n\n    if (isPlainObject(config)) {\n        // use color from current datum\n        if (isOrdinalColorScaleConfigDatumProperty(config)) {\n            return (datum: Datum) => get(datum, config.datum)\n        }\n\n        // ordinal scale from predefined scheme\n        if (isOrdinalColorScaleConfigScheme(config)) {\n            // categorical color scheme\n            if (isCategoricalColorScheme(config.scheme)) {\n                const scale = scaleOrdinal(colorSchemes[config.scheme])\n                const generator = (datum: Datum) => scale(getIdentity(datum))\n                generator.scale = scale\n\n                return generator as OrdinalColorScale<Datum>\n            }\n\n            // Diverging color schemes support a size k ranging from 3 to 11\n            if (isDivergingColorScheme(config.scheme)) {\n                if (config.size !== undefined && (config.size < 3 || config.size > 11)) {\n                    throw new Error(\n                        `Invalid size '${config.size}' for diverging color scheme '${config.scheme}', must be between 3~11`\n                    )\n                }\n\n                const scale = scaleOrdinal(colorSchemes[config.scheme][config.size || 11])\n                const generator = (d: Datum) => scale(getIdentity(d))\n                generator.scale = scale\n\n                return generator as OrdinalColorScale<Datum>\n            }\n\n            // Sequential, single-hue color schemes support a size k ranging from 3 to 9.\n            // Sequential, multi-hue color schemes support a size k ranging from 3 to 9.\n            if (isSequentialColorScheme(config.scheme)) {\n                if (config.size !== undefined && (config.size < 3 || config.size > 9)) {\n                    throw new Error(\n                        `Invalid size '${config.size}' for sequential color scheme '${config.scheme}', must be between 3~9`\n                    )\n                }\n\n                const scale = scaleOrdinal(colorSchemes[config.scheme][config.size || 9])\n                const generator = (d: Datum) => scale(getIdentity(d))\n                generator.scale = scale\n\n                return generator as OrdinalColorScale<Datum>\n            }\n        }\n\n        throw new Error(\n            `Invalid colors, when using an object, you should either pass a 'datum' or a 'scheme' property`\n        )\n    }\n\n    // static color\n    return () => config as string\n}\n\nexport const useOrdinalColorScale = <Datum = any>(\n    config: OrdinalColorScaleConfig<Datum>,\n    identity: string | DatumIdentityAccessor<Datum>\n) => useMemo(() => getOrdinalColorScale<Datum>(config, identity), [config, identity])\n", "let updateQueue = makeQueue();\nconst raf = fn => schedule(fn, updateQueue);\nlet writeQueue = makeQueue();\n\nraf.write = fn => schedule(fn, writeQueue);\n\nlet onStartQueue = makeQueue();\n\nraf.onStart = fn => schedule(fn, onStartQueue);\n\nlet onFrameQueue = makeQueue();\n\nraf.onFrame = fn => schedule(fn, onFrameQueue);\n\nlet onFinishQueue = makeQueue();\n\nraf.onFinish = fn => schedule(fn, onFinishQueue);\n\nlet timeouts = [];\n\nraf.setTimeout = (handler, ms) => {\n  let time = raf.now() + ms;\n\n  let cancel = () => {\n    let i = timeouts.findIndex(t => t.cancel == cancel);\n    if (~i) timeouts.splice(i, 1);\n    __raf.count -= ~i ? 1 : 0;\n  };\n\n  let timeout = {\n    time,\n    handler,\n    cancel\n  };\n  timeouts.splice(findTimeout(time), 0, timeout);\n  __raf.count += 1;\n  start();\n  return timeout;\n};\n\nlet findTimeout = time => ~(~timeouts.findIndex(t => t.time > time) || ~timeouts.length);\n\nraf.cancel = fn => {\n  updateQueue.delete(fn);\n  writeQueue.delete(fn);\n};\n\nraf.sync = fn => {\n  sync = true;\n  raf.batchedUpdates(fn);\n  sync = false;\n};\n\nraf.throttle = fn => {\n  let lastArgs;\n\n  function queuedFn() {\n    try {\n      fn(...lastArgs);\n    } finally {\n      lastArgs = null;\n    }\n  }\n\n  function throttled(...args) {\n    lastArgs = args;\n    raf.onStart(queuedFn);\n  }\n\n  throttled.handler = fn;\n\n  throttled.cancel = () => {\n    onStartQueue.delete(queuedFn);\n    lastArgs = null;\n  };\n\n  return throttled;\n};\n\nlet nativeRaf = typeof window != 'undefined' ? window.requestAnimationFrame : () => {};\n\nraf.use = impl => nativeRaf = impl;\n\nraf.now = typeof performance != 'undefined' ? () => performance.now() : Date.now;\n\nraf.batchedUpdates = fn => fn();\n\nraf.catch = console.error;\nraf.frameLoop = 'always';\n\nraf.advance = () => {\n  if (raf.frameLoop !== 'demand') {\n    console.warn('Cannot call the manual advancement of rafz whilst frameLoop is not set as demand');\n  } else {\n    update();\n  }\n};\n\nlet ts = -1;\nlet sync = false;\n\nfunction schedule(fn, queue) {\n  if (sync) {\n    queue.delete(fn);\n    fn(0);\n  } else {\n    queue.add(fn);\n    start();\n  }\n}\n\nfunction start() {\n  if (ts < 0) {\n    ts = 0;\n\n    if (raf.frameLoop !== 'demand') {\n      nativeRaf(loop);\n    }\n  }\n}\n\nfunction loop() {\n  if (~ts) {\n    nativeRaf(loop);\n    raf.batchedUpdates(update);\n  }\n}\n\nfunction update() {\n  let prevTs = ts;\n  ts = raf.now();\n  let count = findTimeout(ts);\n\n  if (count) {\n    eachSafely(timeouts.splice(0, count), t => t.handler());\n    __raf.count -= count;\n  }\n\n  onStartQueue.flush();\n  updateQueue.flush(prevTs ? Math.min(64, ts - prevTs) : 16.667);\n  onFrameQueue.flush();\n  writeQueue.flush();\n  onFinishQueue.flush();\n}\n\nfunction makeQueue() {\n  let next = new Set();\n  let current = next;\n  return {\n    add(fn) {\n      __raf.count += current == next && !next.has(fn) ? 1 : 0;\n      next.add(fn);\n    },\n\n    delete(fn) {\n      __raf.count -= current == next && next.has(fn) ? 1 : 0;\n      return next.delete(fn);\n    },\n\n    flush(arg) {\n      if (current.size) {\n        next = new Set();\n        __raf.count -= current.size;\n        eachSafely(current, fn => fn(arg) && next.add(fn));\n        __raf.count += next.size;\n        current = next;\n      }\n    }\n\n  };\n}\n\nfunction eachSafely(values, each) {\n  values.forEach(value => {\n    try {\n      each(value);\n    } catch (e) {\n      raf.catch(e);\n    }\n  });\n}\n\nconst __raf = {\n  count: 0,\n\n  clear() {\n    ts = -1;\n    timeouts = [];\n    onStartQueue = makeQueue();\n    updateQueue = makeQueue();\n    onFrameQueue = makeQueue();\n    writeQueue = makeQueue();\n    onFinishQueue = makeQueue();\n    __raf.count = 0;\n  }\n\n};\n\nexport { __raf, raf };\n", "import { raf } from '@react-spring/rafz';\nexport { raf } from '@react-spring/rafz';\nimport * as React from 'react';\nimport { useEffect, useState, useRef } from 'react';\n\nfunction noop() {}\nconst defineHidden = (obj, key, value) => Object.defineProperty(obj, key, {\n  value,\n  writable: true,\n  configurable: true\n});\nconst is = {\n  arr: Array.isArray,\n  obj: a => !!a && a.constructor.name === 'Object',\n  fun: a => typeof a === 'function',\n  str: a => typeof a === 'string',\n  num: a => typeof a === 'number',\n  und: a => a === undefined\n};\nfunction isEqual(a, b) {\n  if (is.arr(a)) {\n    if (!is.arr(b) || a.length !== b.length) return false;\n\n    for (let i = 0; i < a.length; i++) {\n      if (a[i] !== b[i]) return false;\n    }\n\n    return true;\n  }\n\n  return a === b;\n}\nconst each = (obj, fn) => obj.forEach(fn);\nfunction eachProp(obj, fn, ctx) {\n  if (is.arr(obj)) {\n    for (let i = 0; i < obj.length; i++) {\n      fn.call(ctx, obj[i], `${i}`);\n    }\n\n    return;\n  }\n\n  for (const key in obj) {\n    if (obj.hasOwnProperty(key)) {\n      fn.call(ctx, obj[key], key);\n    }\n  }\n}\nconst toArray = a => is.und(a) ? [] : is.arr(a) ? a : [a];\nfunction flush(queue, iterator) {\n  if (queue.size) {\n    const items = Array.from(queue);\n    queue.clear();\n    each(items, iterator);\n  }\n}\nconst flushCalls = (queue, ...args) => flush(queue, fn => fn(...args));\n\nlet createStringInterpolator$1;\nlet to;\nlet colors$1 = null;\nlet skipAnimation = false;\nlet willAdvance = noop;\nconst assign = globals => {\n  if (globals.to) to = globals.to;\n  if (globals.now) raf.now = globals.now;\n  if (globals.colors !== undefined) colors$1 = globals.colors;\n  if (globals.skipAnimation != null) skipAnimation = globals.skipAnimation;\n  if (globals.createStringInterpolator) createStringInterpolator$1 = globals.createStringInterpolator;\n  if (globals.requestAnimationFrame) raf.use(globals.requestAnimationFrame);\n  if (globals.batchedUpdates) raf.batchedUpdates = globals.batchedUpdates;\n  if (globals.willAdvance) willAdvance = globals.willAdvance;\n  if (globals.frameLoop) raf.frameLoop = globals.frameLoop;\n};\n\nvar globals = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  get createStringInterpolator () { return createStringInterpolator$1; },\n  get to () { return to; },\n  get colors () { return colors$1; },\n  get skipAnimation () { return skipAnimation; },\n  get willAdvance () { return willAdvance; },\n  assign: assign\n});\n\nconst startQueue = new Set();\nlet currentFrame = [];\nlet prevFrame = [];\nlet priority = 0;\nconst frameLoop = {\n  get idle() {\n    return !startQueue.size && !currentFrame.length;\n  },\n\n  start(animation) {\n    if (priority > animation.priority) {\n      startQueue.add(animation);\n      raf.onStart(flushStartQueue);\n    } else {\n      startSafely(animation);\n      raf(advance);\n    }\n  },\n\n  advance,\n\n  sort(animation) {\n    if (priority) {\n      raf.onFrame(() => frameLoop.sort(animation));\n    } else {\n      const prevIndex = currentFrame.indexOf(animation);\n\n      if (~prevIndex) {\n        currentFrame.splice(prevIndex, 1);\n        startUnsafely(animation);\n      }\n    }\n  },\n\n  clear() {\n    currentFrame = [];\n    startQueue.clear();\n  }\n\n};\n\nfunction flushStartQueue() {\n  startQueue.forEach(startSafely);\n  startQueue.clear();\n  raf(advance);\n}\n\nfunction startSafely(animation) {\n  if (!currentFrame.includes(animation)) startUnsafely(animation);\n}\n\nfunction startUnsafely(animation) {\n  currentFrame.splice(findIndex(currentFrame, other => other.priority > animation.priority), 0, animation);\n}\n\nfunction advance(dt) {\n  const nextFrame = prevFrame;\n\n  for (let i = 0; i < currentFrame.length; i++) {\n    const animation = currentFrame[i];\n    priority = animation.priority;\n\n    if (!animation.idle) {\n      willAdvance(animation);\n      animation.advance(dt);\n\n      if (!animation.idle) {\n        nextFrame.push(animation);\n      }\n    }\n  }\n\n  priority = 0;\n  prevFrame = currentFrame;\n  prevFrame.length = 0;\n  currentFrame = nextFrame;\n  return currentFrame.length > 0;\n}\n\nfunction findIndex(arr, test) {\n  const index = arr.findIndex(test);\n  return index < 0 ? arr.length : index;\n}\n\nconst colors = {\n  transparent: 0x00000000,\n  aliceblue: 0xf0f8ffff,\n  antiquewhite: 0xfaebd7ff,\n  aqua: 0x00ffffff,\n  aquamarine: 0x7fffd4ff,\n  azure: 0xf0ffffff,\n  beige: 0xf5f5dcff,\n  bisque: 0xffe4c4ff,\n  black: 0x000000ff,\n  blanchedalmond: 0xffebcdff,\n  blue: 0x0000ffff,\n  blueviolet: 0x8a2be2ff,\n  brown: 0xa52a2aff,\n  burlywood: 0xdeb887ff,\n  burntsienna: 0xea7e5dff,\n  cadetblue: 0x5f9ea0ff,\n  chartreuse: 0x7fff00ff,\n  chocolate: 0xd2691eff,\n  coral: 0xff7f50ff,\n  cornflowerblue: 0x6495edff,\n  cornsilk: 0xfff8dcff,\n  crimson: 0xdc143cff,\n  cyan: 0x00ffffff,\n  darkblue: 0x00008bff,\n  darkcyan: 0x008b8bff,\n  darkgoldenrod: 0xb8860bff,\n  darkgray: 0xa9a9a9ff,\n  darkgreen: 0x006400ff,\n  darkgrey: 0xa9a9a9ff,\n  darkkhaki: 0xbdb76bff,\n  darkmagenta: 0x8b008bff,\n  darkolivegreen: 0x556b2fff,\n  darkorange: 0xff8c00ff,\n  darkorchid: 0x9932ccff,\n  darkred: 0x8b0000ff,\n  darksalmon: 0xe9967aff,\n  darkseagreen: 0x8fbc8fff,\n  darkslateblue: 0x483d8bff,\n  darkslategray: 0x2f4f4fff,\n  darkslategrey: 0x2f4f4fff,\n  darkturquoise: 0x00ced1ff,\n  darkviolet: 0x9400d3ff,\n  deeppink: 0xff1493ff,\n  deepskyblue: 0x00bfffff,\n  dimgray: 0x696969ff,\n  dimgrey: 0x696969ff,\n  dodgerblue: 0x1e90ffff,\n  firebrick: 0xb22222ff,\n  floralwhite: 0xfffaf0ff,\n  forestgreen: 0x228b22ff,\n  fuchsia: 0xff00ffff,\n  gainsboro: 0xdcdcdcff,\n  ghostwhite: 0xf8f8ffff,\n  gold: 0xffd700ff,\n  goldenrod: 0xdaa520ff,\n  gray: 0x808080ff,\n  green: 0x008000ff,\n  greenyellow: 0xadff2fff,\n  grey: 0x808080ff,\n  honeydew: 0xf0fff0ff,\n  hotpink: 0xff69b4ff,\n  indianred: 0xcd5c5cff,\n  indigo: 0x4b0082ff,\n  ivory: 0xfffff0ff,\n  khaki: 0xf0e68cff,\n  lavender: 0xe6e6faff,\n  lavenderblush: 0xfff0f5ff,\n  lawngreen: 0x7cfc00ff,\n  lemonchiffon: 0xfffacdff,\n  lightblue: 0xadd8e6ff,\n  lightcoral: 0xf08080ff,\n  lightcyan: 0xe0ffffff,\n  lightgoldenrodyellow: 0xfafad2ff,\n  lightgray: 0xd3d3d3ff,\n  lightgreen: 0x90ee90ff,\n  lightgrey: 0xd3d3d3ff,\n  lightpink: 0xffb6c1ff,\n  lightsalmon: 0xffa07aff,\n  lightseagreen: 0x20b2aaff,\n  lightskyblue: 0x87cefaff,\n  lightslategray: 0x778899ff,\n  lightslategrey: 0x778899ff,\n  lightsteelblue: 0xb0c4deff,\n  lightyellow: 0xffffe0ff,\n  lime: 0x00ff00ff,\n  limegreen: 0x32cd32ff,\n  linen: 0xfaf0e6ff,\n  magenta: 0xff00ffff,\n  maroon: 0x800000ff,\n  mediumaquamarine: 0x66cdaaff,\n  mediumblue: 0x0000cdff,\n  mediumorchid: 0xba55d3ff,\n  mediumpurple: 0x9370dbff,\n  mediumseagreen: 0x3cb371ff,\n  mediumslateblue: 0x7b68eeff,\n  mediumspringgreen: 0x00fa9aff,\n  mediumturquoise: 0x48d1ccff,\n  mediumvioletred: 0xc71585ff,\n  midnightblue: 0x191970ff,\n  mintcream: 0xf5fffaff,\n  mistyrose: 0xffe4e1ff,\n  moccasin: 0xffe4b5ff,\n  navajowhite: 0xffdeadff,\n  navy: 0x000080ff,\n  oldlace: 0xfdf5e6ff,\n  olive: 0x808000ff,\n  olivedrab: 0x6b8e23ff,\n  orange: 0xffa500ff,\n  orangered: 0xff4500ff,\n  orchid: 0xda70d6ff,\n  palegoldenrod: 0xeee8aaff,\n  palegreen: 0x98fb98ff,\n  paleturquoise: 0xafeeeeff,\n  palevioletred: 0xdb7093ff,\n  papayawhip: 0xffefd5ff,\n  peachpuff: 0xffdab9ff,\n  peru: 0xcd853fff,\n  pink: 0xffc0cbff,\n  plum: 0xdda0ddff,\n  powderblue: 0xb0e0e6ff,\n  purple: 0x800080ff,\n  rebeccapurple: 0x663399ff,\n  red: 0xff0000ff,\n  rosybrown: 0xbc8f8fff,\n  royalblue: 0x4169e1ff,\n  saddlebrown: 0x8b4513ff,\n  salmon: 0xfa8072ff,\n  sandybrown: 0xf4a460ff,\n  seagreen: 0x2e8b57ff,\n  seashell: 0xfff5eeff,\n  sienna: 0xa0522dff,\n  silver: 0xc0c0c0ff,\n  skyblue: 0x87ceebff,\n  slateblue: 0x6a5acdff,\n  slategray: 0x708090ff,\n  slategrey: 0x708090ff,\n  snow: 0xfffafaff,\n  springgreen: 0x00ff7fff,\n  steelblue: 0x4682b4ff,\n  tan: 0xd2b48cff,\n  teal: 0x008080ff,\n  thistle: 0xd8bfd8ff,\n  tomato: 0xff6347ff,\n  turquoise: 0x40e0d0ff,\n  violet: 0xee82eeff,\n  wheat: 0xf5deb3ff,\n  white: 0xffffffff,\n  whitesmoke: 0xf5f5f5ff,\n  yellow: 0xffff00ff,\n  yellowgreen: 0x9acd32ff\n};\n\nconst NUMBER = '[-+]?\\\\d*\\\\.?\\\\d+';\nconst PERCENTAGE = NUMBER + '%';\n\nfunction call(...parts) {\n  return '\\\\(\\\\s*(' + parts.join(')\\\\s*,\\\\s*(') + ')\\\\s*\\\\)';\n}\n\nconst rgb = new RegExp('rgb' + call(NUMBER, NUMBER, NUMBER));\nconst rgba = new RegExp('rgba' + call(NUMBER, NUMBER, NUMBER, NUMBER));\nconst hsl = new RegExp('hsl' + call(NUMBER, PERCENTAGE, PERCENTAGE));\nconst hsla = new RegExp('hsla' + call(NUMBER, PERCENTAGE, PERCENTAGE, NUMBER));\nconst hex3 = /^#([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})$/;\nconst hex4 = /^#([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})$/;\nconst hex6 = /^#([0-9a-fA-F]{6})$/;\nconst hex8 = /^#([0-9a-fA-F]{8})$/;\n\nfunction normalizeColor(color) {\n  let match;\n\n  if (typeof color === 'number') {\n    return color >>> 0 === color && color >= 0 && color <= 0xffffffff ? color : null;\n  }\n\n  if (match = hex6.exec(color)) return parseInt(match[1] + 'ff', 16) >>> 0;\n\n  if (colors$1 && colors$1[color] !== undefined) {\n    return colors$1[color];\n  }\n\n  if (match = rgb.exec(color)) {\n    return (parse255(match[1]) << 24 | parse255(match[2]) << 16 | parse255(match[3]) << 8 | 0x000000ff) >>> 0;\n  }\n\n  if (match = rgba.exec(color)) {\n    return (parse255(match[1]) << 24 | parse255(match[2]) << 16 | parse255(match[3]) << 8 | parse1(match[4])) >>> 0;\n  }\n\n  if (match = hex3.exec(color)) {\n    return parseInt(match[1] + match[1] + match[2] + match[2] + match[3] + match[3] + 'ff', 16) >>> 0;\n  }\n\n  if (match = hex8.exec(color)) return parseInt(match[1], 16) >>> 0;\n\n  if (match = hex4.exec(color)) {\n    return parseInt(match[1] + match[1] + match[2] + match[2] + match[3] + match[3] + match[4] + match[4], 16) >>> 0;\n  }\n\n  if (match = hsl.exec(color)) {\n    return (hslToRgb(parse360(match[1]), parsePercentage(match[2]), parsePercentage(match[3])) | 0x000000ff) >>> 0;\n  }\n\n  if (match = hsla.exec(color)) {\n    return (hslToRgb(parse360(match[1]), parsePercentage(match[2]), parsePercentage(match[3])) | parse1(match[4])) >>> 0;\n  }\n\n  return null;\n}\n\nfunction hue2rgb(p, q, t) {\n  if (t < 0) t += 1;\n  if (t > 1) t -= 1;\n  if (t < 1 / 6) return p + (q - p) * 6 * t;\n  if (t < 1 / 2) return q;\n  if (t < 2 / 3) return p + (q - p) * (2 / 3 - t) * 6;\n  return p;\n}\n\nfunction hslToRgb(h, s, l) {\n  const q = l < 0.5 ? l * (1 + s) : l + s - l * s;\n  const p = 2 * l - q;\n  const r = hue2rgb(p, q, h + 1 / 3);\n  const g = hue2rgb(p, q, h);\n  const b = hue2rgb(p, q, h - 1 / 3);\n  return Math.round(r * 255) << 24 | Math.round(g * 255) << 16 | Math.round(b * 255) << 8;\n}\n\nfunction parse255(str) {\n  const int = parseInt(str, 10);\n  if (int < 0) return 0;\n  if (int > 255) return 255;\n  return int;\n}\n\nfunction parse360(str) {\n  const int = parseFloat(str);\n  return (int % 360 + 360) % 360 / 360;\n}\n\nfunction parse1(str) {\n  const num = parseFloat(str);\n  if (num < 0) return 0;\n  if (num > 1) return 255;\n  return Math.round(num * 255);\n}\n\nfunction parsePercentage(str) {\n  const int = parseFloat(str);\n  if (int < 0) return 0;\n  if (int > 100) return 1;\n  return int / 100;\n}\n\nfunction colorToRgba(input) {\n  let int32Color = normalizeColor(input);\n  if (int32Color === null) return input;\n  int32Color = int32Color || 0;\n  let r = (int32Color & 0xff000000) >>> 24;\n  let g = (int32Color & 0x00ff0000) >>> 16;\n  let b = (int32Color & 0x0000ff00) >>> 8;\n  let a = (int32Color & 0x000000ff) / 255;\n  return `rgba(${r}, ${g}, ${b}, ${a})`;\n}\n\nconst createInterpolator = (range, output, extrapolate) => {\n  if (is.fun(range)) {\n    return range;\n  }\n\n  if (is.arr(range)) {\n    return createInterpolator({\n      range,\n      output: output,\n      extrapolate\n    });\n  }\n\n  if (is.str(range.output[0])) {\n    return createStringInterpolator$1(range);\n  }\n\n  const config = range;\n  const outputRange = config.output;\n  const inputRange = config.range || [0, 1];\n  const extrapolateLeft = config.extrapolateLeft || config.extrapolate || 'extend';\n  const extrapolateRight = config.extrapolateRight || config.extrapolate || 'extend';\n\n  const easing = config.easing || (t => t);\n\n  return input => {\n    const range = findRange(input, inputRange);\n    return interpolate(input, inputRange[range], inputRange[range + 1], outputRange[range], outputRange[range + 1], easing, extrapolateLeft, extrapolateRight, config.map);\n  };\n};\n\nfunction interpolate(input, inputMin, inputMax, outputMin, outputMax, easing, extrapolateLeft, extrapolateRight, map) {\n  let result = map ? map(input) : input;\n\n  if (result < inputMin) {\n    if (extrapolateLeft === 'identity') return result;else if (extrapolateLeft === 'clamp') result = inputMin;\n  }\n\n  if (result > inputMax) {\n    if (extrapolateRight === 'identity') return result;else if (extrapolateRight === 'clamp') result = inputMax;\n  }\n\n  if (outputMin === outputMax) return outputMin;\n  if (inputMin === inputMax) return input <= inputMin ? outputMin : outputMax;\n  if (inputMin === -Infinity) result = -result;else if (inputMax === Infinity) result = result - inputMin;else result = (result - inputMin) / (inputMax - inputMin);\n  result = easing(result);\n  if (outputMin === -Infinity) result = -result;else if (outputMax === Infinity) result = result + outputMin;else result = result * (outputMax - outputMin) + outputMin;\n  return result;\n}\n\nfunction findRange(input, inputRange) {\n  for (var i = 1; i < inputRange.length - 1; ++i) if (inputRange[i] >= input) break;\n\n  return i - 1;\n}\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nconst $get = Symbol.for('FluidValue.get');\nconst $observers = Symbol.for('FluidValue.observers');\n\nconst hasFluidValue = arg => Boolean(arg && arg[$get]);\n\nconst getFluidValue = arg => arg && arg[$get] ? arg[$get]() : arg;\n\nconst getFluidObservers = target => target[$observers] || null;\n\nfunction callFluidObserver(observer, event) {\n  if (observer.eventObserved) {\n    observer.eventObserved(event);\n  } else {\n    observer(event);\n  }\n}\n\nfunction callFluidObservers(target, event) {\n  let observers = target[$observers];\n\n  if (observers) {\n    observers.forEach(observer => {\n      callFluidObserver(observer, event);\n    });\n  }\n}\n\nclass FluidValue {\n  constructor(get) {\n    this[$get] = void 0;\n    this[$observers] = void 0;\n\n    if (!get && !(get = this.get)) {\n      throw Error('Unknown getter');\n    }\n\n    setFluidGetter(this, get);\n  }\n\n}\n\nconst setFluidGetter = (target, get) => setHidden(target, $get, get);\n\nfunction addFluidObserver(target, observer) {\n  if (target[$get]) {\n    let observers = target[$observers];\n\n    if (!observers) {\n      setHidden(target, $observers, observers = new Set());\n    }\n\n    if (!observers.has(observer)) {\n      observers.add(observer);\n\n      if (target.observerAdded) {\n        target.observerAdded(observers.size, observer);\n      }\n    }\n  }\n\n  return observer;\n}\n\nfunction removeFluidObserver(target, observer) {\n  let observers = target[$observers];\n\n  if (observers && observers.has(observer)) {\n    const count = observers.size - 1;\n\n    if (count) {\n      observers.delete(observer);\n    } else {\n      target[$observers] = null;\n    }\n\n    if (target.observerRemoved) {\n      target.observerRemoved(count, observer);\n    }\n  }\n}\n\nconst setHidden = (target, key, value) => Object.defineProperty(target, key, {\n  value,\n  writable: true,\n  configurable: true\n});\n\nconst numberRegex = /[+\\-]?(?:0|[1-9]\\d*)(?:\\.\\d*)?(?:[eE][+\\-]?\\d+)?/g;\nconst colorRegex = /(#(?:[0-9a-f]{2}){2,4}|(#[0-9a-f]{3})|(rgb|hsl)a?\\((-?\\d+%?[,\\s]+){2,3}\\s*[\\d\\.]+%?\\))/gi;\nconst unitRegex = new RegExp(`(${numberRegex.source})(%|[a-z]+)`, 'i');\nlet namedColorRegex;\nconst rgbaRegex = /rgba\\(([0-9\\.-]+), ([0-9\\.-]+), ([0-9\\.-]+), ([0-9\\.-]+)\\)/gi;\n\nconst rgbaRound = (_, p1, p2, p3, p4) => `rgba(${Math.round(p1)}, ${Math.round(p2)}, ${Math.round(p3)}, ${p4})`;\n\nconst createStringInterpolator = config => {\n  if (!namedColorRegex) namedColorRegex = colors$1 ? new RegExp(`(${Object.keys(colors$1).join('|')})(?!\\\\w)`, 'g') : /^\\b$/;\n  const output = config.output.map(value => getFluidValue(value).replace(colorRegex, colorToRgba).replace(namedColorRegex, colorToRgba));\n  const keyframes = output.map(value => value.match(numberRegex).map(Number));\n  const outputRanges = keyframes[0].map((_, i) => keyframes.map(values => {\n    if (!(i in values)) {\n      throw Error('The arity of each \"output\" value must be equal');\n    }\n\n    return values[i];\n  }));\n  const interpolators = outputRanges.map(output => createInterpolator(_extends({}, config, {\n    output\n  })));\n  return input => {\n    var _output$find;\n\n    const missingUnit = !unitRegex.test(output[0]) && ((_output$find = output.find(value => unitRegex.test(value))) == null ? void 0 : _output$find.replace(numberRegex, ''));\n    let i = 0;\n    return output[0].replace(numberRegex, () => `${interpolators[i++](input)}${missingUnit || ''}`).replace(rgbaRegex, rgbaRound);\n  };\n};\n\nconst prefix = 'react-spring: ';\n\nconst once = fn => {\n  const func = fn;\n  let called = false;\n\n  if (typeof func != 'function') {\n    throw new TypeError(`${prefix}once requires a function parameter`);\n  }\n\n  return (...args) => {\n    if (!called) {\n      func(...args);\n      called = true;\n    }\n  };\n};\n\nconst warnInterpolate = once(console.warn);\nfunction deprecateInterpolate() {\n  warnInterpolate(`${prefix}The \"interpolate\" function is deprecated in v9 (use \"to\" instead)`);\n}\nconst warnDirectCall = once(console.warn);\nfunction deprecateDirectCall() {\n  warnDirectCall(`${prefix}Directly calling start instead of using the api object is deprecated in v9 (use \".start\" instead), this will be removed in later 0.X.0 versions`);\n}\n\nfunction isAnimatedString(value) {\n  return is.str(value) && (value[0] == '#' || /\\d/.test(value) || value in (colors$1 || {}));\n}\n\nconst useOnce = effect => useEffect(effect, emptyDeps);\nconst emptyDeps = [];\n\nfunction useForceUpdate() {\n  const update = useState()[1];\n  const mounted = useState(makeMountedRef)[0];\n  useOnce(mounted.unmount);\n  return () => {\n    if (mounted.current) {\n      update({});\n    }\n  };\n}\n\nfunction makeMountedRef() {\n  const mounted = {\n    current: true,\n    unmount: () => () => {\n      mounted.current = false;\n    }\n  };\n  return mounted;\n}\n\nfunction useMemoOne(getResult, inputs) {\n  const [initial] = useState(() => ({\n    inputs,\n    result: getResult()\n  }));\n  const committed = useRef();\n  const prevCache = committed.current;\n  let cache = prevCache;\n\n  if (cache) {\n    const useCache = Boolean(inputs && cache.inputs && areInputsEqual(inputs, cache.inputs));\n\n    if (!useCache) {\n      cache = {\n        inputs,\n        result: getResult()\n      };\n    }\n  } else {\n    cache = initial;\n  }\n\n  useEffect(() => {\n    committed.current = cache;\n\n    if (prevCache == initial) {\n      initial.inputs = initial.result = undefined;\n    }\n  }, [cache]);\n  return cache.result;\n}\n\nfunction areInputsEqual(next, prev) {\n  if (next.length !== prev.length) {\n    return false;\n  }\n\n  for (let i = 0; i < next.length; i++) {\n    if (next[i] !== prev[i]) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\nfunction usePrev(value) {\n  const prevRef = useRef();\n  useEffect(() => {\n    prevRef.current = value;\n  });\n  return prevRef.current;\n}\n\nconst useLayoutEffect = typeof window !== 'undefined' && window.document && window.document.createElement ? React.useLayoutEffect : React.useEffect;\n\nexport { FluidValue, globals as Globals, addFluidObserver, callFluidObserver, callFluidObservers, colorToRgba, colors, createInterpolator, createStringInterpolator, defineHidden, deprecateDirectCall, deprecateInterpolate, each, eachProp, flush, flushCalls, frameLoop, getFluidObservers, getFluidValue, hasFluidValue, hex3, hex4, hex6, hex8, hsl, hsla, is, isAnimatedString, isEqual, noop, removeFluidObserver, rgb, rgba, setFluidGetter, toArray, useForceUpdate, useLayoutEffect, useMemoOne, useOnce, usePrev };\n", "import { eachProp, is, toArray, isAnimatedString, Globals, getFluidValue, useLayoutEffect, each, raf, flush, FluidValue, deprecateInterpolate, callFluidObservers, frameLoop, hasFluidValue, flushCalls, isEqual, getFluidObservers, addFluidObserver, removeFluidObserver, noop, useMemoOne, deprecateDirectCall, useForceUpdate, usePrev, useOnce, createInterpolator, createStringInterpolator } from '@react-spring/shared';\nexport { Globals, createInterpolator } from '@react-spring/shared';\nimport * as React from 'react';\nimport { useContext, useMemo, useRef, useState } from 'react';\nimport { getAnimated, AnimatedValue, getPayload, AnimatedString, getAnimatedType, setAnimated } from '@react-spring/animated';\nexport * from '@react-spring/types/animated';\nexport * from '@react-spring/types/interpolation';\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction callProp(value, ...args) {\n  return is.fun(value) ? value(...args) : value;\n}\nconst matchProp = (value, key) => value === true || !!(key && value && (is.fun(value) ? value(key) : toArray(value).includes(key)));\nconst resolveProp = (prop, key) => is.obj(prop) ? key && prop[key] : prop;\nconst getDefaultProp = (props, key) => props.default === true ? props[key] : props.default ? props.default[key] : undefined;\n\nconst noopTransform = value => value;\n\nconst getDefaultProps = (props, transform = noopTransform) => {\n  let keys = DEFAULT_PROPS;\n\n  if (props.default && props.default !== true) {\n    props = props.default;\n    keys = Object.keys(props);\n  }\n\n  const defaults = {};\n\n  for (const key of keys) {\n    const value = transform(props[key], key);\n\n    if (!is.und(value)) {\n      defaults[key] = value;\n    }\n  }\n\n  return defaults;\n};\nconst DEFAULT_PROPS = ['config', 'onProps', 'onStart', 'onChange', 'onPause', 'onResume', 'onRest'];\nconst RESERVED_PROPS = {\n  config: 1,\n  from: 1,\n  to: 1,\n  ref: 1,\n  loop: 1,\n  reset: 1,\n  pause: 1,\n  cancel: 1,\n  reverse: 1,\n  immediate: 1,\n  default: 1,\n  delay: 1,\n  onProps: 1,\n  onStart: 1,\n  onChange: 1,\n  onPause: 1,\n  onResume: 1,\n  onRest: 1,\n  onResolve: 1,\n  items: 1,\n  trail: 1,\n  sort: 1,\n  expires: 1,\n  initial: 1,\n  enter: 1,\n  update: 1,\n  leave: 1,\n  children: 1,\n  onDestroyed: 1,\n  keys: 1,\n  callId: 1,\n  parentId: 1\n};\n\nfunction getForwardProps(props) {\n  const forward = {};\n  let count = 0;\n  eachProp(props, (value, prop) => {\n    if (!RESERVED_PROPS[prop]) {\n      forward[prop] = value;\n      count++;\n    }\n  });\n\n  if (count) {\n    return forward;\n  }\n}\n\nfunction inferTo(props) {\n  const to = getForwardProps(props);\n\n  if (to) {\n    const out = {\n      to\n    };\n    eachProp(props, (val, key) => key in to || (out[key] = val));\n    return out;\n  }\n\n  return _extends({}, props);\n}\nfunction computeGoal(value) {\n  value = getFluidValue(value);\n  return is.arr(value) ? value.map(computeGoal) : isAnimatedString(value) ? Globals.createStringInterpolator({\n    range: [0, 1],\n    output: [value, value]\n  })(1) : value;\n}\nfunction hasProps(props) {\n  for (const _ in props) return true;\n\n  return false;\n}\nfunction isAsyncTo(to) {\n  return is.fun(to) || is.arr(to) && is.obj(to[0]);\n}\nfunction detachRefs(ctrl, ref) {\n  var _ctrl$ref;\n\n  (_ctrl$ref = ctrl.ref) == null ? void 0 : _ctrl$ref.delete(ctrl);\n  ref == null ? void 0 : ref.delete(ctrl);\n}\nfunction replaceRef(ctrl, ref) {\n  if (ref && ctrl.ref !== ref) {\n    var _ctrl$ref2;\n\n    (_ctrl$ref2 = ctrl.ref) == null ? void 0 : _ctrl$ref2.delete(ctrl);\n    ref.add(ctrl);\n    ctrl.ref = ref;\n  }\n}\n\nfunction useChain(refs, timeSteps, timeFrame = 1000) {\n  useLayoutEffect(() => {\n    if (timeSteps) {\n      let prevDelay = 0;\n      each(refs, (ref, i) => {\n        const controllers = ref.current;\n\n        if (controllers.length) {\n          let delay = timeFrame * timeSteps[i];\n          if (isNaN(delay)) delay = prevDelay;else prevDelay = delay;\n          each(controllers, ctrl => {\n            each(ctrl.queue, props => {\n              const memoizedDelayProp = props.delay;\n\n              props.delay = key => delay + callProp(memoizedDelayProp || 0, key);\n            });\n            ctrl.start();\n          });\n        }\n      });\n    } else {\n      let p = Promise.resolve();\n      each(refs, ref => {\n        const controllers = ref.current;\n\n        if (controllers.length) {\n          const queues = controllers.map(ctrl => {\n            const q = ctrl.queue;\n            ctrl.queue = [];\n            return q;\n          });\n          p = p.then(() => {\n            each(controllers, (ctrl, i) => each(queues[i] || [], update => ctrl.queue.push(update)));\n            return Promise.all(ref.start());\n          });\n        }\n      });\n    }\n  });\n}\n\nconst config = {\n  default: {\n    tension: 170,\n    friction: 26\n  },\n  gentle: {\n    tension: 120,\n    friction: 14\n  },\n  wobbly: {\n    tension: 180,\n    friction: 12\n  },\n  stiff: {\n    tension: 210,\n    friction: 20\n  },\n  slow: {\n    tension: 280,\n    friction: 60\n  },\n  molasses: {\n    tension: 280,\n    friction: 120\n  }\n};\n\nconst linear = t => t;\n\nconst defaults = _extends({}, config.default, {\n  mass: 1,\n  damping: 1,\n  easing: linear,\n  clamp: false\n});\n\nclass AnimationConfig {\n  constructor() {\n    this.tension = void 0;\n    this.friction = void 0;\n    this.frequency = void 0;\n    this.damping = void 0;\n    this.mass = void 0;\n    this.velocity = 0;\n    this.restVelocity = void 0;\n    this.precision = void 0;\n    this.progress = void 0;\n    this.duration = void 0;\n    this.easing = void 0;\n    this.clamp = void 0;\n    this.bounce = void 0;\n    this.decay = void 0;\n    this.round = void 0;\n    Object.assign(this, defaults);\n  }\n\n}\nfunction mergeConfig(config, newConfig, defaultConfig) {\n  if (defaultConfig) {\n    defaultConfig = _extends({}, defaultConfig);\n    sanitizeConfig(defaultConfig, newConfig);\n    newConfig = _extends({}, defaultConfig, newConfig);\n  }\n\n  sanitizeConfig(config, newConfig);\n  Object.assign(config, newConfig);\n\n  for (const key in defaults) {\n    if (config[key] == null) {\n      config[key] = defaults[key];\n    }\n  }\n\n  let {\n    mass,\n    frequency,\n    damping\n  } = config;\n\n  if (!is.und(frequency)) {\n    if (frequency < 0.01) frequency = 0.01;\n    if (damping < 0) damping = 0;\n    config.tension = Math.pow(2 * Math.PI / frequency, 2) * mass;\n    config.friction = 4 * Math.PI * damping * mass / frequency;\n  }\n\n  return config;\n}\n\nfunction sanitizeConfig(config, props) {\n  if (!is.und(props.decay)) {\n    config.duration = undefined;\n  } else {\n    const isTensionConfig = !is.und(props.tension) || !is.und(props.friction);\n\n    if (isTensionConfig || !is.und(props.frequency) || !is.und(props.damping) || !is.und(props.mass)) {\n      config.duration = undefined;\n      config.decay = undefined;\n    }\n\n    if (isTensionConfig) {\n      config.frequency = undefined;\n    }\n  }\n}\n\nconst emptyArray = [];\nclass Animation {\n  constructor() {\n    this.changed = false;\n    this.values = emptyArray;\n    this.toValues = null;\n    this.fromValues = emptyArray;\n    this.to = void 0;\n    this.from = void 0;\n    this.config = new AnimationConfig();\n    this.immediate = false;\n  }\n\n}\n\nfunction scheduleProps(callId, {\n  key,\n  props,\n  defaultProps,\n  state,\n  actions\n}) {\n  return new Promise((resolve, reject) => {\n    var _props$cancel;\n\n    let delay;\n    let timeout;\n    let cancel = matchProp((_props$cancel = props.cancel) != null ? _props$cancel : defaultProps == null ? void 0 : defaultProps.cancel, key);\n\n    if (cancel) {\n      onStart();\n    } else {\n      if (!is.und(props.pause)) {\n        state.paused = matchProp(props.pause, key);\n      }\n\n      let pause = defaultProps == null ? void 0 : defaultProps.pause;\n\n      if (pause !== true) {\n        pause = state.paused || matchProp(pause, key);\n      }\n\n      delay = callProp(props.delay || 0, key);\n\n      if (pause) {\n        state.resumeQueue.add(onResume);\n        actions.pause();\n      } else {\n        actions.resume();\n        onResume();\n      }\n    }\n\n    function onPause() {\n      state.resumeQueue.add(onResume);\n      state.timeouts.delete(timeout);\n      timeout.cancel();\n      delay = timeout.time - raf.now();\n    }\n\n    function onResume() {\n      if (delay > 0 && !Globals.skipAnimation) {\n        timeout = raf.setTimeout(onStart, delay);\n        state.pauseQueue.add(onPause);\n        state.timeouts.add(timeout);\n      } else {\n        onStart();\n      }\n    }\n\n    function onStart() {\n      state.pauseQueue.delete(onPause);\n      state.timeouts.delete(timeout);\n\n      if (callId <= (state.cancelId || 0)) {\n        cancel = true;\n      }\n\n      try {\n        actions.start(_extends({}, props, {\n          callId,\n          cancel\n        }), resolve);\n      } catch (err) {\n        reject(err);\n      }\n    }\n  });\n}\n\nconst getCombinedResult = (target, results) => results.length == 1 ? results[0] : results.some(result => result.cancelled) ? getCancelledResult(target.get()) : results.every(result => result.noop) ? getNoopResult(target.get()) : getFinishedResult(target.get(), results.every(result => result.finished));\nconst getNoopResult = value => ({\n  value,\n  noop: true,\n  finished: true,\n  cancelled: false\n});\nconst getFinishedResult = (value, finished, cancelled = false) => ({\n  value,\n  finished,\n  cancelled\n});\nconst getCancelledResult = value => ({\n  value,\n  cancelled: true,\n  finished: false\n});\n\nfunction runAsync(to, props, state, target) {\n  const {\n    callId,\n    parentId,\n    onRest\n  } = props;\n  const {\n    asyncTo: prevTo,\n    promise: prevPromise\n  } = state;\n\n  if (!parentId && to === prevTo && !props.reset) {\n    return prevPromise;\n  }\n\n  return state.promise = (async () => {\n    state.asyncId = callId;\n    state.asyncTo = to;\n    const defaultProps = getDefaultProps(props, (value, key) => key === 'onRest' ? undefined : value);\n    let preventBail;\n    let bail;\n    const bailPromise = new Promise((resolve, reject) => (preventBail = resolve, bail = reject));\n\n    const bailIfEnded = bailSignal => {\n      const bailResult = callId <= (state.cancelId || 0) && getCancelledResult(target) || callId !== state.asyncId && getFinishedResult(target, false);\n\n      if (bailResult) {\n        bailSignal.result = bailResult;\n        bail(bailSignal);\n        throw bailSignal;\n      }\n    };\n\n    const animate = (arg1, arg2) => {\n      const bailSignal = new BailSignal();\n      const skipAnimationSignal = new SkipAniamtionSignal();\n      return (async () => {\n        if (Globals.skipAnimation) {\n          stopAsync(state);\n          skipAnimationSignal.result = getFinishedResult(target, false);\n          bail(skipAnimationSignal);\n          throw skipAnimationSignal;\n        }\n\n        bailIfEnded(bailSignal);\n        const props = is.obj(arg1) ? _extends({}, arg1) : _extends({}, arg2, {\n          to: arg1\n        });\n        props.parentId = callId;\n        eachProp(defaultProps, (value, key) => {\n          if (is.und(props[key])) {\n            props[key] = value;\n          }\n        });\n        const result = await target.start(props);\n        bailIfEnded(bailSignal);\n\n        if (state.paused) {\n          await new Promise(resume => {\n            state.resumeQueue.add(resume);\n          });\n        }\n\n        return result;\n      })();\n    };\n\n    let result;\n\n    if (Globals.skipAnimation) {\n      stopAsync(state);\n      return getFinishedResult(target, false);\n    }\n\n    try {\n      let animating;\n\n      if (is.arr(to)) {\n        animating = (async queue => {\n          for (const props of queue) {\n            await animate(props);\n          }\n        })(to);\n      } else {\n          animating = Promise.resolve(to(animate, target.stop.bind(target)));\n        }\n\n      await Promise.all([animating.then(preventBail), bailPromise]);\n      result = getFinishedResult(target.get(), true, false);\n    } catch (err) {\n      if (err instanceof BailSignal) {\n        result = err.result;\n      } else if (err instanceof SkipAniamtionSignal) {\n        result = err.result;\n      } else {\n        throw err;\n      }\n    } finally {\n      if (callId == state.asyncId) {\n        state.asyncId = parentId;\n        state.asyncTo = parentId ? prevTo : undefined;\n        state.promise = parentId ? prevPromise : undefined;\n      }\n    }\n\n    if (is.fun(onRest)) {\n      raf.batchedUpdates(() => {\n        onRest(result, target, target.item);\n      });\n    }\n\n    return result;\n  })();\n}\nfunction stopAsync(state, cancelId) {\n  flush(state.timeouts, t => t.cancel());\n  state.pauseQueue.clear();\n  state.resumeQueue.clear();\n  state.asyncId = state.asyncTo = state.promise = undefined;\n  if (cancelId) state.cancelId = cancelId;\n}\nclass BailSignal extends Error {\n  constructor() {\n    super('An async animation has been interrupted. You see this error because you ' + 'forgot to use `await` or `.catch(...)` on its returned promise.');\n    this.result = void 0;\n  }\n\n}\nclass SkipAniamtionSignal extends Error {\n  constructor() {\n    super('SkipAnimationSignal');\n    this.result = void 0;\n  }\n\n}\n\nconst isFrameValue = value => value instanceof FrameValue;\nlet nextId$1 = 1;\nclass FrameValue extends FluidValue {\n  constructor(...args) {\n    super(...args);\n    this.id = nextId$1++;\n    this.key = void 0;\n    this._priority = 0;\n  }\n\n  get priority() {\n    return this._priority;\n  }\n\n  set priority(priority) {\n    if (this._priority != priority) {\n      this._priority = priority;\n\n      this._onPriorityChange(priority);\n    }\n  }\n\n  get() {\n    const node = getAnimated(this);\n    return node && node.getValue();\n  }\n\n  to(...args) {\n    return Globals.to(this, args);\n  }\n\n  interpolate(...args) {\n    deprecateInterpolate();\n    return Globals.to(this, args);\n  }\n\n  toJSON() {\n    return this.get();\n  }\n\n  observerAdded(count) {\n    if (count == 1) this._attach();\n  }\n\n  observerRemoved(count) {\n    if (count == 0) this._detach();\n  }\n\n  _attach() {}\n\n  _detach() {}\n\n  _onChange(value, idle = false) {\n    callFluidObservers(this, {\n      type: 'change',\n      parent: this,\n      value,\n      idle\n    });\n  }\n\n  _onPriorityChange(priority) {\n    if (!this.idle) {\n      frameLoop.sort(this);\n    }\n\n    callFluidObservers(this, {\n      type: 'priority',\n      parent: this,\n      priority\n    });\n  }\n\n}\n\nconst $P = Symbol.for('SpringPhase');\nconst HAS_ANIMATED = 1;\nconst IS_ANIMATING = 2;\nconst IS_PAUSED = 4;\nconst hasAnimated = target => (target[$P] & HAS_ANIMATED) > 0;\nconst isAnimating = target => (target[$P] & IS_ANIMATING) > 0;\nconst isPaused = target => (target[$P] & IS_PAUSED) > 0;\nconst setActiveBit = (target, active) => active ? target[$P] |= IS_ANIMATING | HAS_ANIMATED : target[$P] &= ~IS_ANIMATING;\nconst setPausedBit = (target, paused) => paused ? target[$P] |= IS_PAUSED : target[$P] &= ~IS_PAUSED;\n\nclass SpringValue extends FrameValue {\n  constructor(arg1, arg2) {\n    super();\n    this.key = void 0;\n    this.animation = new Animation();\n    this.queue = void 0;\n    this.defaultProps = {};\n    this._state = {\n      paused: false,\n      pauseQueue: new Set(),\n      resumeQueue: new Set(),\n      timeouts: new Set()\n    };\n    this._pendingCalls = new Set();\n    this._lastCallId = 0;\n    this._lastToId = 0;\n    this._memoizedDuration = 0;\n\n    if (!is.und(arg1) || !is.und(arg2)) {\n      const props = is.obj(arg1) ? _extends({}, arg1) : _extends({}, arg2, {\n        from: arg1\n      });\n\n      if (is.und(props.default)) {\n        props.default = true;\n      }\n\n      this.start(props);\n    }\n  }\n\n  get idle() {\n    return !(isAnimating(this) || this._state.asyncTo) || isPaused(this);\n  }\n\n  get goal() {\n    return getFluidValue(this.animation.to);\n  }\n\n  get velocity() {\n    const node = getAnimated(this);\n    return node instanceof AnimatedValue ? node.lastVelocity || 0 : node.getPayload().map(node => node.lastVelocity || 0);\n  }\n\n  get hasAnimated() {\n    return hasAnimated(this);\n  }\n\n  get isAnimating() {\n    return isAnimating(this);\n  }\n\n  get isPaused() {\n    return isPaused(this);\n  }\n\n  advance(dt) {\n    let idle = true;\n    let changed = false;\n    const anim = this.animation;\n    let {\n      config,\n      toValues\n    } = anim;\n    const payload = getPayload(anim.to);\n\n    if (!payload && hasFluidValue(anim.to)) {\n      toValues = toArray(getFluidValue(anim.to));\n    }\n\n    anim.values.forEach((node, i) => {\n      if (node.done) return;\n      const to = node.constructor == AnimatedString ? 1 : payload ? payload[i].lastPosition : toValues[i];\n      let finished = anim.immediate;\n      let position = to;\n\n      if (!finished) {\n        position = node.lastPosition;\n\n        if (config.tension <= 0) {\n          node.done = true;\n          return;\n        }\n\n        let elapsed = node.elapsedTime += dt;\n        const from = anim.fromValues[i];\n        const v0 = node.v0 != null ? node.v0 : node.v0 = is.arr(config.velocity) ? config.velocity[i] : config.velocity;\n        let velocity;\n\n        if (!is.und(config.duration)) {\n          let p = 1;\n\n          if (config.duration > 0) {\n            if (this._memoizedDuration !== config.duration) {\n              this._memoizedDuration = config.duration;\n\n              if (node.durationProgress > 0) {\n                node.elapsedTime = config.duration * node.durationProgress;\n                elapsed = node.elapsedTime += dt;\n              }\n            }\n\n            p = (config.progress || 0) + elapsed / this._memoizedDuration;\n            p = p > 1 ? 1 : p < 0 ? 0 : p;\n            node.durationProgress = p;\n          }\n\n          position = from + config.easing(p) * (to - from);\n          velocity = (position - node.lastPosition) / dt;\n          finished = p == 1;\n        } else if (config.decay) {\n            const decay = config.decay === true ? 0.998 : config.decay;\n            const e = Math.exp(-(1 - decay) * elapsed);\n            position = from + v0 / (1 - decay) * (1 - e);\n            finished = Math.abs(node.lastPosition - position) < 0.1;\n            velocity = v0 * e;\n          } else {\n              velocity = node.lastVelocity == null ? v0 : node.lastVelocity;\n              const precision = config.precision || (from == to ? 0.005 : Math.min(1, Math.abs(to - from) * 0.001));\n              const restVelocity = config.restVelocity || precision / 10;\n              const bounceFactor = config.clamp ? 0 : config.bounce;\n              const canBounce = !is.und(bounceFactor);\n              const isGrowing = from == to ? node.v0 > 0 : from < to;\n              let isMoving;\n              let isBouncing = false;\n              const step = 1;\n              const numSteps = Math.ceil(dt / step);\n\n              for (let n = 0; n < numSteps; ++n) {\n                isMoving = Math.abs(velocity) > restVelocity;\n\n                if (!isMoving) {\n                  finished = Math.abs(to - position) <= precision;\n\n                  if (finished) {\n                    break;\n                  }\n                }\n\n                if (canBounce) {\n                  isBouncing = position == to || position > to == isGrowing;\n\n                  if (isBouncing) {\n                    velocity = -velocity * bounceFactor;\n                    position = to;\n                  }\n                }\n\n                const springForce = -config.tension * 0.000001 * (position - to);\n                const dampingForce = -config.friction * 0.001 * velocity;\n                const acceleration = (springForce + dampingForce) / config.mass;\n                velocity = velocity + acceleration * step;\n                position = position + velocity * step;\n              }\n            }\n\n        node.lastVelocity = velocity;\n\n        if (Number.isNaN(position)) {\n          console.warn(`Got NaN while animating:`, this);\n          finished = true;\n        }\n      }\n\n      if (payload && !payload[i].done) {\n        finished = false;\n      }\n\n      if (finished) {\n        node.done = true;\n      } else {\n        idle = false;\n      }\n\n      if (node.setValue(position, config.round)) {\n        changed = true;\n      }\n    });\n    const node = getAnimated(this);\n    const currVal = node.getValue();\n\n    if (idle) {\n      const finalVal = getFluidValue(anim.to);\n\n      if ((currVal !== finalVal || changed) && !config.decay) {\n        node.setValue(finalVal);\n\n        this._onChange(finalVal);\n      } else if (changed && config.decay) {\n        this._onChange(currVal);\n      }\n\n      this._stop();\n    } else if (changed) {\n      this._onChange(currVal);\n    }\n  }\n\n  set(value) {\n    raf.batchedUpdates(() => {\n      this._stop();\n\n      this._focus(value);\n\n      this._set(value);\n    });\n    return this;\n  }\n\n  pause() {\n    this._update({\n      pause: true\n    });\n  }\n\n  resume() {\n    this._update({\n      pause: false\n    });\n  }\n\n  finish() {\n    if (isAnimating(this)) {\n      const {\n        to,\n        config\n      } = this.animation;\n      raf.batchedUpdates(() => {\n        this._onStart();\n\n        if (!config.decay) {\n          this._set(to, false);\n        }\n\n        this._stop();\n      });\n    }\n\n    return this;\n  }\n\n  update(props) {\n    const queue = this.queue || (this.queue = []);\n    queue.push(props);\n    return this;\n  }\n\n  start(to, arg2) {\n    let queue;\n\n    if (!is.und(to)) {\n      queue = [is.obj(to) ? to : _extends({}, arg2, {\n        to\n      })];\n    } else {\n      queue = this.queue || [];\n      this.queue = [];\n    }\n\n    return Promise.all(queue.map(props => this._update(props))).then(results => getCombinedResult(this, results));\n  }\n\n  stop(cancel) {\n    const {\n      to\n    } = this.animation;\n\n    this._focus(this.get());\n\n    stopAsync(this._state, cancel && this._lastCallId);\n    raf.batchedUpdates(() => this._stop(to, cancel));\n    return this;\n  }\n\n  reset() {\n    this._update({\n      reset: true\n    });\n  }\n\n  eventObserved(event) {\n    if (event.type == 'change') {\n      this._start();\n    } else if (event.type == 'priority') {\n      this.priority = event.priority + 1;\n    }\n  }\n\n  _prepareNode(props) {\n    const key = this.key || '';\n    let {\n      to,\n      from\n    } = props;\n    to = is.obj(to) ? to[key] : to;\n\n    if (to == null || isAsyncTo(to)) {\n      to = undefined;\n    }\n\n    from = is.obj(from) ? from[key] : from;\n\n    if (from == null) {\n      from = undefined;\n    }\n\n    const range = {\n      to,\n      from\n    };\n\n    if (!hasAnimated(this)) {\n      if (props.reverse) [to, from] = [from, to];\n      from = getFluidValue(from);\n\n      if (!is.und(from)) {\n        this._set(from);\n      } else if (!getAnimated(this)) {\n          this._set(to);\n        }\n    }\n\n    return range;\n  }\n\n  _update(_ref, isLoop) {\n    let props = _extends({}, _ref);\n\n    const {\n      key,\n      defaultProps\n    } = this;\n    if (props.default) Object.assign(defaultProps, getDefaultProps(props, (value, prop) => /^on/.test(prop) ? resolveProp(value, key) : value));\n    mergeActiveFn(this, props, 'onProps');\n    sendEvent(this, 'onProps', props, this);\n\n    const range = this._prepareNode(props);\n\n    if (Object.isFrozen(this)) {\n      throw Error('Cannot animate a `SpringValue` object that is frozen. ' + 'Did you forget to pass your component to `animated(...)` before animating its props?');\n    }\n\n    const state = this._state;\n    return scheduleProps(++this._lastCallId, {\n      key,\n      props,\n      defaultProps,\n      state,\n      actions: {\n        pause: () => {\n          if (!isPaused(this)) {\n            setPausedBit(this, true);\n            flushCalls(state.pauseQueue);\n            sendEvent(this, 'onPause', getFinishedResult(this, checkFinished(this, this.animation.to)), this);\n          }\n        },\n        resume: () => {\n          if (isPaused(this)) {\n            setPausedBit(this, false);\n\n            if (isAnimating(this)) {\n              this._resume();\n            }\n\n            flushCalls(state.resumeQueue);\n            sendEvent(this, 'onResume', getFinishedResult(this, checkFinished(this, this.animation.to)), this);\n          }\n        },\n        start: this._merge.bind(this, range)\n      }\n    }).then(result => {\n      if (props.loop && result.finished && !(isLoop && result.noop)) {\n        const nextProps = createLoopUpdate(props);\n\n        if (nextProps) {\n          return this._update(nextProps, true);\n        }\n      }\n\n      return result;\n    });\n  }\n\n  _merge(range, props, resolve) {\n    if (props.cancel) {\n      this.stop(true);\n      return resolve(getCancelledResult(this));\n    }\n\n    const hasToProp = !is.und(range.to);\n    const hasFromProp = !is.und(range.from);\n\n    if (hasToProp || hasFromProp) {\n      if (props.callId > this._lastToId) {\n        this._lastToId = props.callId;\n      } else {\n        return resolve(getCancelledResult(this));\n      }\n    }\n\n    const {\n      key,\n      defaultProps,\n      animation: anim\n    } = this;\n    const {\n      to: prevTo,\n      from: prevFrom\n    } = anim;\n    let {\n      to = prevTo,\n      from = prevFrom\n    } = range;\n\n    if (hasFromProp && !hasToProp && (!props.default || is.und(to))) {\n      to = from;\n    }\n\n    if (props.reverse) [to, from] = [from, to];\n    const hasFromChanged = !isEqual(from, prevFrom);\n\n    if (hasFromChanged) {\n      anim.from = from;\n    }\n\n    from = getFluidValue(from);\n    const hasToChanged = !isEqual(to, prevTo);\n\n    if (hasToChanged) {\n      this._focus(to);\n    }\n\n    const hasAsyncTo = isAsyncTo(props.to);\n    const {\n      config\n    } = anim;\n    const {\n      decay,\n      velocity\n    } = config;\n\n    if (hasToProp || hasFromProp) {\n      config.velocity = 0;\n    }\n\n    if (props.config && !hasAsyncTo) {\n      mergeConfig(config, callProp(props.config, key), props.config !== defaultProps.config ? callProp(defaultProps.config, key) : void 0);\n    }\n\n    let node = getAnimated(this);\n\n    if (!node || is.und(to)) {\n      return resolve(getFinishedResult(this, true));\n    }\n\n    const reset = is.und(props.reset) ? hasFromProp && !props.default : !is.und(from) && matchProp(props.reset, key);\n    const value = reset ? from : this.get();\n    const goal = computeGoal(to);\n    const isAnimatable = is.num(goal) || is.arr(goal) || isAnimatedString(goal);\n    const immediate = !hasAsyncTo && (!isAnimatable || matchProp(defaultProps.immediate || props.immediate, key));\n\n    if (hasToChanged) {\n      const nodeType = getAnimatedType(to);\n\n      if (nodeType !== node.constructor) {\n        if (immediate) {\n          node = this._set(goal);\n        } else throw Error(`Cannot animate between ${node.constructor.name} and ${nodeType.name}, as the \"to\" prop suggests`);\n      }\n    }\n\n    const goalType = node.constructor;\n    let started = hasFluidValue(to);\n    let finished = false;\n\n    if (!started) {\n      const hasValueChanged = reset || !hasAnimated(this) && hasFromChanged;\n\n      if (hasToChanged || hasValueChanged) {\n        finished = isEqual(computeGoal(value), goal);\n        started = !finished;\n      }\n\n      if (!isEqual(anim.immediate, immediate) && !immediate || !isEqual(config.decay, decay) || !isEqual(config.velocity, velocity)) {\n        started = true;\n      }\n    }\n\n    if (finished && isAnimating(this)) {\n      if (anim.changed && !reset) {\n        started = true;\n      } else if (!started) {\n          this._stop(prevTo);\n        }\n    }\n\n    if (!hasAsyncTo) {\n      if (started || hasFluidValue(prevTo)) {\n        anim.values = node.getPayload();\n        anim.toValues = hasFluidValue(to) ? null : goalType == AnimatedString ? [1] : toArray(goal);\n      }\n\n      if (anim.immediate != immediate) {\n        anim.immediate = immediate;\n\n        if (!immediate && !reset) {\n          this._set(prevTo);\n        }\n      }\n\n      if (started) {\n        const {\n          onRest\n        } = anim;\n        each(ACTIVE_EVENTS, type => mergeActiveFn(this, props, type));\n        const result = getFinishedResult(this, checkFinished(this, prevTo));\n        flushCalls(this._pendingCalls, result);\n\n        this._pendingCalls.add(resolve);\n\n        if (anim.changed) raf.batchedUpdates(() => {\n          anim.changed = !reset;\n          onRest == null ? void 0 : onRest(result, this);\n\n          if (reset) {\n            callProp(defaultProps.onRest, result);\n          } else {\n              anim.onStart == null ? void 0 : anim.onStart(result, this);\n            }\n        });\n      }\n    }\n\n    if (reset) {\n      this._set(value);\n    }\n\n    if (hasAsyncTo) {\n      resolve(runAsync(props.to, props, this._state, this));\n    } else if (started) {\n        this._start();\n      } else if (isAnimating(this) && !hasToChanged) {\n          this._pendingCalls.add(resolve);\n        } else {\n            resolve(getNoopResult(value));\n          }\n  }\n\n  _focus(value) {\n    const anim = this.animation;\n\n    if (value !== anim.to) {\n      if (getFluidObservers(this)) {\n        this._detach();\n      }\n\n      anim.to = value;\n\n      if (getFluidObservers(this)) {\n        this._attach();\n      }\n    }\n  }\n\n  _attach() {\n    let priority = 0;\n    const {\n      to\n    } = this.animation;\n\n    if (hasFluidValue(to)) {\n      addFluidObserver(to, this);\n\n      if (isFrameValue(to)) {\n        priority = to.priority + 1;\n      }\n    }\n\n    this.priority = priority;\n  }\n\n  _detach() {\n    const {\n      to\n    } = this.animation;\n\n    if (hasFluidValue(to)) {\n      removeFluidObserver(to, this);\n    }\n  }\n\n  _set(arg, idle = true) {\n    const value = getFluidValue(arg);\n\n    if (!is.und(value)) {\n      const oldNode = getAnimated(this);\n\n      if (!oldNode || !isEqual(value, oldNode.getValue())) {\n        const nodeType = getAnimatedType(value);\n\n        if (!oldNode || oldNode.constructor != nodeType) {\n          setAnimated(this, nodeType.create(value));\n        } else {\n          oldNode.setValue(value);\n        }\n\n        if (oldNode) {\n          raf.batchedUpdates(() => {\n            this._onChange(value, idle);\n          });\n        }\n      }\n    }\n\n    return getAnimated(this);\n  }\n\n  _onStart() {\n    const anim = this.animation;\n\n    if (!anim.changed) {\n      anim.changed = true;\n      sendEvent(this, 'onStart', getFinishedResult(this, checkFinished(this, anim.to)), this);\n    }\n  }\n\n  _onChange(value, idle) {\n    if (!idle) {\n      this._onStart();\n\n      callProp(this.animation.onChange, value, this);\n    }\n\n    callProp(this.defaultProps.onChange, value, this);\n\n    super._onChange(value, idle);\n  }\n\n  _start() {\n    const anim = this.animation;\n    getAnimated(this).reset(getFluidValue(anim.to));\n\n    if (!anim.immediate) {\n      anim.fromValues = anim.values.map(node => node.lastPosition);\n    }\n\n    if (!isAnimating(this)) {\n      setActiveBit(this, true);\n\n      if (!isPaused(this)) {\n        this._resume();\n      }\n    }\n  }\n\n  _resume() {\n    if (Globals.skipAnimation) {\n      this.finish();\n    } else {\n      frameLoop.start(this);\n    }\n  }\n\n  _stop(goal, cancel) {\n    if (isAnimating(this)) {\n      setActiveBit(this, false);\n      const anim = this.animation;\n      each(anim.values, node => {\n        node.done = true;\n      });\n\n      if (anim.toValues) {\n        anim.onChange = anim.onPause = anim.onResume = undefined;\n      }\n\n      callFluidObservers(this, {\n        type: 'idle',\n        parent: this\n      });\n      const result = cancel ? getCancelledResult(this.get()) : getFinishedResult(this.get(), checkFinished(this, goal != null ? goal : anim.to));\n      flushCalls(this._pendingCalls, result);\n\n      if (anim.changed) {\n        anim.changed = false;\n        sendEvent(this, 'onRest', result, this);\n      }\n    }\n  }\n\n}\n\nfunction checkFinished(target, to) {\n  const goal = computeGoal(to);\n  const value = computeGoal(target.get());\n  return isEqual(value, goal);\n}\n\nfunction createLoopUpdate(props, loop = props.loop, to = props.to) {\n  let loopRet = callProp(loop);\n\n  if (loopRet) {\n    const overrides = loopRet !== true && inferTo(loopRet);\n    const reverse = (overrides || props).reverse;\n    const reset = !overrides || overrides.reset;\n    return createUpdate(_extends({}, props, {\n      loop,\n      default: false,\n      pause: undefined,\n      to: !reverse || isAsyncTo(to) ? to : undefined,\n      from: reset ? props.from : undefined,\n      reset\n    }, overrides));\n  }\n}\nfunction createUpdate(props) {\n  const {\n    to,\n    from\n  } = props = inferTo(props);\n  const keys = new Set();\n  if (is.obj(to)) findDefined(to, keys);\n  if (is.obj(from)) findDefined(from, keys);\n  props.keys = keys.size ? Array.from(keys) : null;\n  return props;\n}\nfunction declareUpdate(props) {\n  const update = createUpdate(props);\n\n  if (is.und(update.default)) {\n    update.default = getDefaultProps(update);\n  }\n\n  return update;\n}\n\nfunction findDefined(values, keys) {\n  eachProp(values, (value, key) => value != null && keys.add(key));\n}\n\nconst ACTIVE_EVENTS = ['onStart', 'onRest', 'onChange', 'onPause', 'onResume'];\n\nfunction mergeActiveFn(target, props, type) {\n  target.animation[type] = props[type] !== getDefaultProp(props, type) ? resolveProp(props[type], target.key) : undefined;\n}\n\nfunction sendEvent(target, type, ...args) {\n  var _target$animation$typ, _target$animation, _target$defaultProps$, _target$defaultProps;\n\n  (_target$animation$typ = (_target$animation = target.animation)[type]) == null ? void 0 : _target$animation$typ.call(_target$animation, ...args);\n  (_target$defaultProps$ = (_target$defaultProps = target.defaultProps)[type]) == null ? void 0 : _target$defaultProps$.call(_target$defaultProps, ...args);\n}\n\nconst BATCHED_EVENTS = ['onStart', 'onChange', 'onRest'];\nlet nextId = 1;\nclass Controller {\n  constructor(props, flush) {\n    this.id = nextId++;\n    this.springs = {};\n    this.queue = [];\n    this.ref = void 0;\n    this._flush = void 0;\n    this._initialProps = void 0;\n    this._lastAsyncId = 0;\n    this._active = new Set();\n    this._changed = new Set();\n    this._started = false;\n    this._item = void 0;\n    this._state = {\n      paused: false,\n      pauseQueue: new Set(),\n      resumeQueue: new Set(),\n      timeouts: new Set()\n    };\n    this._events = {\n      onStart: new Map(),\n      onChange: new Map(),\n      onRest: new Map()\n    };\n    this._onFrame = this._onFrame.bind(this);\n\n    if (flush) {\n      this._flush = flush;\n    }\n\n    if (props) {\n      this.start(_extends({\n        default: true\n      }, props));\n    }\n  }\n\n  get idle() {\n    return !this._state.asyncTo && Object.values(this.springs).every(spring => spring.idle);\n  }\n\n  get item() {\n    return this._item;\n  }\n\n  set item(item) {\n    this._item = item;\n  }\n\n  get() {\n    const values = {};\n    this.each((spring, key) => values[key] = spring.get());\n    return values;\n  }\n\n  set(values) {\n    for (const key in values) {\n      const value = values[key];\n\n      if (!is.und(value)) {\n        this.springs[key].set(value);\n      }\n    }\n  }\n\n  update(props) {\n    if (props) {\n      this.queue.push(createUpdate(props));\n    }\n\n    return this;\n  }\n\n  start(props) {\n    let {\n      queue\n    } = this;\n\n    if (props) {\n      queue = toArray(props).map(createUpdate);\n    } else {\n      this.queue = [];\n    }\n\n    if (this._flush) {\n      return this._flush(this, queue);\n    }\n\n    prepareKeys(this, queue);\n    return flushUpdateQueue(this, queue);\n  }\n\n  stop(arg, keys) {\n    if (arg !== !!arg) {\n      keys = arg;\n    }\n\n    if (keys) {\n      const springs = this.springs;\n      each(toArray(keys), key => springs[key].stop(!!arg));\n    } else {\n      stopAsync(this._state, this._lastAsyncId);\n      this.each(spring => spring.stop(!!arg));\n    }\n\n    return this;\n  }\n\n  pause(keys) {\n    if (is.und(keys)) {\n      this.start({\n        pause: true\n      });\n    } else {\n      const springs = this.springs;\n      each(toArray(keys), key => springs[key].pause());\n    }\n\n    return this;\n  }\n\n  resume(keys) {\n    if (is.und(keys)) {\n      this.start({\n        pause: false\n      });\n    } else {\n      const springs = this.springs;\n      each(toArray(keys), key => springs[key].resume());\n    }\n\n    return this;\n  }\n\n  each(iterator) {\n    eachProp(this.springs, iterator);\n  }\n\n  _onFrame() {\n    const {\n      onStart,\n      onChange,\n      onRest\n    } = this._events;\n    const active = this._active.size > 0;\n    const changed = this._changed.size > 0;\n\n    if (active && !this._started || changed && !this._started) {\n      this._started = true;\n      flush(onStart, ([onStart, result]) => {\n        result.value = this.get();\n        onStart(result, this, this._item);\n      });\n    }\n\n    const idle = !active && this._started;\n    const values = changed || idle && onRest.size ? this.get() : null;\n\n    if (changed && onChange.size) {\n      flush(onChange, ([onChange, result]) => {\n        result.value = values;\n        onChange(result, this, this._item);\n      });\n    }\n\n    if (idle) {\n      this._started = false;\n      flush(onRest, ([onRest, result]) => {\n        result.value = values;\n        onRest(result, this, this._item);\n      });\n    }\n  }\n\n  eventObserved(event) {\n    if (event.type == 'change') {\n      this._changed.add(event.parent);\n\n      if (!event.idle) {\n        this._active.add(event.parent);\n      }\n    } else if (event.type == 'idle') {\n      this._active.delete(event.parent);\n    } else return;\n\n    raf.onFrame(this._onFrame);\n  }\n\n}\nfunction flushUpdateQueue(ctrl, queue) {\n  return Promise.all(queue.map(props => flushUpdate(ctrl, props))).then(results => getCombinedResult(ctrl, results));\n}\nasync function flushUpdate(ctrl, props, isLoop) {\n  const {\n    keys,\n    to,\n    from,\n    loop,\n    onRest,\n    onResolve\n  } = props;\n  const defaults = is.obj(props.default) && props.default;\n\n  if (loop) {\n    props.loop = false;\n  }\n\n  if (to === false) props.to = null;\n  if (from === false) props.from = null;\n  const asyncTo = is.arr(to) || is.fun(to) ? to : undefined;\n\n  if (asyncTo) {\n    props.to = undefined;\n    props.onRest = undefined;\n\n    if (defaults) {\n      defaults.onRest = undefined;\n    }\n  } else {\n      each(BATCHED_EVENTS, key => {\n        const handler = props[key];\n\n        if (is.fun(handler)) {\n          const queue = ctrl['_events'][key];\n\n          props[key] = ({\n            finished,\n            cancelled\n          }) => {\n            const result = queue.get(handler);\n\n            if (result) {\n              if (!finished) result.finished = false;\n              if (cancelled) result.cancelled = true;\n            } else {\n              queue.set(handler, {\n                value: null,\n                finished: finished || false,\n                cancelled: cancelled || false\n              });\n            }\n          };\n\n          if (defaults) {\n            defaults[key] = props[key];\n          }\n        }\n      });\n    }\n\n  const state = ctrl['_state'];\n\n  if (props.pause === !state.paused) {\n    state.paused = props.pause;\n    flushCalls(props.pause ? state.pauseQueue : state.resumeQueue);\n  } else if (state.paused) {\n      props.pause = true;\n    }\n\n  const promises = (keys || Object.keys(ctrl.springs)).map(key => ctrl.springs[key].start(props));\n  const cancel = props.cancel === true || getDefaultProp(props, 'cancel') === true;\n\n  if (asyncTo || cancel && state.asyncId) {\n    promises.push(scheduleProps(++ctrl['_lastAsyncId'], {\n      props,\n      state,\n      actions: {\n        pause: noop,\n        resume: noop,\n\n        start(props, resolve) {\n          if (cancel) {\n            stopAsync(state, ctrl['_lastAsyncId']);\n            resolve(getCancelledResult(ctrl));\n          } else {\n            props.onRest = onRest;\n            resolve(runAsync(asyncTo, props, state, ctrl));\n          }\n        }\n\n      }\n    }));\n  }\n\n  if (state.paused) {\n    await new Promise(resume => {\n      state.resumeQueue.add(resume);\n    });\n  }\n\n  const result = getCombinedResult(ctrl, await Promise.all(promises));\n\n  if (loop && result.finished && !(isLoop && result.noop)) {\n    const nextProps = createLoopUpdate(props, loop, to);\n\n    if (nextProps) {\n      prepareKeys(ctrl, [nextProps]);\n      return flushUpdate(ctrl, nextProps, true);\n    }\n  }\n\n  if (onResolve) {\n    raf.batchedUpdates(() => onResolve(result, ctrl, ctrl.item));\n  }\n\n  return result;\n}\nfunction getSprings(ctrl, props) {\n  const springs = _extends({}, ctrl.springs);\n\n  if (props) {\n    each(toArray(props), props => {\n      if (is.und(props.keys)) {\n        props = createUpdate(props);\n      }\n\n      if (!is.obj(props.to)) {\n        props = _extends({}, props, {\n          to: undefined\n        });\n      }\n\n      prepareSprings(springs, props, key => {\n        return createSpring(key);\n      });\n    });\n  }\n\n  setSprings(ctrl, springs);\n  return springs;\n}\nfunction setSprings(ctrl, springs) {\n  eachProp(springs, (spring, key) => {\n    if (!ctrl.springs[key]) {\n      ctrl.springs[key] = spring;\n      addFluidObserver(spring, ctrl);\n    }\n  });\n}\n\nfunction createSpring(key, observer) {\n  const spring = new SpringValue();\n  spring.key = key;\n\n  if (observer) {\n    addFluidObserver(spring, observer);\n  }\n\n  return spring;\n}\n\nfunction prepareSprings(springs, props, create) {\n  if (props.keys) {\n    each(props.keys, key => {\n      const spring = springs[key] || (springs[key] = create(key));\n      spring['_prepareNode'](props);\n    });\n  }\n}\n\nfunction prepareKeys(ctrl, queue) {\n  each(queue, props => {\n    prepareSprings(ctrl.springs, props, key => {\n      return createSpring(key, ctrl);\n    });\n  });\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nconst _excluded$3 = [\"children\"];\nconst SpringContext = _ref => {\n  let {\n    children\n  } = _ref,\n      props = _objectWithoutPropertiesLoose(_ref, _excluded$3);\n\n  const inherited = useContext(ctx);\n  const pause = props.pause || !!inherited.pause,\n        immediate = props.immediate || !!inherited.immediate;\n  props = useMemoOne(() => ({\n    pause,\n    immediate\n  }), [pause, immediate]);\n  const {\n    Provider\n  } = ctx;\n  return React.createElement(Provider, {\n    value: props\n  }, children);\n};\nconst ctx = makeContext(SpringContext, {});\nSpringContext.Provider = ctx.Provider;\nSpringContext.Consumer = ctx.Consumer;\n\nfunction makeContext(target, init) {\n  Object.assign(target, React.createContext(init));\n  target.Provider._context = target;\n  target.Consumer._context = target;\n  return target;\n}\n\nconst SpringRef = () => {\n  const current = [];\n\n  const SpringRef = function SpringRef(props) {\n    deprecateDirectCall();\n    const results = [];\n    each(current, (ctrl, i) => {\n      if (is.und(props)) {\n        results.push(ctrl.start());\n      } else {\n        const update = _getProps(props, ctrl, i);\n\n        if (update) {\n          results.push(ctrl.start(update));\n        }\n      }\n    });\n    return results;\n  };\n\n  SpringRef.current = current;\n\n  SpringRef.add = function (ctrl) {\n    if (!current.includes(ctrl)) {\n      current.push(ctrl);\n    }\n  };\n\n  SpringRef.delete = function (ctrl) {\n    const i = current.indexOf(ctrl);\n    if (~i) current.splice(i, 1);\n  };\n\n  SpringRef.pause = function () {\n    each(current, ctrl => ctrl.pause(...arguments));\n    return this;\n  };\n\n  SpringRef.resume = function () {\n    each(current, ctrl => ctrl.resume(...arguments));\n    return this;\n  };\n\n  SpringRef.set = function (values) {\n    each(current, ctrl => ctrl.set(values));\n  };\n\n  SpringRef.start = function (props) {\n    const results = [];\n    each(current, (ctrl, i) => {\n      if (is.und(props)) {\n        results.push(ctrl.start());\n      } else {\n        const update = this._getProps(props, ctrl, i);\n\n        if (update) {\n          results.push(ctrl.start(update));\n        }\n      }\n    });\n    return results;\n  };\n\n  SpringRef.stop = function () {\n    each(current, ctrl => ctrl.stop(...arguments));\n    return this;\n  };\n\n  SpringRef.update = function (props) {\n    each(current, (ctrl, i) => ctrl.update(this._getProps(props, ctrl, i)));\n    return this;\n  };\n\n  const _getProps = function _getProps(arg, ctrl, index) {\n    return is.fun(arg) ? arg(index, ctrl) : arg;\n  };\n\n  SpringRef._getProps = _getProps;\n  return SpringRef;\n};\n\nfunction useSprings(length, props, deps) {\n  const propsFn = is.fun(props) && props;\n  if (propsFn && !deps) deps = [];\n  const ref = useMemo(() => propsFn || arguments.length == 3 ? SpringRef() : void 0, []);\n  const layoutId = useRef(0);\n  const forceUpdate = useForceUpdate();\n  const state = useMemo(() => ({\n    ctrls: [],\n    queue: [],\n\n    flush(ctrl, updates) {\n      const springs = getSprings(ctrl, updates);\n      const canFlushSync = layoutId.current > 0 && !state.queue.length && !Object.keys(springs).some(key => !ctrl.springs[key]);\n      return canFlushSync ? flushUpdateQueue(ctrl, updates) : new Promise(resolve => {\n        setSprings(ctrl, springs);\n        state.queue.push(() => {\n          resolve(flushUpdateQueue(ctrl, updates));\n        });\n        forceUpdate();\n      });\n    }\n\n  }), []);\n  const ctrls = useRef([...state.ctrls]);\n  const updates = [];\n  const prevLength = usePrev(length) || 0;\n  useMemo(() => {\n    each(ctrls.current.slice(length, prevLength), ctrl => {\n      detachRefs(ctrl, ref);\n      ctrl.stop(true);\n    });\n    ctrls.current.length = length;\n    declareUpdates(prevLength, length);\n  }, [length]);\n  useMemo(() => {\n    declareUpdates(0, Math.min(prevLength, length));\n  }, deps);\n\n  function declareUpdates(startIndex, endIndex) {\n    for (let i = startIndex; i < endIndex; i++) {\n      const ctrl = ctrls.current[i] || (ctrls.current[i] = new Controller(null, state.flush));\n      const update = propsFn ? propsFn(i, ctrl) : props[i];\n\n      if (update) {\n        updates[i] = declareUpdate(update);\n      }\n    }\n  }\n\n  const springs = ctrls.current.map((ctrl, i) => getSprings(ctrl, updates[i]));\n  const context = useContext(SpringContext);\n  const prevContext = usePrev(context);\n  const hasContext = context !== prevContext && hasProps(context);\n  useLayoutEffect(() => {\n    layoutId.current++;\n    state.ctrls = ctrls.current;\n    const {\n      queue\n    } = state;\n\n    if (queue.length) {\n      state.queue = [];\n      each(queue, cb => cb());\n    }\n\n    each(ctrls.current, (ctrl, i) => {\n      ref == null ? void 0 : ref.add(ctrl);\n\n      if (hasContext) {\n        ctrl.start({\n          default: context\n        });\n      }\n\n      const update = updates[i];\n\n      if (update) {\n        replaceRef(ctrl, update.ref);\n\n        if (ctrl.ref) {\n          ctrl.queue.push(update);\n        } else {\n          ctrl.start(update);\n        }\n      }\n    });\n  });\n  useOnce(() => () => {\n    each(state.ctrls, ctrl => ctrl.stop(true));\n  });\n  const values = springs.map(x => _extends({}, x));\n  return ref ? [values, ref] : values;\n}\n\nfunction useSpring(props, deps) {\n  const isFn = is.fun(props);\n  const [[values], ref] = useSprings(1, isFn ? props : [props], isFn ? deps || [] : deps);\n  return isFn || arguments.length == 2 ? [values, ref] : values;\n}\n\nconst initSpringRef = () => SpringRef();\n\nconst useSpringRef = () => useState(initSpringRef)[0];\n\nfunction useTrail(length, propsArg, deps) {\n  const propsFn = is.fun(propsArg) && propsArg;\n  if (propsFn && !deps) deps = [];\n  let reverse = true;\n  const result = useSprings(length, (i, ctrl) => {\n    const props = propsFn ? propsFn(i, ctrl) : propsArg;\n    reverse = reverse && props.reverse;\n    return props;\n  }, deps || [{}]);\n  const ref = result[1];\n  useLayoutEffect(() => {\n    each(ref.current, (ctrl, i) => {\n      const parent = ref.current[i + (reverse ? 1 : -1)];\n      if (parent) ctrl.start({\n        to: parent.springs\n      });\n    });\n  }, deps);\n\n  if (propsFn || arguments.length == 3) {\n    ref['_getProps'] = (propsArg, ctrl, i) => {\n      const props = is.fun(propsArg) ? propsArg(i, ctrl) : propsArg;\n\n      if (props) {\n        const parent = ref.current[i + (props.reverse ? 1 : -1)];\n        if (parent) props.to = parent.springs;\n        return props;\n      }\n    };\n\n    return result;\n  }\n\n  return result[0];\n}\n\nlet TransitionPhase;\n\n(function (TransitionPhase) {\n  TransitionPhase[\"MOUNT\"] = \"mount\";\n  TransitionPhase[\"ENTER\"] = \"enter\";\n  TransitionPhase[\"UPDATE\"] = \"update\";\n  TransitionPhase[\"LEAVE\"] = \"leave\";\n})(TransitionPhase || (TransitionPhase = {}));\n\nfunction useTransition(data, props, deps) {\n  const propsFn = is.fun(props) && props;\n  const {\n    reset,\n    sort,\n    trail = 0,\n    expires = true,\n    onDestroyed,\n    ref: propsRef,\n    config: propsConfig\n  } = propsFn ? propsFn() : props;\n  const ref = useMemo(() => propsFn || arguments.length == 3 ? SpringRef() : void 0, []);\n  const items = toArray(data);\n  const transitions = [];\n  const usedTransitions = useRef(null);\n  const prevTransitions = reset ? null : usedTransitions.current;\n  useLayoutEffect(() => {\n    usedTransitions.current = transitions;\n  });\n  useOnce(() => () => each(usedTransitions.current, t => {\n    if (t.expired) {\n      clearTimeout(t.expirationId);\n    }\n\n    detachRefs(t.ctrl, ref);\n    t.ctrl.stop(true);\n  }));\n  const keys = getKeys(items, propsFn ? propsFn() : props, prevTransitions);\n  const expired = reset && usedTransitions.current || [];\n  useLayoutEffect(() => each(expired, ({\n    ctrl,\n    item,\n    key\n  }) => {\n    detachRefs(ctrl, ref);\n    callProp(onDestroyed, item, key);\n  }));\n  const reused = [];\n  if (prevTransitions) each(prevTransitions, (t, i) => {\n    if (t.expired) {\n      clearTimeout(t.expirationId);\n      expired.push(t);\n    } else {\n      i = reused[i] = keys.indexOf(t.key);\n      if (~i) transitions[i] = t;\n    }\n  });\n  each(items, (item, i) => {\n    if (!transitions[i]) {\n      transitions[i] = {\n        key: keys[i],\n        item,\n        phase: TransitionPhase.MOUNT,\n        ctrl: new Controller()\n      };\n      transitions[i].ctrl.item = item;\n    }\n  });\n\n  if (reused.length) {\n    let i = -1;\n    const {\n      leave\n    } = propsFn ? propsFn() : props;\n    each(reused, (keyIndex, prevIndex) => {\n      const t = prevTransitions[prevIndex];\n\n      if (~keyIndex) {\n        i = transitions.indexOf(t);\n        transitions[i] = _extends({}, t, {\n          item: items[keyIndex]\n        });\n      } else if (leave) {\n        transitions.splice(++i, 0, t);\n      }\n    });\n  }\n\n  if (is.fun(sort)) {\n    transitions.sort((a, b) => sort(a.item, b.item));\n  }\n\n  let delay = -trail;\n  const forceUpdate = useForceUpdate();\n  const defaultProps = getDefaultProps(props);\n  const changes = new Map();\n  each(transitions, (t, i) => {\n    const key = t.key;\n    const prevPhase = t.phase;\n    const p = propsFn ? propsFn() : props;\n    let to;\n    let phase;\n    let propsDelay = callProp(p.delay || 0, key);\n\n    if (prevPhase == TransitionPhase.MOUNT) {\n      to = p.enter;\n      phase = TransitionPhase.ENTER;\n    } else {\n      const isLeave = keys.indexOf(key) < 0;\n\n      if (prevPhase != TransitionPhase.LEAVE) {\n        if (isLeave) {\n          to = p.leave;\n          phase = TransitionPhase.LEAVE;\n        } else if (to = p.update) {\n          phase = TransitionPhase.UPDATE;\n        } else return;\n      } else if (!isLeave) {\n        to = p.enter;\n        phase = TransitionPhase.ENTER;\n      } else return;\n    }\n\n    to = callProp(to, t.item, i);\n    to = is.obj(to) ? inferTo(to) : {\n      to\n    };\n\n    if (!to.config) {\n      const config = propsConfig || defaultProps.config;\n      to.config = callProp(config, t.item, i, phase);\n    }\n\n    delay += trail;\n\n    const payload = _extends({}, defaultProps, {\n      delay: propsDelay + delay,\n      ref: propsRef,\n      immediate: p.immediate,\n      reset: false\n    }, to);\n\n    if (phase == TransitionPhase.ENTER && is.und(payload.from)) {\n      const _p = propsFn ? propsFn() : props;\n\n      const from = is.und(_p.initial) || prevTransitions ? _p.from : _p.initial;\n      payload.from = callProp(from, t.item, i);\n    }\n\n    const {\n      onResolve\n    } = payload;\n\n    payload.onResolve = result => {\n      callProp(onResolve, result);\n      const transitions = usedTransitions.current;\n      const t = transitions.find(t => t.key === key);\n      if (!t) return;\n\n      if (result.cancelled && t.phase != TransitionPhase.UPDATE) {\n        return;\n      }\n\n      if (t.ctrl.idle) {\n        const idle = transitions.every(t => t.ctrl.idle);\n\n        if (t.phase == TransitionPhase.LEAVE) {\n          const expiry = callProp(expires, t.item);\n\n          if (expiry !== false) {\n            const expiryMs = expiry === true ? 0 : expiry;\n            t.expired = true;\n\n            if (!idle && expiryMs > 0) {\n              if (expiryMs <= 0x7fffffff) t.expirationId = setTimeout(forceUpdate, expiryMs);\n              return;\n            }\n          }\n        }\n\n        if (idle && transitions.some(t => t.expired)) {\n          forceUpdate();\n        }\n      }\n    };\n\n    const springs = getSprings(t.ctrl, payload);\n    changes.set(t, {\n      phase,\n      springs,\n      payload\n    });\n  });\n  const context = useContext(SpringContext);\n  const prevContext = usePrev(context);\n  const hasContext = context !== prevContext && hasProps(context);\n  useLayoutEffect(() => {\n    if (hasContext) each(transitions, t => {\n      t.ctrl.start({\n        default: context\n      });\n    });\n  }, [context]);\n  useLayoutEffect(() => {\n    each(changes, ({\n      phase,\n      payload\n    }, t) => {\n      const {\n        ctrl\n      } = t;\n      t.phase = phase;\n      ref == null ? void 0 : ref.add(ctrl);\n\n      if (hasContext && phase == TransitionPhase.ENTER) {\n        ctrl.start({\n          default: context\n        });\n      }\n\n      if (payload) {\n        replaceRef(ctrl, payload.ref);\n\n        if (ctrl.ref) {\n          ctrl.update(payload);\n        } else {\n          ctrl.start(payload);\n        }\n      }\n    });\n  }, reset ? void 0 : deps);\n\n  const renderTransitions = render => React.createElement(React.Fragment, null, transitions.map((t, i) => {\n    const {\n      springs\n    } = changes.get(t) || t.ctrl;\n    const elem = render(_extends({}, springs), t.item, t, i);\n    return elem && elem.type ? React.createElement(elem.type, _extends({}, elem.props, {\n      key: is.str(t.key) || is.num(t.key) ? t.key : t.ctrl.id,\n      ref: elem.ref\n    })) : elem;\n  }));\n\n  return ref ? [renderTransitions, ref] : renderTransitions;\n}\nlet nextKey = 1;\n\nfunction getKeys(items, {\n  key,\n  keys = key\n}, prevTransitions) {\n  if (keys === null) {\n    const reused = new Set();\n    return items.map(item => {\n      const t = prevTransitions && prevTransitions.find(t => t.item === item && t.phase !== TransitionPhase.LEAVE && !reused.has(t));\n\n      if (t) {\n        reused.add(t);\n        return t.key;\n      }\n\n      return nextKey++;\n    });\n  }\n\n  return is.und(keys) ? items : is.fun(keys) ? items.map(keys) : toArray(keys);\n}\n\nconst _excluded$2 = [\"children\"];\nfunction Spring(_ref) {\n  let {\n    children\n  } = _ref,\n      props = _objectWithoutPropertiesLoose(_ref, _excluded$2);\n\n  return children(useSpring(props));\n}\n\nconst _excluded$1 = [\"items\", \"children\"];\nfunction Trail(_ref) {\n  let {\n    items,\n    children\n  } = _ref,\n      props = _objectWithoutPropertiesLoose(_ref, _excluded$1);\n\n  const trails = useTrail(items.length, props);\n  return items.map((item, index) => {\n    const result = children(item, index);\n    return is.fun(result) ? result(trails[index]) : result;\n  });\n}\n\nconst _excluded = [\"items\", \"children\"];\nfunction Transition(_ref) {\n  let {\n    items,\n    children\n  } = _ref,\n      props = _objectWithoutPropertiesLoose(_ref, _excluded);\n\n  return useTransition(items, props)(children);\n}\n\nclass Interpolation extends FrameValue {\n  constructor(source, args) {\n    super();\n    this.key = void 0;\n    this.idle = true;\n    this.calc = void 0;\n    this._active = new Set();\n    this.source = source;\n    this.calc = createInterpolator(...args);\n\n    const value = this._get();\n\n    const nodeType = getAnimatedType(value);\n    setAnimated(this, nodeType.create(value));\n  }\n\n  advance(_dt) {\n    const value = this._get();\n\n    const oldValue = this.get();\n\n    if (!isEqual(value, oldValue)) {\n      getAnimated(this).setValue(value);\n\n      this._onChange(value, this.idle);\n    }\n\n    if (!this.idle && checkIdle(this._active)) {\n      becomeIdle(this);\n    }\n  }\n\n  _get() {\n    const inputs = is.arr(this.source) ? this.source.map(getFluidValue) : toArray(getFluidValue(this.source));\n    return this.calc(...inputs);\n  }\n\n  _start() {\n    if (this.idle && !checkIdle(this._active)) {\n      this.idle = false;\n      each(getPayload(this), node => {\n        node.done = false;\n      });\n\n      if (Globals.skipAnimation) {\n        raf.batchedUpdates(() => this.advance());\n        becomeIdle(this);\n      } else {\n        frameLoop.start(this);\n      }\n    }\n  }\n\n  _attach() {\n    let priority = 1;\n    each(toArray(this.source), source => {\n      if (hasFluidValue(source)) {\n        addFluidObserver(source, this);\n      }\n\n      if (isFrameValue(source)) {\n        if (!source.idle) {\n          this._active.add(source);\n        }\n\n        priority = Math.max(priority, source.priority + 1);\n      }\n    });\n    this.priority = priority;\n\n    this._start();\n  }\n\n  _detach() {\n    each(toArray(this.source), source => {\n      if (hasFluidValue(source)) {\n        removeFluidObserver(source, this);\n      }\n    });\n\n    this._active.clear();\n\n    becomeIdle(this);\n  }\n\n  eventObserved(event) {\n    if (event.type == 'change') {\n      if (event.idle) {\n        this.advance();\n      } else {\n        this._active.add(event.parent);\n\n        this._start();\n      }\n    } else if (event.type == 'idle') {\n        this._active.delete(event.parent);\n      } else if (event.type == 'priority') {\n          this.priority = toArray(this.source).reduce((highest, parent) => Math.max(highest, (isFrameValue(parent) ? parent.priority : 0) + 1), 0);\n        }\n  }\n\n}\n\nfunction isIdle(source) {\n  return source.idle !== false;\n}\n\nfunction checkIdle(active) {\n  return !active.size || Array.from(active).every(isIdle);\n}\n\nfunction becomeIdle(self) {\n  if (!self.idle) {\n    self.idle = true;\n    each(getPayload(self), node => {\n      node.done = true;\n    });\n    callFluidObservers(self, {\n      type: 'idle',\n      parent: self\n    });\n  }\n}\n\nconst to = (source, ...args) => new Interpolation(source, args);\nconst interpolate = (source, ...args) => (deprecateInterpolate(), new Interpolation(source, args));\n\nGlobals.assign({\n  createStringInterpolator,\n  to: (source, args) => new Interpolation(source, args)\n});\nconst update = frameLoop.advance;\n\nexport { BailSignal, Controller, FrameValue, Interpolation, Spring, SpringContext, SpringRef, SpringValue, Trail, Transition, config, inferTo, interpolate, to, update, useChain, useSpring, useSpringRef, useSprings, useTrail, useTransition };\n", "import { defineHidden, is, createInterpolator, eachProp, hasFluidValue, getFluidValue, each, isAnimatedString, useForceUpdate, useLayoutEffect, addFluidObserver, removeFluidObserver, raf, useOnce } from '@react-spring/shared';\nimport * as React from 'react';\nimport { forwardRef, useRef, useCallback, useEffect } from 'react';\n\nconst $node = Symbol.for('Animated:node');\nconst isAnimated = value => !!value && value[$node] === value;\nconst getAnimated = owner => owner && owner[$node];\nconst setAnimated = (owner, node) => defineHidden(owner, $node, node);\nconst getPayload = owner => owner && owner[$node] && owner[$node].getPayload();\nclass Animated {\n  constructor() {\n    this.payload = void 0;\n    setAnimated(this, this);\n  }\n\n  getPayload() {\n    return this.payload || [];\n  }\n\n}\n\nclass AnimatedValue extends Animated {\n  constructor(_value) {\n    super();\n    this.done = true;\n    this.elapsedTime = void 0;\n    this.lastPosition = void 0;\n    this.lastVelocity = void 0;\n    this.v0 = void 0;\n    this.durationProgress = 0;\n    this._value = _value;\n\n    if (is.num(this._value)) {\n      this.lastPosition = this._value;\n    }\n  }\n\n  static create(value) {\n    return new AnimatedValue(value);\n  }\n\n  getPayload() {\n    return [this];\n  }\n\n  getValue() {\n    return this._value;\n  }\n\n  setValue(value, step) {\n    if (is.num(value)) {\n      this.lastPosition = value;\n\n      if (step) {\n        value = Math.round(value / step) * step;\n\n        if (this.done) {\n          this.lastPosition = value;\n        }\n      }\n    }\n\n    if (this._value === value) {\n      return false;\n    }\n\n    this._value = value;\n    return true;\n  }\n\n  reset() {\n    const {\n      done\n    } = this;\n    this.done = false;\n\n    if (is.num(this._value)) {\n      this.elapsedTime = 0;\n      this.durationProgress = 0;\n      this.lastPosition = this._value;\n      if (done) this.lastVelocity = null;\n      this.v0 = null;\n    }\n  }\n\n}\n\nclass AnimatedString extends AnimatedValue {\n  constructor(value) {\n    super(0);\n    this._string = null;\n    this._toString = void 0;\n    this._toString = createInterpolator({\n      output: [value, value]\n    });\n  }\n\n  static create(value) {\n    return new AnimatedString(value);\n  }\n\n  getValue() {\n    let value = this._string;\n    return value == null ? this._string = this._toString(this._value) : value;\n  }\n\n  setValue(value) {\n    if (is.str(value)) {\n      if (value == this._string) {\n        return false;\n      }\n\n      this._string = value;\n      this._value = 1;\n    } else if (super.setValue(value)) {\n      this._string = null;\n    } else {\n      return false;\n    }\n\n    return true;\n  }\n\n  reset(goal) {\n    if (goal) {\n      this._toString = createInterpolator({\n        output: [this.getValue(), goal]\n      });\n    }\n\n    this._value = 0;\n    super.reset();\n  }\n\n}\n\nconst TreeContext = {\n  dependencies: null\n};\n\nclass AnimatedObject extends Animated {\n  constructor(source) {\n    super();\n    this.source = source;\n    this.setValue(source);\n  }\n\n  getValue(animated) {\n    const values = {};\n    eachProp(this.source, (source, key) => {\n      if (isAnimated(source)) {\n        values[key] = source.getValue(animated);\n      } else if (hasFluidValue(source)) {\n        values[key] = getFluidValue(source);\n      } else if (!animated) {\n        values[key] = source;\n      }\n    });\n    return values;\n  }\n\n  setValue(source) {\n    this.source = source;\n    this.payload = this._makePayload(source);\n  }\n\n  reset() {\n    if (this.payload) {\n      each(this.payload, node => node.reset());\n    }\n  }\n\n  _makePayload(source) {\n    if (source) {\n      const payload = new Set();\n      eachProp(source, this._addToPayload, payload);\n      return Array.from(payload);\n    }\n  }\n\n  _addToPayload(source) {\n    if (TreeContext.dependencies && hasFluidValue(source)) {\n      TreeContext.dependencies.add(source);\n    }\n\n    const payload = getPayload(source);\n\n    if (payload) {\n      each(payload, node => this.add(node));\n    }\n  }\n\n}\n\nclass AnimatedArray extends AnimatedObject {\n  constructor(source) {\n    super(source);\n  }\n\n  static create(source) {\n    return new AnimatedArray(source);\n  }\n\n  getValue() {\n    return this.source.map(node => node.getValue());\n  }\n\n  setValue(source) {\n    const payload = this.getPayload();\n\n    if (source.length == payload.length) {\n      return payload.map((node, i) => node.setValue(source[i])).some(Boolean);\n    }\n\n    super.setValue(source.map(makeAnimated));\n    return true;\n  }\n\n}\n\nfunction makeAnimated(value) {\n  const nodeType = isAnimatedString(value) ? AnimatedString : AnimatedValue;\n  return nodeType.create(value);\n}\n\nfunction getAnimatedType(value) {\n  const parentNode = getAnimated(value);\n  return parentNode ? parentNode.constructor : is.arr(value) ? AnimatedArray : isAnimatedString(value) ? AnimatedString : AnimatedValue;\n}\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nconst withAnimated = (Component, host) => {\n  const hasInstance = !is.fun(Component) || Component.prototype && Component.prototype.isReactComponent;\n  return forwardRef((givenProps, givenRef) => {\n    const instanceRef = useRef(null);\n    const ref = hasInstance && useCallback(value => {\n      instanceRef.current = updateRef(givenRef, value);\n    }, [givenRef]);\n    const [props, deps] = getAnimatedState(givenProps, host);\n    const forceUpdate = useForceUpdate();\n\n    const callback = () => {\n      const instance = instanceRef.current;\n\n      if (hasInstance && !instance) {\n        return;\n      }\n\n      const didUpdate = instance ? host.applyAnimatedValues(instance, props.getValue(true)) : false;\n\n      if (didUpdate === false) {\n        forceUpdate();\n      }\n    };\n\n    const observer = new PropsObserver(callback, deps);\n    const observerRef = useRef();\n    useLayoutEffect(() => {\n      const lastObserver = observerRef.current;\n      observerRef.current = observer;\n      each(deps, dep => addFluidObserver(dep, observer));\n\n      if (lastObserver) {\n        each(lastObserver.deps, dep => removeFluidObserver(dep, lastObserver));\n        raf.cancel(lastObserver.update);\n      }\n    });\n    useEffect(callback, []);\n    useOnce(() => () => {\n      const observer = observerRef.current;\n      each(observer.deps, dep => removeFluidObserver(dep, observer));\n    });\n    const usedProps = host.getComponentProps(props.getValue());\n    return React.createElement(Component, _extends({}, usedProps, {\n      ref: ref\n    }));\n  });\n};\n\nclass PropsObserver {\n  constructor(update, deps) {\n    this.update = update;\n    this.deps = deps;\n  }\n\n  eventObserved(event) {\n    if (event.type == 'change') {\n      raf.write(this.update);\n    }\n  }\n\n}\n\nfunction getAnimatedState(props, host) {\n  const dependencies = new Set();\n  TreeContext.dependencies = dependencies;\n  if (props.style) props = _extends({}, props, {\n    style: host.createAnimatedStyle(props.style)\n  });\n  props = new AnimatedObject(props);\n  TreeContext.dependencies = null;\n  return [props, dependencies];\n}\n\nfunction updateRef(ref, value) {\n  if (ref) {\n    if (is.fun(ref)) ref(value);else ref.current = value;\n  }\n\n  return value;\n}\n\nconst cacheKey = Symbol.for('AnimatedComponent');\nconst createHost = (components, {\n  applyAnimatedValues: _applyAnimatedValues = () => false,\n  createAnimatedStyle: _createAnimatedStyle = style => new AnimatedObject(style),\n  getComponentProps: _getComponentProps = props => props\n} = {}) => {\n  const hostConfig = {\n    applyAnimatedValues: _applyAnimatedValues,\n    createAnimatedStyle: _createAnimatedStyle,\n    getComponentProps: _getComponentProps\n  };\n\n  const animated = Component => {\n    const displayName = getDisplayName(Component) || 'Anonymous';\n\n    if (is.str(Component)) {\n      Component = animated[Component] || (animated[Component] = withAnimated(Component, hostConfig));\n    } else {\n      Component = Component[cacheKey] || (Component[cacheKey] = withAnimated(Component, hostConfig));\n    }\n\n    Component.displayName = `Animated(${displayName})`;\n    return Component;\n  };\n\n  eachProp(components, (Component, key) => {\n    if (is.arr(components)) {\n      key = getDisplayName(Component);\n    }\n\n    animated[key] = animated(Component);\n  });\n  return {\n    animated\n  };\n};\n\nconst getDisplayName = arg => is.str(arg) ? arg : arg && is.str(arg.displayName) ? arg.displayName : is.fun(arg) && arg.name || null;\n\nexport { Animated, AnimatedArray, AnimatedObject, AnimatedString, AnimatedValue, createHost, getAnimated, getAnimatedType, getPayload, isAnimated, setAnimated };\n", "import { Globals } from '@react-spring/core';\nexport * from '@react-spring/core';\nimport { unstable_batchedUpdates } from 'react-dom';\nimport { eachProp, is, toArray, FluidValue, each, getFluidValue, hasFluidValue, addFluidObserver, removeFluidObserver, callFluidObservers, createStringInterpolator, colors } from '@react-spring/shared';\nimport { AnimatedObject, createHost } from '@react-spring/animated';\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nconst _excluded$2 = [\"style\", \"children\", \"scrollTop\", \"scrollLeft\"];\nconst isCustomPropRE = /^--/;\n\nfunction dangerousStyleValue(name, value) {\n  if (value == null || typeof value === 'boolean' || value === '') return '';\n  if (typeof value === 'number' && value !== 0 && !isCustomPropRE.test(name) && !(isUnitlessNumber.hasOwnProperty(name) && isUnitlessNumber[name])) return value + 'px';\n  return ('' + value).trim();\n}\n\nconst attributeCache = {};\nfunction applyAnimatedValues(instance, props) {\n  if (!instance.nodeType || !instance.setAttribute) {\n    return false;\n  }\n\n  const isFilterElement = instance.nodeName === 'filter' || instance.parentNode && instance.parentNode.nodeName === 'filter';\n\n  const _ref = props,\n        {\n    style,\n    children,\n    scrollTop,\n    scrollLeft\n  } = _ref,\n        attributes = _objectWithoutPropertiesLoose(_ref, _excluded$2);\n\n  const values = Object.values(attributes);\n  const names = Object.keys(attributes).map(name => isFilterElement || instance.hasAttribute(name) ? name : attributeCache[name] || (attributeCache[name] = name.replace(/([A-Z])/g, n => '-' + n.toLowerCase())));\n\n  if (children !== void 0) {\n    instance.textContent = children;\n  }\n\n  for (let name in style) {\n    if (style.hasOwnProperty(name)) {\n      const value = dangerousStyleValue(name, style[name]);\n\n      if (isCustomPropRE.test(name)) {\n        instance.style.setProperty(name, value);\n      } else {\n        instance.style[name] = value;\n      }\n    }\n  }\n\n  names.forEach((name, i) => {\n    instance.setAttribute(name, values[i]);\n  });\n\n  if (scrollTop !== void 0) {\n    instance.scrollTop = scrollTop;\n  }\n\n  if (scrollLeft !== void 0) {\n    instance.scrollLeft = scrollLeft;\n  }\n}\nlet isUnitlessNumber = {\n  animationIterationCount: true,\n  borderImageOutset: true,\n  borderImageSlice: true,\n  borderImageWidth: true,\n  boxFlex: true,\n  boxFlexGroup: true,\n  boxOrdinalGroup: true,\n  columnCount: true,\n  columns: true,\n  flex: true,\n  flexGrow: true,\n  flexPositive: true,\n  flexShrink: true,\n  flexNegative: true,\n  flexOrder: true,\n  gridRow: true,\n  gridRowEnd: true,\n  gridRowSpan: true,\n  gridRowStart: true,\n  gridColumn: true,\n  gridColumnEnd: true,\n  gridColumnSpan: true,\n  gridColumnStart: true,\n  fontWeight: true,\n  lineClamp: true,\n  lineHeight: true,\n  opacity: true,\n  order: true,\n  orphans: true,\n  tabSize: true,\n  widows: true,\n  zIndex: true,\n  zoom: true,\n  fillOpacity: true,\n  floodOpacity: true,\n  stopOpacity: true,\n  strokeDasharray: true,\n  strokeDashoffset: true,\n  strokeMiterlimit: true,\n  strokeOpacity: true,\n  strokeWidth: true\n};\n\nconst prefixKey = (prefix, key) => prefix + key.charAt(0).toUpperCase() + key.substring(1);\n\nconst prefixes = ['Webkit', 'Ms', 'Moz', 'O'];\nisUnitlessNumber = Object.keys(isUnitlessNumber).reduce((acc, prop) => {\n  prefixes.forEach(prefix => acc[prefixKey(prefix, prop)] = acc[prop]);\n  return acc;\n}, isUnitlessNumber);\n\nconst _excluded$1 = [\"x\", \"y\", \"z\"];\nconst domTransforms = /^(matrix|translate|scale|rotate|skew)/;\nconst pxTransforms = /^(translate)/;\nconst degTransforms = /^(rotate|skew)/;\n\nconst addUnit = (value, unit) => is.num(value) && value !== 0 ? value + unit : value;\n\nconst isValueIdentity = (value, id) => is.arr(value) ? value.every(v => isValueIdentity(v, id)) : is.num(value) ? value === id : parseFloat(value) === id;\n\nclass AnimatedStyle extends AnimatedObject {\n  constructor(_ref) {\n    let {\n      x,\n      y,\n      z\n    } = _ref,\n        style = _objectWithoutPropertiesLoose(_ref, _excluded$1);\n\n    const inputs = [];\n    const transforms = [];\n\n    if (x || y || z) {\n      inputs.push([x || 0, y || 0, z || 0]);\n      transforms.push(xyz => [`translate3d(${xyz.map(v => addUnit(v, 'px')).join(',')})`, isValueIdentity(xyz, 0)]);\n    }\n\n    eachProp(style, (value, key) => {\n      if (key === 'transform') {\n        inputs.push([value || '']);\n        transforms.push(transform => [transform, transform === '']);\n      } else if (domTransforms.test(key)) {\n        delete style[key];\n        if (is.und(value)) return;\n        const unit = pxTransforms.test(key) ? 'px' : degTransforms.test(key) ? 'deg' : '';\n        inputs.push(toArray(value));\n        transforms.push(key === 'rotate3d' ? ([x, y, z, deg]) => [`rotate3d(${x},${y},${z},${addUnit(deg, unit)})`, isValueIdentity(deg, 0)] : input => [`${key}(${input.map(v => addUnit(v, unit)).join(',')})`, isValueIdentity(input, key.startsWith('scale') ? 1 : 0)]);\n      }\n    });\n\n    if (inputs.length) {\n      style.transform = new FluidTransform(inputs, transforms);\n    }\n\n    super(style);\n  }\n\n}\n\nclass FluidTransform extends FluidValue {\n  constructor(inputs, transforms) {\n    super();\n    this._value = null;\n    this.inputs = inputs;\n    this.transforms = transforms;\n  }\n\n  get() {\n    return this._value || (this._value = this._get());\n  }\n\n  _get() {\n    let transform = '';\n    let identity = true;\n    each(this.inputs, (input, i) => {\n      const arg1 = getFluidValue(input[0]);\n      const [t, id] = this.transforms[i](is.arr(arg1) ? arg1 : input.map(getFluidValue));\n      transform += ' ' + t;\n      identity = identity && id;\n    });\n    return identity ? 'none' : transform;\n  }\n\n  observerAdded(count) {\n    if (count == 1) each(this.inputs, input => each(input, value => hasFluidValue(value) && addFluidObserver(value, this)));\n  }\n\n  observerRemoved(count) {\n    if (count == 0) each(this.inputs, input => each(input, value => hasFluidValue(value) && removeFluidObserver(value, this)));\n  }\n\n  eventObserved(event) {\n    if (event.type == 'change') {\n      this._value = null;\n    }\n\n    callFluidObservers(this, event);\n  }\n\n}\n\nconst primitives = ['a', 'abbr', 'address', 'area', 'article', 'aside', 'audio', 'b', 'base', 'bdi', 'bdo', 'big', 'blockquote', 'body', 'br', 'button', 'canvas', 'caption', 'cite', 'code', 'col', 'colgroup', 'data', 'datalist', 'dd', 'del', 'details', 'dfn', 'dialog', 'div', 'dl', 'dt', 'em', 'embed', 'fieldset', 'figcaption', 'figure', 'footer', 'form', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'head', 'header', 'hgroup', 'hr', 'html', 'i', 'iframe', 'img', 'input', 'ins', 'kbd', 'keygen', 'label', 'legend', 'li', 'link', 'main', 'map', 'mark', 'menu', 'menuitem', 'meta', 'meter', 'nav', 'noscript', 'object', 'ol', 'optgroup', 'option', 'output', 'p', 'param', 'picture', 'pre', 'progress', 'q', 'rp', 'rt', 'ruby', 's', 'samp', 'script', 'section', 'select', 'small', 'source', 'span', 'strong', 'style', 'sub', 'summary', 'sup', 'table', 'tbody', 'td', 'textarea', 'tfoot', 'th', 'thead', 'time', 'title', 'tr', 'track', 'u', 'ul', 'var', 'video', 'wbr', 'circle', 'clipPath', 'defs', 'ellipse', 'foreignObject', 'g', 'image', 'line', 'linearGradient', 'mask', 'path', 'pattern', 'polygon', 'polyline', 'radialGradient', 'rect', 'stop', 'svg', 'text', 'tspan'];\n\nconst _excluded = [\"scrollTop\", \"scrollLeft\"];\nGlobals.assign({\n  batchedUpdates: unstable_batchedUpdates,\n  createStringInterpolator,\n  colors\n});\nconst host = createHost(primitives, {\n  applyAnimatedValues,\n  createAnimatedStyle: style => new AnimatedStyle(style),\n  getComponentProps: _ref => {\n    let props = _objectWithoutPropertiesLoose(_ref, _excluded);\n\n    return props;\n  }\n});\nconst animated = host.animated;\n\nexport { animated as a, animated };\n", "var t0 = new Date,\n    t1 = new Date;\n\nexport default function newInterval(floori, offseti, count, field) {\n\n  function interval(date) {\n    return floori(date = arguments.length === 0 ? new Date : new Date(+date)), date;\n  }\n\n  interval.floor = function(date) {\n    return floori(date = new Date(+date)), date;\n  };\n\n  interval.ceil = function(date) {\n    return floori(date = new Date(date - 1)), offseti(date, 1), floori(date), date;\n  };\n\n  interval.round = function(date) {\n    var d0 = interval(date),\n        d1 = interval.ceil(date);\n    return date - d0 < d1 - date ? d0 : d1;\n  };\n\n  interval.offset = function(date, step) {\n    return offseti(date = new Date(+date), step == null ? 1 : Math.floor(step)), date;\n  };\n\n  interval.range = function(start, stop, step) {\n    var range = [], previous;\n    start = interval.ceil(start);\n    step = step == null ? 1 : Math.floor(step);\n    if (!(start < stop) || !(step > 0)) return range; // also handles Invalid Date\n    do range.push(previous = new Date(+start)), offseti(start, step), floori(start);\n    while (previous < start && start < stop);\n    return range;\n  };\n\n  interval.filter = function(test) {\n    return newInterval(function(date) {\n      if (date >= date) while (floori(date), !test(date)) date.setTime(date - 1);\n    }, function(date, step) {\n      if (date >= date) {\n        if (step < 0) while (++step <= 0) {\n          while (offseti(date, -1), !test(date)) {} // eslint-disable-line no-empty\n        } else while (--step >= 0) {\n          while (offseti(date, +1), !test(date)) {} // eslint-disable-line no-empty\n        }\n      }\n    });\n  };\n\n  if (count) {\n    interval.count = function(start, end) {\n      t0.setTime(+start), t1.setTime(+end);\n      floori(t0), floori(t1);\n      return Math.floor(count(t0, t1));\n    };\n\n    interval.every = function(step) {\n      step = Math.floor(step);\n      return !isFinite(step) || !(step > 0) ? null\n          : !(step > 1) ? interval\n          : interval.filter(field\n              ? function(d) { return field(d) % step === 0; }\n              : function(d) { return interval.count(0, d) % step === 0; });\n    };\n  }\n\n  return interval;\n}\n", "import interval from \"./interval.js\";\n\nvar millisecond = interval(function() {\n  // noop\n}, function(date, step) {\n  date.setTime(+date + step);\n}, function(start, end) {\n  return end - start;\n});\n\n// An optimized implementation for this simple case.\nmillisecond.every = function(k) {\n  k = Math.floor(k);\n  if (!isFinite(k) || !(k > 0)) return null;\n  if (!(k > 1)) return millisecond;\n  return interval(function(date) {\n    date.setTime(Math.floor(date / k) * k);\n  }, function(date, step) {\n    date.setTime(+date + step * k);\n  }, function(start, end) {\n    return (end - start) / k;\n  });\n};\n\nexport default millisecond;\nexport var milliseconds = millisecond.range;\n", "export var durationSecond = 1e3;\nexport var durationMinute = 6e4;\nexport var durationHour = 36e5;\nexport var durationDay = 864e5;\nexport var durationWeek = 6048e5;\n", "import interval from \"./interval.js\";\nimport {durationSecond} from \"./duration.js\";\n\nvar second = interval(function(date) {\n  date.setTime(date - date.getMilliseconds());\n}, function(date, step) {\n  date.setTime(+date + step * durationSecond);\n}, function(start, end) {\n  return (end - start) / durationSecond;\n}, function(date) {\n  return date.getUTCSeconds();\n});\n\nexport default second;\nexport var seconds = second.range;\n", "import interval from \"./interval.js\";\nimport {durationMinute, durationSecond} from \"./duration.js\";\n\nvar minute = interval(function(date) {\n  date.setTime(date - date.getMilliseconds() - date.getSeconds() * durationSecond);\n}, function(date, step) {\n  date.setTime(+date + step * durationMinute);\n}, function(start, end) {\n  return (end - start) / durationMinute;\n}, function(date) {\n  return date.getMinutes();\n});\n\nexport default minute;\nexport var minutes = minute.range;\n", "import interval from \"./interval.js\";\nimport {durationHour, durationMinute, durationSecond} from \"./duration.js\";\n\nvar hour = interval(function(date) {\n  date.setTime(date - date.getMilliseconds() - date.getSeconds() * durationSecond - date.getMinutes() * durationMinute);\n}, function(date, step) {\n  date.setTime(+date + step * durationHour);\n}, function(start, end) {\n  return (end - start) / durationHour;\n}, function(date) {\n  return date.getHours();\n});\n\nexport default hour;\nexport var hours = hour.range;\n", "import interval from \"./interval.js\";\nimport {durationDay, durationMinute} from \"./duration.js\";\n\nvar day = interval(function(date) {\n  date.setHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setDate(date.getDate() + step);\n}, function(start, end) {\n  return (end - start - (end.getTimezoneOffset() - start.getTimezoneOffset()) * durationMinute) / durationDay;\n}, function(date) {\n  return date.getDate() - 1;\n});\n\nexport default day;\nexport var days = day.range;\n", "import interval from \"./interval.js\";\nimport {durationMinute, durationWeek} from \"./duration.js\";\n\nfunction weekday(i) {\n  return interval(function(date) {\n    date.setDate(date.getDate() - (date.getDay() + 7 - i) % 7);\n    date.setHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setDate(date.getDate() + step * 7);\n  }, function(start, end) {\n    return (end - start - (end.getTimezoneOffset() - start.getTimezoneOffset()) * durationMinute) / durationWeek;\n  });\n}\n\nexport var sunday = weekday(0);\nexport var monday = weekday(1);\nexport var tuesday = weekday(2);\nexport var wednesday = weekday(3);\nexport var thursday = weekday(4);\nexport var friday = weekday(5);\nexport var saturday = weekday(6);\n\nexport var sundays = sunday.range;\nexport var mondays = monday.range;\nexport var tuesdays = tuesday.range;\nexport var wednesdays = wednesday.range;\nexport var thursdays = thursday.range;\nexport var fridays = friday.range;\nexport var saturdays = saturday.range;\n", "import interval from \"./interval.js\";\n\nvar month = interval(function(date) {\n  date.setDate(1);\n  date.setHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setMonth(date.getMonth() + step);\n}, function(start, end) {\n  return end.getMonth() - start.getMonth() + (end.getFullYear() - start.getFullYear()) * 12;\n}, function(date) {\n  return date.getMonth();\n});\n\nexport default month;\nexport var months = month.range;\n", "import interval from \"./interval.js\";\n\nvar year = interval(function(date) {\n  date.setMonth(0, 1);\n  date.setHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setFullYear(date.getFullYear() + step);\n}, function(start, end) {\n  return end.getFullYear() - start.getFullYear();\n}, function(date) {\n  return date.getFullYear();\n});\n\n// An optimized implementation for this simple case.\nyear.every = function(k) {\n  return !isFinite(k = Math.floor(k)) || !(k > 0) ? null : interval(function(date) {\n    date.setFullYear(Math.floor(date.getFullYear() / k) * k);\n    date.setMonth(0, 1);\n    date.setHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setFullYear(date.getFullYear() + step * k);\n  });\n};\n\nexport default year;\nexport var years = year.range;\n", "import interval from \"./interval.js\";\nimport {durationMinute} from \"./duration.js\";\n\nvar utcMinute = interval(function(date) {\n  date.setUTCSeconds(0, 0);\n}, function(date, step) {\n  date.setTime(+date + step * durationMinute);\n}, function(start, end) {\n  return (end - start) / durationMinute;\n}, function(date) {\n  return date.getUTCMinutes();\n});\n\nexport default utcMinute;\nexport var utcMinutes = utcMinute.range;\n", "import interval from \"./interval.js\";\nimport {durationHour} from \"./duration.js\";\n\nvar utcHour = interval(function(date) {\n  date.setUTCMinutes(0, 0, 0);\n}, function(date, step) {\n  date.setTime(+date + step * durationHour);\n}, function(start, end) {\n  return (end - start) / durationHour;\n}, function(date) {\n  return date.getUTCHours();\n});\n\nexport default utcHour;\nexport var utcHours = utcHour.range;\n", "import interval from \"./interval.js\";\nimport {durationDay} from \"./duration.js\";\n\nvar utcDay = interval(function(date) {\n  date.setUTCHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setUTCDate(date.getUTCDate() + step);\n}, function(start, end) {\n  return (end - start) / durationDay;\n}, function(date) {\n  return date.getUTCDate() - 1;\n});\n\nexport default utcDay;\nexport var utcDays = utcDay.range;\n", "import interval from \"./interval.js\";\nimport {durationWeek} from \"./duration.js\";\n\nfunction utcWeekday(i) {\n  return interval(function(date) {\n    date.setUTCDate(date.getUTCDate() - (date.getUTCDay() + 7 - i) % 7);\n    date.setUTCHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setUTCDate(date.getUTCDate() + step * 7);\n  }, function(start, end) {\n    return (end - start) / durationWeek;\n  });\n}\n\nexport var utcSunday = utcWeekday(0);\nexport var utcMonday = utcWeekday(1);\nexport var utcTuesday = utcWeekday(2);\nexport var utcWednesday = utcWeekday(3);\nexport var utcThursday = utcWeekday(4);\nexport var utcFriday = utcWeekday(5);\nexport var utcSaturday = utcWeekday(6);\n\nexport var utcSundays = utcSunday.range;\nexport var utcMondays = utcMonday.range;\nexport var utcTuesdays = utcTuesday.range;\nexport var utcWednesdays = utcWednesday.range;\nexport var utcThursdays = utcThursday.range;\nexport var utcFridays = utcFriday.range;\nexport var utcSaturdays = utcSaturday.range;\n", "import interval from \"./interval.js\";\n\nvar utcMonth = interval(function(date) {\n  date.setUTCDate(1);\n  date.setUTCHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setUTCMonth(date.getUTCMonth() + step);\n}, function(start, end) {\n  return end.getUTCMonth() - start.getUTCMonth() + (end.getUTCFullYear() - start.getUTCFullYear()) * 12;\n}, function(date) {\n  return date.getUTCMonth();\n});\n\nexport default utcMonth;\nexport var utcMonths = utcMonth.range;\n", "import interval from \"./interval.js\";\n\nvar utcYear = interval(function(date) {\n  date.setUTCMonth(0, 1);\n  date.setUTCHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setUTCFullYear(date.getUTCFullYear() + step);\n}, function(start, end) {\n  return end.getUTCFullYear() - start.getUTCFullYear();\n}, function(date) {\n  return date.getUTCFullYear();\n});\n\n// An optimized implementation for this simple case.\nutcYear.every = function(k) {\n  return !isFinite(k = Math.floor(k)) || !(k > 0) ? null : interval(function(date) {\n    date.setUTCFullYear(Math.floor(date.getUTCFullYear() / k) * k);\n    date.setUTCMonth(0, 1);\n    date.setUTCHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setUTCFullYear(date.getUTCFullYear() + step * k);\n  });\n};\n\nexport default utcYear;\nexport var utcYears = utcYear.range;\n", "import { timeParse, utcParse } from 'd3-time-format'\n\nexport const timePrecisions = [\n    'millisecond',\n    'second',\n    'minute',\n    'hour',\n    'day',\n    'month',\n    'year',\n] as const\n\nexport type TIME_PRECISION = typeof timePrecisions[number]\n\nexport const precisionCutOffs: ((date: Date) => void)[] = [\n    date => date.setMilliseconds(0),\n    date => date.setSeconds(0),\n    date => date.setMinutes(0),\n    date => date.setHours(0),\n    date => date.setDate(1),\n    date => date.setMonth(0),\n]\n\nexport const precisionCutOffsByType: Record<TIME_PRECISION, ((date: Date) => void)[]> = {\n    millisecond: [],\n    second: precisionCutOffs.slice(0, 1),\n    minute: precisionCutOffs.slice(0, 2),\n    hour: precisionCutOffs.slice(0, 3),\n    day: precisionCutOffs.slice(0, 4),\n    month: precisionCutOffs.slice(0, 5),\n    year: precisionCutOffs.slice(0, 6),\n}\n\nexport const createPrecisionMethod = (precision: TIME_PRECISION) => (date: Date) => {\n    precisionCutOffsByType[precision].forEach(cutOff => {\n        cutOff(date)\n    })\n\n    return date\n}\n\nexport const createDateNormalizer = ({\n    format = 'native',\n    precision = 'millisecond',\n    useUTC = true,\n}: {\n    format?: 'native' | string\n    precision?: TIME_PRECISION\n    useUTC?: boolean\n}) => {\n    const precisionFn = createPrecisionMethod(precision)\n\n    return (value: Date | string | undefined) => {\n        if (value === undefined) {\n            return value\n        }\n\n        if (format === 'native' || value instanceof Date) {\n            return precisionFn(value as Date)\n        }\n\n        const parseTime = useUTC ? utcParse(format) : timeParse(format)\n        return precisionFn(parseTime(value as string) as Date)\n    }\n}\n", "import { NumberValue, scaleLinear, ScaleLinear as D3ScaleLinear } from 'd3-scale'\nimport { ScaleLinearSpec, ScaleLinear, ComputedSerieAxis, ScaleAxis } from './types'\n\nexport const createLinearScale = <Output extends NumberValue>(\n    {\n        min = 0,\n        max = 'auto',\n        stacked = false,\n        reverse = false,\n        clamp = false,\n        nice = false,\n    }: ScaleLinearSpec,\n    data: ComputedSerieAxis<Output>,\n    size: number,\n    axis: ScaleAxis\n) => {\n    let minValue: NumberValue\n    if (min === 'auto') {\n        minValue = stacked === true ? data.minStacked ?? 0 : data.min\n    } else {\n        minValue = min\n    }\n\n    let maxValue: NumberValue\n    if (max === 'auto') {\n        maxValue = stacked === true ? data.maxStacked ?? 0 : data.max\n    } else {\n        maxValue = max\n    }\n\n    const scale = scaleLinear<number, Output>()\n        .rangeRound(axis === 'x' ? [0, size] : [size, 0])\n        .domain(reverse ? [maxValue, minValue] : [minValue, maxValue])\n        .clamp(clamp)\n\n    if (nice === true) scale.nice()\n    else if (typeof nice === 'number') scale.nice(nice)\n\n    return castLinearScale<number, Output>(scale, stacked)\n}\n\nexport const castLinearScale = <Range, Output>(\n    scale: D3ScaleLinear<Range, Output>,\n    stacked = false\n) => {\n    const typedScale = scale as unknown as ScaleLinear<number>\n    typedScale.type = 'linear'\n    typedScale.stacked = stacked\n\n    return typedScale\n}\n", "import { scalePoint, ScalePoint as D3ScalePoint } from 'd3-scale'\nimport { ComputedSerieAxis, ScalePoint, ScalePointSpec, StringValue } from './types'\n\nexport const createPointScale = <Input extends StringValue>(\n    _spec: ScalePointSpec,\n    data: ComputedSerieAxis<Input>,\n    size: number\n) => {\n    const scale = scalePoint<Input>().range([0, size]).domain(data.all)\n\n    const typedScale = scale as ScalePoint<Input>\n    typedScale.type = 'point'\n\n    return typedScale\n}\n\nexport const castPointScale = <Input extends StringValue>(scale: D3ScalePoint<Input>) => {\n    const typedScale = scale as ScalePoint<Input>\n    typedScale.type = 'point'\n\n    return typedScale\n}\n", "import { scaleBand, ScaleBand as D3ScaleBand } from 'd3-scale'\nimport { ComputedSerieAxis, ScaleBand, ScaleBandSpec, StringValue, ScaleAxis } from './types'\n\nexport const createBandScale = <Input extends StringValue>(\n    { round = true }: ScaleBandSpec,\n    data: ComputedSerieAxis<Input>,\n    size: number,\n    axis: ScaleAxis\n) => {\n    const scale = scaleBand<Input>()\n        .range(axis === 'x' ? [0, size] : [size, 0])\n        .domain(data.all)\n        .round(round)\n\n    return castBandScale<Input>(scale)\n}\n\nexport const castBandScale = <Input>(scale: D3ScaleBand<Input>) => {\n    const typedScale = scale as ScaleBand<Input>\n    typedScale.type = 'band'\n\n    return typedScale\n}\n", "import { NumberValue, scaleTime, scaleUtc } from 'd3-scale'\nimport { createDateNormalizer } from './timeHelpers'\nimport { ComputedSerieAxis, ScaleTime, ScaleTimeSpec } from './types'\n\nexport const createTimeScale = <Input extends Date | NumberValue>(\n    {\n        format = 'native',\n        precision = 'millisecond',\n        min = 'auto',\n        max = 'auto',\n        useUTC = true,\n        nice = false,\n    }: ScaleTimeSpec,\n    data: ComputedSerieAxis<string | Date>,\n    size: number\n) => {\n    const normalize = createDateNormalizer({ format, precision, useUTC })\n\n    let minValue: Date | undefined\n    if (min === 'auto') {\n        minValue = normalize(data.min)\n    } else if (format !== 'native') {\n        minValue = normalize(min)\n    } else {\n        minValue = min as Date\n    }\n\n    let maxValue: Date | undefined\n    if (max === 'auto') {\n        maxValue = normalize(data.max)\n    } else if (format !== 'native') {\n        maxValue = normalize(max)\n    } else {\n        maxValue = max as Date\n    }\n\n    const scale = useUTC ? scaleUtc() : scaleTime()\n\n    scale.range([0, size])\n\n    if (minValue && maxValue) scale.domain([minValue, maxValue])\n\n    if (nice === true) scale.nice()\n    else if (typeof nice === 'object' || typeof nice === 'number') scale.nice(nice)\n\n    const typedScale = scale as unknown as ScaleTime<Input>\n\n    typedScale.type = 'time'\n    typedScale.useUTC = useUTC\n\n    return typedScale\n}\n", "import { scaleLog } from 'd3-scale'\nimport { ComputedSerieAxis, ScaleAxis, ScaleLog, ScaleLogSpec } from './types'\n\nexport const createLogScale = (\n    { base = 10, min = 'auto', max = 'auto' }: ScaleLogSpec,\n    data: ComputedSerieAxis<number>,\n    size: number,\n    axis: ScaleAxis\n) => {\n    const hasZero = data.all.some(v => v === 0)\n    if (hasZero) {\n        throw new Error(`a log scale domain must not include or cross zero`)\n    }\n\n    let sign: number\n    let hasMixedSign = false\n    data.all\n        .filter(v => v != null)\n        .forEach(v => {\n            if (hasMixedSign) return\n            if (sign === undefined) {\n                sign = Math.sign(v)\n            } else if (Math.sign(v) !== sign) {\n                hasMixedSign = true\n            }\n        })\n\n    if (hasMixedSign) {\n        throw new Error(`a log scale domain must be strictly-positive or strictly-negative`)\n    }\n\n    let minValue: number\n    if (min === 'auto') {\n        minValue = data.min\n    } else {\n        minValue = min\n    }\n\n    let maxValue: number\n    if (max === 'auto') {\n        maxValue = data.max\n    } else {\n        maxValue = max\n    }\n\n    const scale = scaleLog<number, number>()\n        .domain([minValue, maxValue])\n        .rangeRound(axis === 'x' ? [0, size] : [size, 0])\n        .base(base)\n        .nice()\n\n    const typedScale = scale as ScaleLog\n    typedScale.type = 'log'\n\n    return scale\n}\n", "import { scaleSymlog } from 'd3-scale'\nimport { ComputedSerieAxis, ScaleAxis, ScaleSymlog, ScaleSymlogSpec } from './types'\n\nexport const createSymlogScale = (\n    { constant = 1, min = 'auto', max = 'auto', reverse = false }: ScaleSymlogSpec,\n    data: ComputedSerieAxis<number>,\n    size: number,\n    axis: ScaleAxis\n) => {\n    let minValue: number\n    if (min === 'auto') {\n        minValue = data.min\n    } else {\n        minValue = min\n    }\n\n    let maxValue: number\n    if (max === 'auto') {\n        maxValue = data.max\n    } else {\n        maxValue = max\n    }\n\n    const scale = scaleSymlog<number, number>()\n        .constant(constant)\n        .rangeRound(axis === 'x' ? [0, size] : [size, 0])\n        .nice()\n\n    if (reverse === true) scale.domain([maxValue, minValue])\n    else scale.domain([minValue, maxValue])\n\n    const typedScale = scale as ScaleSymlog\n    typedScale.type = 'symlog'\n\n    return typedScale\n}\n", "import uniq from 'lodash/uniq'\nimport uniqBy from 'lodash/uniqBy'\nimport sortBy from 'lodash/sortBy'\nimport last from 'lodash/last'\nimport isDate from 'lodash/isDate'\nimport { createDateNormalizer } from './timeHelpers'\nimport { ScaleAxis, ScaleSpec, ScaleValue, SerieAxis, ComputedSerieAxis } from './types'\nimport { createLinearScale } from './linearScale'\nimport { createPointScale } from './pointScale'\nimport { createBandScale } from './bandScale'\nimport { createTimeScale } from './timeScale'\nimport { createLogScale } from './logScale'\nimport { createSymlogScale } from './symlogScale'\n\ntype XY = ReturnType<typeof generateSeriesXY>\n\ntype StackedXY = {\n    [K in keyof XY]: XY[K] & {\n        maxStacked: number\n        minStacked: number\n    }\n}\n\ninterface SerieDatum {\n    x: number | string | Date\n    // only numbers can be stacked\n    xStacked?: number | null\n    y: number | string | Date\n    // only numbers can be stacked\n    yStacked?: number | null\n}\n\ntype Serie<S = never, D extends SerieDatum = SerieDatum> = S & {\n    data: D[]\n}\n\ntype NestedSerie<S = never, D extends SerieDatum = SerieDatum> = S & {\n    data: {\n        data: D\n    }[]\n}\n\nexport type ComputedSerie<S = never, D extends SerieDatum = SerieDatum> = S & {\n    data: {\n        data: D\n        position: {\n            x: number | null\n            y: number | null\n        }\n    }[]\n}\n\ntype Compare = <T>(a: T, b: T) => boolean\n\nexport const getOtherAxis = (axis: ScaleAxis): ScaleAxis => (axis === 'x' ? 'y' : 'x')\n\nexport const compareValues = (a: string | number, b: string | number) => a === b\nexport const compareDateValues = (a: Date, b: Date) => a.getTime() === b.getTime()\n\nexport function computeScale<Input extends ScaleValue>(\n    spec: ScaleSpec,\n    data: ComputedSerieAxis<any>,\n    size: number,\n    axis: ScaleAxis\n) {\n    switch (spec.type) {\n        case 'linear':\n            return createLinearScale(spec, data, size, axis)\n        case 'point':\n            return createPointScale<Input>(spec, data, size)\n        case 'band':\n            return createBandScale<Input>(spec, data, size, axis)\n        case 'time':\n            return createTimeScale(spec, data, size)\n        case 'log':\n            return createLogScale(spec, data, size, axis)\n        case 'symlog':\n            return createSymlogScale(spec, data, size, axis)\n        default:\n            throw new Error('invalid scale spec')\n    }\n}\n\n/**\n * Convert serie data to have the original data stored in a nested prop.\n *\n * We do this in order to avoid conflicts between raw & computed properties.\n * <- { data: { x: 1, y: 3 }[] }\n * -> { data: { data: { x: 1, y: 3 } }[] }\n */\nconst nestSerieData = <S = never, D extends SerieDatum = SerieDatum>(\n    serie: Serie<S, D>\n): NestedSerie<S, D> => ({\n    ...serie,\n    data: serie.data.map(d => ({ data: { ...d } })),\n})\n\nconst getDatumAxisPosition = <D extends SerieDatum = SerieDatum>(\n    datum: { data: D },\n    axis: ScaleAxis,\n    scale: any\n): number | null => {\n    if ('stacked' in scale && scale.stacked) {\n        const stackedValue = datum.data[axis === 'x' ? 'xStacked' : 'yStacked']\n        if (stackedValue === null || stackedValue === undefined) {\n            return null\n        }\n\n        return scale(stackedValue)\n    }\n\n    return scale(datum.data[axis]) ?? null\n}\n\n/**\n * Compute x/y d3 scales from an array of data series, and scale specifications.\n *\n * We use generics as it's not uncommon to have extra properties such as an id\n * added to the series, or extra props on data, in such case, you should override\n * the default types.\n */\nexport const computeXYScalesForSeries = <S = never, D extends SerieDatum = SerieDatum>(\n    series: Serie<S, D>[],\n    xScaleSpec: ScaleSpec,\n    yScaleSpec: ScaleSpec,\n    width: number,\n    height: number\n) => {\n    // first nest series to avoid property conflicts\n    const nestedSeries = series.map(serie => nestSerieData<S, D>(serie))\n\n    // then compute data for each axis: all, min, max values\n    const xy = generateSeriesXY<S, D>(nestedSeries, xScaleSpec, yScaleSpec)\n\n    // stack x values depending on xScale\n    if ('stacked' in xScaleSpec && xScaleSpec.stacked === true) {\n        stackX<S, D>(xy as StackedXY, nestedSeries)\n    }\n\n    // stack y values depending on yScale\n    if ('stacked' in yScaleSpec && yScaleSpec.stacked === true) {\n        stackY<S, D>(xy as StackedXY, nestedSeries)\n    }\n\n    // computes scales\n    const xScale = computeScale<D['x']>(xScaleSpec, xy.x, width, 'x')\n    const yScale = computeScale<D['y']>(yScaleSpec, xy.y, height, 'y')\n\n    // assign position to each datum in every scale\n    const computedSeries: ComputedSerie<S, D>[] = nestedSeries.map(serie => ({\n        ...serie,\n        data: serie.data.map(datum => ({\n            ...datum,\n            position: {\n                x: getDatumAxisPosition(datum, 'x', xScale),\n                y: getDatumAxisPosition(datum, 'y', yScale),\n            },\n        })),\n    }))\n\n    return {\n        ...xy,\n        series: computedSeries,\n        xScale,\n        yScale,\n    }\n}\n\nexport const generateSeriesXY = <S = never, D extends SerieDatum = SerieDatum>(\n    series: NestedSerie<S, D>[],\n    xScaleSpec: ScaleSpec,\n    yScaleSpec: ScaleSpec\n) => ({\n    x: generateSeriesAxis<'x', D['x']>(series, 'x', xScaleSpec),\n    y: generateSeriesAxis<'y', D['y']>(series, 'y', yScaleSpec),\n})\n\n/**\n * Normalize data according to scale type, (time => Date, linear => Number)\n * compute sorted unique values and min/max.\n */\nexport const generateSeriesAxis = <Axis extends ScaleAxis, Value extends ScaleValue>(\n    series: SerieAxis<Axis, Value>,\n    axis: Axis,\n    scaleSpec: ScaleSpec,\n    {\n        getValue = d => d.data[axis],\n        setValue = (d, v) => {\n            d.data[axis] = v\n        },\n    }: {\n        getValue?: (d: { data: Record<Axis, Value | null> }) => Value | null\n        setValue?: (d: { data: Record<Axis, Value | null> }, v: Value) => void\n    } = {}\n) => {\n    if (scaleSpec.type === 'linear') {\n        series.forEach(serie => {\n            serie.data.forEach(d => {\n                const value = getValue(d)\n\n                if (value) {\n                    setValue(d, parseFloat(String(value)) as unknown as Value)\n                }\n            })\n        })\n    } else if (scaleSpec.type === 'time' && scaleSpec.format !== 'native') {\n        // `native` means we already have Date instances,\n        // otherwise we have to convert the values to Date.\n        const parseTime = createDateNormalizer(scaleSpec)\n\n        series.forEach(serie => {\n            serie.data.forEach(d => {\n                const value = getValue(d)\n\n                if (value) {\n                    setValue(d, parseTime(value as Date) as unknown as Value)\n                }\n            })\n        })\n    }\n\n    const values: unknown[] = []\n\n    series.forEach(serie => {\n        serie.data.forEach(d => {\n            values.push(getValue(d))\n        })\n    })\n\n    switch (scaleSpec.type) {\n        case 'linear': {\n            const all = sortBy(\n                // filer null values to deal with holes in linechart\n                uniq(values as number[]).filter(v => v !== null),\n                v => v\n            )\n\n            return { all, min: Math.min(...all), max: Math.max(...all) }\n        }\n        case 'time': {\n            const all = uniqBy(values as Date[], v => v.getTime())\n                .slice(0)\n                .sort((a, b) => b.getTime() - a.getTime())\n                .reverse()\n\n            return { all, min: all[0], max: last(all) }\n        }\n        default: {\n            const all = uniq(values)\n\n            return { all, min: all[0], max: last(all) }\n        }\n    }\n}\n\nexport const stackAxis = <S = never, D extends SerieDatum = SerieDatum>(\n    axis: ScaleAxis,\n    xy: StackedXY,\n    series: NestedSerie<S, D>[]\n) => {\n    const otherAxis = getOtherAxis(axis)\n    const all: number[] = []\n\n    xy[otherAxis].all.forEach(v => {\n        const compare = (isDate(v) ? compareDateValues : compareValues) as Compare\n        const stack: Array<number | null> = []\n\n        series.forEach(serie => {\n            const datum = serie.data.find(d => compare(d.data[otherAxis], v))\n            let value = null\n            let stackValue = null\n\n            if (datum !== undefined) {\n                // stacked values only support numbers\n                value = datum.data[axis] as number\n                if (value !== null) {\n                    const head = last(stack)\n                    if (head === undefined) {\n                        stackValue = value\n                    } else if (head !== null) {\n                        stackValue = head + value\n                    }\n                }\n\n                datum.data[axis === 'x' ? 'xStacked' : 'yStacked'] = stackValue\n            }\n\n            stack.push(stackValue)\n\n            if (stackValue !== null) {\n                all.push(stackValue)\n            }\n        })\n    })\n\n    xy[axis].minStacked = Math.min(...all)\n    xy[axis].maxStacked = Math.max(...all)\n}\n\nconst stackX = <S = never, D extends SerieDatum = SerieDatum>(\n    xy: StackedXY,\n    series: NestedSerie<S, D>[]\n) => stackAxis<S, D>('x', xy, series)\n\nconst stackY = <S = never, D extends SerieDatum = SerieDatum>(\n    xy: StackedXY,\n    series: NestedSerie<S, D>[]\n) => stackAxis<S, D>('y', xy, series)\n", "import {\n    CountableTimeInterval,\n    timeMillisecond,\n    utcMillisecond,\n    timeSecond,\n    utcSecond,\n    timeMinute,\n    utcMinute,\n    timeHour,\n    utcHour,\n    timeWeek,\n    utcWeek,\n    timeSunday,\n    utcSunday,\n    timeMonday,\n    utcMonday,\n    timeTuesday,\n    utcTuesday,\n    timeWednesday,\n    utcWednesday,\n    timeThursday,\n    utcThursday,\n    timeFriday,\n    utcFriday,\n    timeSaturday,\n    utcSaturday,\n    timeMonth,\n    utcMonth,\n    timeYear,\n    utcYear,\n    timeInterval,\n} from 'd3-time'\nimport { ScaleValue, TicksSpec, AnyScale, ScaleWithBandwidth } from './types'\n\nexport const centerScale = <Value>(scale: ScaleWithBandwidth) => {\n    const bandwidth = scale.bandwidth()\n\n    if (bandwidth === 0) return scale\n\n    let offset = bandwidth / 2\n    if (scale.round()) {\n        offset = Math.round(offset)\n    }\n\n    return <T extends Value>(d: T) => (scale(d) ?? 0) + offset\n}\n\nconst timeDay = timeInterval(\n    date => date.setHours(0, 0, 0, 0),\n    (date, step) => date.setDate(date.getDate() + step),\n    (start, end) => (end.getTime() - start.getTime()) / 864e5,\n    date => Math.floor(date.getTime() / 864e5)\n)\n\nconst utcDay = timeInterval(\n    date => date.setUTCHours(0, 0, 0, 0),\n    (date, step) => date.setUTCDate(date.getUTCDate() + step),\n    (start, end) => (end.getTime() - start.getTime()) / 864e5,\n    date => Math.floor(date.getTime() / 864e5)\n)\n\nconst timeByType: Record<string, [CountableTimeInterval, CountableTimeInterval]> = {\n    millisecond: [timeMillisecond, utcMillisecond],\n    second: [timeSecond, utcSecond],\n    minute: [timeMinute, utcMinute],\n    hour: [timeHour, utcHour],\n    day: [timeDay, utcDay],\n    week: [timeWeek, utcWeek],\n    sunday: [timeSunday, utcSunday],\n    monday: [timeMonday, utcMonday],\n    tuesday: [timeTuesday, utcTuesday],\n    wednesday: [timeWednesday, utcWednesday],\n    thursday: [timeThursday, utcThursday],\n    friday: [timeFriday, utcFriday],\n    saturday: [timeSaturday, utcSaturday],\n    month: [timeMonth, utcMonth],\n    year: [timeYear, utcYear],\n}\n\nconst timeTypes = Object.keys(timeByType)\nconst timeIntervalRegexp = new RegExp(`^every\\\\s*(\\\\d+)?\\\\s*(${timeTypes.join('|')})s?$`, 'i')\n\nconst isInteger = (value: unknown): value is number =>\n    typeof value === 'number' && isFinite(value) && Math.floor(value) === value\n\nexport const getScaleTicks = <Value extends ScaleValue>(\n    scale: AnyScale,\n    spec?: TicksSpec<Value>\n) => {\n    // specific values\n    if (Array.isArray(spec)) {\n        return spec\n    }\n\n    if (typeof spec === 'string' && 'useUTC' in scale) {\n        // time interval\n        const matches = spec.match(timeIntervalRegexp)\n\n        if (matches) {\n            const [, amount, type] = matches\n            // UTC is used as it's more predictable\n            // however local time could be used too\n            // let's see how it fits users' requirements\n            const timeType = timeByType[type][scale.useUTC ? 1 : 0]\n\n            if (type === 'day') {\n                const [start, originalStop] = scale.domain()\n                const stop = new Date(originalStop)\n\n                // Set range to include last day in the domain since `interval.range` function is exclusive stop\n                stop.setDate(stop.getDate() + 1)\n\n                return timeType.every(Number(amount ?? 1))?.range(start, stop) ?? []\n            }\n\n            if (amount === undefined) {\n                return scale.ticks(timeType)\n            }\n\n            const interval = timeType.every(Number(amount))\n\n            if (interval) {\n                return scale.ticks(interval)\n            }\n        }\n\n        throw new Error(`Invalid tickValues: ${spec}`)\n    }\n\n    // continuous scales\n    if ('ticks' in scale) {\n        // default behaviour\n        if (spec === undefined) {\n            return scale.ticks()\n        }\n\n        // specific tick count\n        if (isInteger(spec)) {\n            return scale.ticks(spec)\n        }\n    }\n\n    // non linear scale default\n    return scale.domain()\n}\n", "import { timeFormat } from 'd3-time-format'\nimport { format as d3Format } from 'd3-format'\n// @ts-ignore\nimport { textPropsByEngine } from '@nivo/core'\nimport { ScaleValue, AnyScale, TicksSpec, getScaleTicks, centerScale } from '@nivo/scales'\nimport { Point, ValueFormatter, Line } from './types'\n\nconst isArray = <T>(value: unknown): value is T[] => Array.isArray(value)\n\nexport const computeCartesianTicks = <Value extends ScaleValue>({\n    axis,\n    scale,\n    ticksPosition,\n    tickValues,\n    tickSize,\n    tickPadding,\n    tickRotation,\n    engine = 'svg',\n}: {\n    axis: 'x' | 'y'\n    scale: AnyScale\n    ticksPosition?: 'after' | 'before'\n    tickValues?: TicksSpec<Value>\n    tickSize: number\n    tickPadding: number\n    tickRotation: number\n    engine?: 'svg' | 'canvas'\n}) => {\n    const values = getScaleTicks<Value>(scale, tickValues)\n\n    const textProps = textPropsByEngine[engine]\n\n    const position = 'bandwidth' in scale ? centerScale(scale) : scale\n    const line = { lineX: 0, lineY: 0 }\n    const text = { textX: 0, textY: 0 }\n\n    const isRTL = typeof document === 'object' ? document.dir === 'rtl' : false\n    let translate: (value: Value) => Point\n    let textAlign: CanvasTextAlign = textProps.align.center\n    let textBaseline: CanvasTextBaseline = textProps.baseline.center\n\n    if (axis === 'x') {\n        translate = d => ({ x: position(d) ?? 0, y: 0 })\n\n        line.lineY = tickSize * (ticksPosition === 'after' ? 1 : -1)\n        text.textY = (tickSize + tickPadding) * (ticksPosition === 'after' ? 1 : -1)\n\n        if (ticksPosition === 'after') {\n            textBaseline = textProps.baseline.top\n        } else {\n            textBaseline = textProps.baseline.bottom\n        }\n\n        if (tickRotation === 0) {\n            textAlign = textProps.align.center\n        } else if (\n            (ticksPosition === 'after' && tickRotation < 0) ||\n            (ticksPosition === 'before' && tickRotation > 0)\n        ) {\n            textAlign = textProps.align[isRTL ? 'left' : 'right']\n            textBaseline = textProps.baseline.center\n        } else if (\n            (ticksPosition === 'after' && tickRotation > 0) ||\n            (ticksPosition === 'before' && tickRotation < 0)\n        ) {\n            textAlign = textProps.align[isRTL ? 'right' : 'left']\n            textBaseline = textProps.baseline.center\n        }\n    } else {\n        translate = d => ({ x: 0, y: position(d) ?? 0 })\n\n        line.lineX = tickSize * (ticksPosition === 'after' ? 1 : -1)\n        text.textX = (tickSize + tickPadding) * (ticksPosition === 'after' ? 1 : -1)\n\n        if (ticksPosition === 'after') {\n            textAlign = textProps.align.left\n        } else {\n            textAlign = textProps.align.right\n        }\n    }\n\n    const ticks = values.map(value => ({\n        key: typeof value === 'number' || typeof value === 'string' ? value : `${value}`,\n        value,\n        ...translate(value),\n        ...line,\n        ...text,\n    }))\n\n    return {\n        ticks,\n        textAlign,\n        textBaseline,\n    }\n}\n\nexport const getFormatter = <Value extends ScaleValue>(\n    format: string | ValueFormatter<Value> | undefined,\n    scale: AnyScale\n): ValueFormatter<Value> | undefined => {\n    if (typeof format === 'undefined' || typeof format === 'function') return format\n\n    if (scale.type === 'time') {\n        const formatter = timeFormat(format)\n\n        return ((d: any) => formatter(d instanceof Date ? d : new Date(d))) as ValueFormatter<Value>\n    }\n\n    return d3Format(format) as unknown as ValueFormatter<Value>\n}\n\nexport const computeGridLines = <Value extends ScaleValue>({\n    width,\n    height,\n    scale,\n    axis,\n    values: _values,\n}: {\n    width: number\n    height: number\n    scale: AnyScale\n    axis: 'x' | 'y'\n    values?: TicksSpec<Value>\n}) => {\n    const lineValues = isArray<number>(_values) ? _values : undefined\n    const values = lineValues || getScaleTicks<Value>(scale, _values)\n    const position = 'bandwidth' in scale ? centerScale(scale) : scale\n\n    const lines: Line[] =\n        axis === 'x'\n            ? values.map(value => ({\n                  key: `${value}`,\n                  x1: position(value) ?? 0,\n                  x2: position(value) ?? 0,\n                  y1: 0,\n                  y2: height,\n              }))\n            : values.map(value => ({\n                  key: `${value}`,\n                  x1: 0,\n                  x2: width,\n                  y1: position(value) ?? 0,\n                  y2: position(value) ?? 0,\n              }))\n\n    return lines\n}\n", "import { useMemo, memo } from 'react'\nimport * as React from 'react'\nimport { animated } from '@react-spring/web'\nimport { useTheme } from '@nivo/core'\nimport { ScaleValue } from '@nivo/scales'\nimport { AxisTickProps } from '../types'\n\nconst AxisTick = <Value extends ScaleValue>({\n    value: _value,\n    format,\n    lineX,\n    lineY,\n    onClick,\n    textBaseline,\n    textAnchor,\n    animatedProps,\n}: AxisTickProps<Value>) => {\n    const theme = useTheme()\n\n    const value = format?.(_value) ?? _value\n\n    const props = useMemo(() => {\n        const style = { opacity: animatedProps.opacity }\n\n        if (!onClick) {\n            return { style }\n        }\n\n        return {\n            style: { ...style, cursor: 'pointer' },\n            onClick: (event: React.MouseEvent<SVGGElement, MouseEvent>) => onClick(event, value),\n        }\n    }, [animatedProps.opacity, onClick, value])\n\n    return (\n        <animated.g transform={animatedProps.transform} {...props}>\n            <line x1={0} x2={lineX} y1={0} y2={lineY} style={theme.axis.ticks.line} />\n            <animated.text\n                dominantBaseline={textBaseline}\n                textAnchor={textAnchor}\n                transform={animatedProps.textTransform}\n                style={theme.axis.ticks.text}\n            >\n                {value}\n            </animated.text>\n        </animated.g>\n    )\n}\n\nconst memoizedAxisTick = memo(AxisTick) as typeof AxisTick\n\nexport { memoizedAxisTick as AxisTick }\n", "import { useMemo, memo } from 'react'\nimport * as React from 'react'\nimport { useSpring, useTransition, animated } from '@react-spring/web'\nimport { useTheme, useMotionConfig } from '@nivo/core'\nimport { ScaleValue, AnyScale } from '@nivo/scales'\nimport { computeCartesianTicks, getFormatter } from '../compute'\nimport { AxisTick } from './AxisTick'\nimport { AxisProps } from '../types'\n\nconst Axis = <Value extends ScaleValue>({\n    axis,\n    scale,\n    x = 0,\n    y = 0,\n    length,\n    ticksPosition,\n    tickValues,\n    tickSize = 5,\n    tickPadding = 5,\n    tickRotation = 0,\n    format,\n    renderTick = AxisTick,\n    legend,\n    legendPosition = 'end',\n    legendOffset = 0,\n    onClick,\n    ariaHidden,\n}: AxisProps<Value> & {\n    axis: 'x' | 'y'\n    scale: AnyScale\n    x?: number\n    y?: number\n    length: number\n    onClick?: (event: React.MouseEvent<SVGGElement, MouseEvent>, value: Value | string) => void\n}) => {\n    const theme = useTheme()\n\n    const formatValue = useMemo(() => getFormatter(format, scale), [format, scale])\n\n    const { ticks, textAlign, textBaseline } = computeCartesianTicks({\n        axis,\n        scale,\n        ticksPosition,\n        tickValues,\n        tickSize,\n        tickPadding,\n        tickRotation,\n    })\n\n    let legendNode = null\n    if (legend !== undefined) {\n        let legendX = 0\n        let legendY = 0\n        let legendRotation = 0\n        let textAnchor\n\n        if (axis === 'y') {\n            legendRotation = -90\n            legendX = legendOffset\n            if (legendPosition === 'start') {\n                textAnchor = 'start'\n                legendY = length\n            } else if (legendPosition === 'middle') {\n                textAnchor = 'middle'\n                legendY = length / 2\n            } else if (legendPosition === 'end') {\n                textAnchor = 'end'\n            }\n        } else {\n            legendY = legendOffset\n            if (legendPosition === 'start') {\n                textAnchor = 'start'\n            } else if (legendPosition === 'middle') {\n                textAnchor = 'middle'\n                legendX = length / 2\n            } else if (legendPosition === 'end') {\n                textAnchor = 'end'\n                legendX = length\n            }\n        }\n\n        legendNode = (\n            <text\n                transform={`translate(${legendX}, ${legendY}) rotate(${legendRotation})`}\n                textAnchor={textAnchor}\n                style={{\n                    dominantBaseline: 'central',\n                    ...theme.axis.legend.text,\n                }}\n            >\n                {legend}\n            </text>\n        )\n    }\n\n    const { animate, config: springConfig } = useMotionConfig()\n\n    const animatedProps = useSpring({\n        transform: `translate(${x},${y})`,\n        lineX2: axis === 'x' ? length : 0,\n        lineY2: axis === 'x' ? 0 : length,\n        config: springConfig,\n        immediate: !animate,\n    })\n\n    const transition = useTransition<\n        typeof ticks[0],\n        { opacity: number; transform: string; textTransform: string }\n    >(ticks, {\n        keys: tick => tick.key,\n        initial: tick => ({\n            opacity: 1,\n            transform: `translate(${tick.x},${tick.y})`,\n            textTransform: `translate(${tick.textX},${tick.textY}) rotate(${tickRotation})`,\n        }),\n        from: tick => ({\n            opacity: 0,\n            transform: `translate(${tick.x},${tick.y})`,\n            textTransform: `translate(${tick.textX},${tick.textY}) rotate(${tickRotation})`,\n        }),\n        enter: tick => ({\n            opacity: 1,\n            transform: `translate(${tick.x},${tick.y})`,\n            textTransform: `translate(${tick.textX},${tick.textY}) rotate(${tickRotation})`,\n        }),\n        update: tick => ({\n            opacity: 1,\n            transform: `translate(${tick.x},${tick.y})`,\n            textTransform: `translate(${tick.textX},${tick.textY}) rotate(${tickRotation})`,\n        }),\n        leave: {\n            opacity: 0,\n        },\n        config: springConfig,\n        immediate: !animate,\n    })\n\n    return (\n        <animated.g transform={animatedProps.transform} aria-hidden={ariaHidden}>\n            {transition((transitionProps, tick, _state, tickIndex) => {\n                return React.createElement(renderTick, {\n                    tickIndex,\n                    format: formatValue,\n                    rotate: tickRotation,\n                    textBaseline,\n                    textAnchor: textAlign,\n                    animatedProps: transitionProps,\n                    ...tick,\n                    ...(onClick ? { onClick } : {}),\n                })\n            })}\n            <animated.line\n                style={theme.axis.domain.line}\n                x1={0}\n                x2={animatedProps.lineX2}\n                y1={0}\n                y2={animatedProps.lineY2}\n            />\n            {legendNode}\n        </animated.g>\n    )\n}\n\nconst memoizedAxis = memo(Axis) as typeof Axis\n\nexport { memoizedAxis as Axis }\n", "import PropTypes from 'prop-types'\n\nexport const axisPropTypes = {\n    ticksPosition: PropTypes.oneOf(['before', 'after']),\n    tickValues: PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.arrayOf(\n            PropTypes.oneOfType([PropTypes.number, PropTypes.string, PropTypes.instanceOf(Date)])\n        ),\n        PropTypes.string,\n    ]),\n    tickSize: PropTypes.number,\n    tickPadding: PropTypes.number,\n    tickRotation: PropTypes.number,\n    format: PropTypes.oneOfType([PropTypes.func, PropTypes.string]),\n    renderTick: PropTypes.func,\n    legend: PropTypes.node,\n    legendPosition: PropTypes.oneOf(['start', 'middle', 'end']),\n    legendOffset: PropTypes.number,\n    ariaHidden: PropTypes.bool,\n}\n\nexport const axisPropType = PropTypes.shape(axisPropTypes)\n\nexport const positions = ['top', 'right', 'bottom', 'left'] as const\n", "import { memo } from 'react'\nimport { ScaleValue, AnyScale } from '@nivo/scales'\nimport { Axis } from './Axis'\nimport { positions } from '../props'\nimport { AxisProps } from '../types'\n\nexport const Axes = memo(\n    <X extends ScaleValue, Y extends ScaleValue>({\n        xScale,\n        yScale,\n        width,\n        height,\n        top,\n        right,\n        bottom,\n        left,\n    }: {\n        xScale: AnyScale\n        yScale: AnyScale\n        width: number\n        height: number\n        top?: AxisProps<X> | null\n        right?: AxisProps<Y> | null\n        bottom?: AxisProps<X> | null\n        left?: AxisProps<Y> | null\n    }) => {\n        const axes = { top, right, bottom, left }\n\n        return (\n            <>\n                {positions.map(position => {\n                    const axis = axes[position] as typeof position extends 'bottom' | 'top'\n                        ? AxisProps<X> | undefined\n                        : AxisProps<Y> | undefined\n\n                    if (!axis) return null\n\n                    const isXAxis = position === 'top' || position === 'bottom'\n                    const ticksPosition =\n                        position === 'top' || position === 'left' ? 'before' : 'after'\n\n                    return (\n                        <Axis\n                            key={position}\n                            {...axis}\n                            axis={isXAxis ? 'x' : 'y'}\n                            x={position === 'right' ? width : 0}\n                            y={position === 'bottom' ? height : 0}\n                            scale={isXAxis ? xScale : yScale}\n                            length={isXAxis ? width : height}\n                            ticksPosition={ticksPosition}\n                        />\n                    )\n                })}\n            </>\n        )\n    }\n)\n", "import { memo } from 'react'\nimport { SpringValues, animated } from '@react-spring/web'\nimport { useTheme } from '@nivo/core'\n\nexport const GridLine = memo(\n    ({\n        animatedProps,\n    }: {\n        animatedProps: SpringValues<{\n            opacity: number\n            x1: number\n            x2: number\n            y1: number\n            y2: number\n        }>\n    }) => {\n        const theme = useTheme()\n\n        return <animated.line {...animatedProps} {...(theme.grid.line as unknown)} />\n    }\n)\n", "import { memo } from 'react'\nimport { useTransition } from '@react-spring/web'\nimport { useMotionConfig } from '@nivo/core'\nimport { GridLine } from './GridLine'\nimport { Line } from '../types'\n\nexport const GridLines = memo(({ lines }: { lines: Line[] }) => {\n    const { animate, config: springConfig } = useMotionConfig()\n\n    const transition = useTransition<Line, Record<'opacity' | 'x1' | 'x2' | 'y1' | 'y2', number>>(\n        lines,\n        {\n            keys: line => line.key,\n            initial: line => ({\n                opacity: 1,\n                x1: line.x1,\n                x2: line.x2,\n                y1: line.y1,\n                y2: line.y2,\n            }),\n            from: line => ({\n                opacity: 0,\n                x1: line.x1,\n                x2: line.x2,\n                y1: line.y1,\n                y2: line.y2,\n            }),\n            enter: line => ({\n                opacity: 1,\n                x1: line.x1,\n                x2: line.x2,\n                y1: line.y1,\n                y2: line.y2,\n            }),\n            update: line => ({\n                opacity: 1,\n                x1: line.x1,\n                x2: line.x2,\n                y1: line.y1,\n                y2: line.y2,\n            }),\n            leave: {\n                opacity: 0,\n            },\n            config: springConfig,\n            immediate: !animate,\n        }\n    )\n\n    return (\n        <g>\n            {transition((animatedProps, line) => (\n                <GridLine {...line} key={line.key} animatedProps={animatedProps} />\n            ))}\n        </g>\n    )\n})\n", "import { useMemo, memo } from 'react'\nimport { ScaleValue, AnyScale, TicksSpec } from '@nivo/scales'\nimport { GridLines } from './GridLines'\nimport { computeGridLines } from '../compute'\n\nexport const Grid = memo(\n    <X extends ScaleValue, Y extends ScaleValue>({\n        width,\n        height,\n        xScale,\n        yScale,\n        xValues,\n        yValues,\n    }: {\n        width: number\n        height: number\n        xScale?: AnyScale | null\n        xValues?: TicksSpec<X>\n        yScale?: AnyScale | null\n        yValues?: TicksSpec<Y>\n    }) => {\n        const xLines = useMemo(() => {\n            if (!xScale) return false\n\n            return computeGridLines({\n                width,\n                height,\n                scale: xScale,\n                axis: 'x',\n                values: xValues,\n            })\n        }, [xScale, xValues, width, height])\n\n        const yLines = useMemo(() => {\n            if (!yScale) return false\n\n            return computeGridLines({\n                width,\n                height,\n                scale: yScale,\n                axis: 'y',\n                values: yValues,\n            })\n        }, [height, width, yScale, yValues])\n\n        return (\n            <>\n                {xLines && <GridLines lines={xLines} />}\n                {yLines && <GridLines lines={yLines} />}\n            </>\n        )\n    }\n)\n", "import { degreesToRadians, CompleteTheme } from '@nivo/core'\nimport { ScaleValue, AnyScale, TicksSpec } from '@nivo/scales'\nimport { computeCartesianTicks, getFormatter, computeGridLines } from './compute'\nimport { positions } from './props'\nimport { AxisLegendPosition, CanvasAxisProps, ValueFormatter } from './types'\n\nexport const renderAxisToCanvas = <Value extends ScaleValue>(\n    ctx: CanvasRenderingContext2D,\n    {\n        axis,\n        scale,\n        x = 0,\n        y = 0,\n        length,\n\n        ticksPosition,\n        tickValues,\n        tickSize = 5,\n        tickPadding = 5,\n        tickRotation = 0,\n        format: _format,\n\n        legend,\n        legendPosition = 'end',\n        legendOffset = 0,\n\n        theme,\n    }: {\n        axis: 'x' | 'y'\n        scale: AnyScale\n        x?: number\n        y?: number\n        length: number\n        ticksPosition: 'before' | 'after'\n        tickValues?: TicksSpec<Value>\n        tickSize?: number\n        tickPadding?: number\n        tickRotation?: number\n        format?: string | ValueFormatter<Value>\n        legend?: string\n        legendPosition?: AxisLegendPosition\n        legendOffset?: number\n        theme: CompleteTheme\n    }\n) => {\n    const { ticks, textAlign, textBaseline } = computeCartesianTicks({\n        axis,\n        scale,\n        ticksPosition,\n        tickValues,\n        tickSize,\n        tickPadding,\n        tickRotation,\n        engine: 'canvas',\n    })\n\n    ctx.save()\n    ctx.translate(x, y)\n\n    ctx.textAlign = textAlign\n    ctx.textBaseline = textBaseline\n    ctx.font = `${theme.axis.ticks.text.fontWeight ? `${theme.axis.ticks.text.fontWeight} ` : ''}${\n        theme.axis.ticks.text.fontSize\n    }px ${theme.axis.ticks.text.fontFamily}`\n\n    if ((theme.axis.domain.line.strokeWidth ?? 0) > 0) {\n        ctx.lineWidth = Number(theme.axis.domain.line.strokeWidth)\n        ctx.lineCap = 'square'\n\n        if (theme.axis.domain.line.stroke) {\n            ctx.strokeStyle = theme.axis.domain.line.stroke\n        }\n\n        ctx.beginPath()\n        ctx.moveTo(0, 0)\n        ctx.lineTo(axis === 'x' ? length : 0, axis === 'x' ? 0 : length)\n        ctx.stroke()\n    }\n\n    const format = typeof _format === 'function' ? _format : (value: unknown) => `${value}`\n\n    ticks.forEach(tick => {\n        if ((theme.axis.ticks.line.strokeWidth ?? 0) > 0) {\n            ctx.lineWidth = Number(theme.axis.ticks.line.strokeWidth)\n            ctx.lineCap = 'square'\n\n            if (theme.axis.ticks.line.stroke) {\n                ctx.strokeStyle = theme.axis.ticks.line.stroke\n            }\n\n            ctx.beginPath()\n            ctx.moveTo(tick.x, tick.y)\n            ctx.lineTo(tick.x + tick.lineX, tick.y + tick.lineY)\n            ctx.stroke()\n        }\n\n        const value = format(tick.value)\n\n        ctx.save()\n        ctx.translate(tick.x + tick.textX, tick.y + tick.textY)\n        ctx.rotate(degreesToRadians(tickRotation))\n\n        if (theme.axis.ticks.text.fill) {\n            ctx.fillStyle = theme.axis.ticks.text.fill\n        }\n\n        ctx.fillText(String(value), 0, 0)\n        ctx.restore()\n    })\n\n    if (legend !== undefined) {\n        let legendX = 0\n        let legendY = 0\n        let legendRotation = 0\n        let textAlign: CanvasTextAlign = 'center'\n\n        if (axis === 'y') {\n            legendRotation = -90\n            legendX = legendOffset\n            if (legendPosition === 'start') {\n                textAlign = 'start'\n                legendY = length\n            } else if (legendPosition === 'middle') {\n                textAlign = 'center'\n                legendY = length / 2\n            } else if (legendPosition === 'end') {\n                textAlign = 'end'\n            }\n        } else {\n            legendY = legendOffset\n            if (legendPosition === 'start') {\n                textAlign = 'start'\n            } else if (legendPosition === 'middle') {\n                textAlign = 'center'\n                legendX = length / 2\n            } else if (legendPosition === 'end') {\n                textAlign = 'end'\n                legendX = length\n            }\n        }\n\n        ctx.translate(legendX, legendY)\n        ctx.rotate(degreesToRadians(legendRotation))\n        ctx.font = `${\n            theme.axis.legend.text.fontWeight ? `${theme.axis.legend.text.fontWeight} ` : ''\n        }${theme.axis.legend.text.fontSize}px ${theme.axis.legend.text.fontFamily}`\n\n        if (theme.axis.legend.text.fill) {\n            ctx.fillStyle = theme.axis.legend.text.fill\n        }\n\n        ctx.textAlign = textAlign\n        ctx.textBaseline = 'middle'\n        ctx.fillText(legend, 0, 0)\n    }\n\n    ctx.restore()\n}\n\nexport const renderAxesToCanvas = <X extends ScaleValue, Y extends ScaleValue>(\n    ctx: CanvasRenderingContext2D,\n    {\n        xScale,\n        yScale,\n        width,\n        height,\n\n        top,\n        right,\n        bottom,\n        left,\n\n        theme,\n    }: {\n        xScale: AnyScale\n        yScale: AnyScale\n        width: number\n        height: number\n        top?: CanvasAxisProps<X> | null\n        right?: CanvasAxisProps<Y> | null\n        bottom?: CanvasAxisProps<X> | null\n        left?: CanvasAxisProps<Y> | null\n        theme: CompleteTheme\n    }\n) => {\n    const axes = { top, right, bottom, left }\n\n    positions.forEach(position => {\n        const axis = axes[position] as typeof position extends 'bottom' | 'top'\n            ? CanvasAxisProps<X> | undefined\n            : CanvasAxisProps<Y> | undefined\n\n        if (!axis) return null\n\n        const isXAxis = position === 'top' || position === 'bottom'\n        const ticksPosition = position === 'top' || position === 'left' ? 'before' : 'after'\n        const scale = isXAxis ? xScale : yScale\n        const format = getFormatter(axis.format, scale)\n\n        renderAxisToCanvas(ctx, {\n            ...axis,\n            axis: isXAxis ? 'x' : 'y',\n            x: position === 'right' ? width : 0,\n            y: position === 'bottom' ? height : 0,\n            scale,\n            format,\n            length: isXAxis ? width : height,\n            ticksPosition,\n            theme,\n        })\n    })\n}\n\nexport const renderGridLinesToCanvas = <Value extends ScaleValue>(\n    ctx: CanvasRenderingContext2D,\n    {\n        width,\n        height,\n        scale,\n        axis,\n        values,\n    }: {\n        width: number\n        height: number\n        scale: AnyScale\n        axis: 'x' | 'y'\n        values?: TicksSpec<Value>\n    }\n) => {\n    const lines = computeGridLines({ width, height, scale, axis, values })\n\n    lines.forEach(line => {\n        ctx.beginPath()\n        ctx.moveTo(line.x1, line.y1)\n        ctx.lineTo(line.x2, line.y2)\n        ctx.stroke()\n    })\n}\n", "import { SymbolProps } from './types'\n\nexport const SymbolCircle = ({\n    x,\n    y,\n    size,\n    fill,\n    opacity = 1,\n    borderWidth = 0,\n    borderColor = 'transparent',\n}: SymbolProps) => {\n    return (\n        <circle\n            r={size / 2}\n            cx={x + size / 2}\n            cy={y + size / 2}\n            fill={fill}\n            opacity={opacity}\n            strokeWidth={borderWidth}\n            stroke={borderColor}\n            style={{\n                pointerEvents: 'none',\n            }}\n        />\n    )\n}\n", "import { SymbolProps } from './types'\n\nexport const SymbolDiamond = ({\n    x,\n    y,\n    size,\n    fill,\n    opacity = 1,\n    borderWidth = 0,\n    borderColor = 'transparent',\n}: SymbolProps) => {\n    return (\n        <g transform={`translate(${x},${y})`}>\n            <path\n                d={`\n                    M${size / 2} 0\n                    L${size * 0.8} ${size / 2}\n                    L${size / 2} ${size}\n                    L${size * 0.2} ${size / 2}\n                    L${size / 2} 0\n                `}\n                fill={fill}\n                opacity={opacity}\n                strokeWidth={borderWidth}\n                stroke={borderColor}\n                style={{\n                    pointerEvents: 'none',\n                }}\n            />\n        </g>\n    )\n}\n", "import { SymbolProps } from './types'\n\nexport const SymbolSquare = ({\n    x,\n    y,\n    size,\n    fill,\n    opacity = 1,\n    borderWidth = 0,\n    borderColor = 'transparent',\n}: SymbolProps) => {\n    return (\n        <rect\n            x={x}\n            y={y}\n            fill={fill}\n            opacity={opacity}\n            strokeWidth={borderWidth}\n            stroke={borderColor}\n            width={size}\n            height={size}\n            style={{\n                pointerEvents: 'none',\n            }}\n        />\n    )\n}\n", "import { SymbolProps } from './types'\n\nexport const SymbolTriangle = ({\n    x,\n    y,\n    size,\n    fill,\n    opacity = 1,\n    borderWidth = 0,\n    borderColor = 'transparent',\n}: SymbolProps) => {\n    return (\n        <g transform={`translate(${x},${y})`}>\n            <path\n                d={`\n                M${size / 2} 0\n                L${size} ${size}\n                L0 ${size}\n                L${size / 2} 0\n            `}\n                fill={fill}\n                opacity={opacity}\n                strokeWidth={borderWidth}\n                stroke={borderColor}\n                style={{\n                    pointerEvents: 'none',\n                }}\n            />\n        </g>\n    )\n}\n", "import { ContinuousColorsLegendProps } from './types'\n\nexport const continuousColorsLegendDefaults: {\n    length: NonNullable<ContinuousColorsLegendProps['length']>\n    thickness: NonNullable<ContinuousColorsLegendProps['thickness']>\n    direction: NonNullable<ContinuousColorsLegendProps['direction']>\n    tickPosition: NonNullable<ContinuousColorsLegendProps['tickPosition']>\n    tickSize: NonNullable<ContinuousColorsLegendProps['tickSize']>\n    tickSpacing: NonNullable<ContinuousColorsLegendProps['tickSpacing']>\n    tickOverlap: NonNullable<ContinuousColorsLegendProps['tickOverlap']>\n    tickFormat: NonNullable<ContinuousColorsLegendProps['tickFormat']>\n    titleAlign: NonNullable<ContinuousColorsLegendProps['titleAlign']>\n    titleOffset: NonNullable<ContinuousColorsLegendProps['titleOffset']>\n} = {\n    length: 200,\n    thickness: 16,\n    direction: 'row',\n    tickPosition: 'after',\n    tickSize: 4,\n    tickSpacing: 3,\n    tickOverlap: false,\n    tickFormat: (value: number) => `${value}`,\n    titleAlign: 'start',\n    titleOffset: 4,\n}\n", "import { scaleLinear } from 'd3-scale'\nimport { getValueFormatter } from '@nivo/core'\nimport { computeContinuousColorScaleColorStops } from '@nivo/colors'\nimport {\n    BoxLegendSvgProps,\n    ContinuousColorsLegendProps,\n    LegendAnchor,\n    LegendItemDirection,\n} from './types'\nimport { continuousColorsLegendDefaults } from './defaults'\n\nconst isObject = <T>(item: unknown): item is T =>\n    typeof item === 'object' && !Array.isArray(item) && item !== null\n\nconst zeroPadding = {\n    top: 0,\n    right: 0,\n    bottom: 0,\n    left: 0,\n}\n\nexport const computeDimensions = ({\n    direction,\n    itemsSpacing,\n    padding: _padding,\n    itemCount,\n    itemWidth,\n    itemHeight,\n}: Pick<BoxLegendSvgProps, 'direction' | 'padding'> &\n    Record<'itemsSpacing' | 'itemCount' | 'itemWidth' | 'itemHeight', number>) => {\n    if (typeof _padding !== 'number' && !isObject(_padding)) {\n        throw new Error('Invalid property padding, must be one of: number, object')\n    }\n\n    const padding =\n        typeof _padding === 'number'\n            ? {\n                  top: _padding,\n                  right: _padding,\n                  bottom: _padding,\n                  left: _padding,\n              }\n            : {\n                  ...zeroPadding,\n                  ..._padding,\n              }\n\n    const horizontalPadding = padding.left + padding.right\n    const verticalPadding = padding.top + padding.bottom\n    let width = itemWidth + horizontalPadding\n    let height = itemHeight + verticalPadding\n    const spacing = (itemCount - 1) * itemsSpacing\n    if (direction === 'row') {\n        width = itemWidth * itemCount + spacing + horizontalPadding\n    } else if (direction === 'column') {\n        height = itemHeight * itemCount + spacing + verticalPadding\n    }\n\n    return { width, height, padding }\n}\n\nexport const computePositionFromAnchor = ({\n    anchor,\n    translateX,\n    translateY,\n    containerWidth,\n    containerHeight,\n    width,\n    height,\n}: { anchor: LegendAnchor } & Record<\n    'translateX' | 'translateY' | 'containerWidth' | 'containerHeight' | 'width' | 'height',\n    number\n>) => {\n    let x = translateX\n    let y = translateY\n\n    switch (anchor) {\n        case 'top':\n            x += (containerWidth - width) / 2\n            break\n\n        case 'top-right':\n            x += containerWidth - width\n            break\n\n        case 'right':\n            x += containerWidth - width\n            y += (containerHeight - height) / 2\n            break\n\n        case 'bottom-right':\n            x += containerWidth - width\n            y += containerHeight - height\n            break\n\n        case 'bottom':\n            x += (containerWidth - width) / 2\n            y += containerHeight - height\n            break\n\n        case 'bottom-left':\n            y += containerHeight - height\n            break\n\n        case 'left':\n            y += (containerHeight - height) / 2\n            break\n\n        case 'center':\n            x += (containerWidth - width) / 2\n            y += (containerHeight - height) / 2\n            break\n    }\n\n    return { x, y }\n}\n\nexport const computeItemLayout = ({\n    direction,\n    justify,\n    symbolSize,\n    symbolSpacing,\n    width,\n    height,\n}: {\n    direction: LegendItemDirection\n    justify: boolean\n} & Record<'symbolSize' | 'symbolSpacing' | 'width' | 'height', number>) => {\n    let symbolX\n    let symbolY\n\n    let labelX\n    let labelY\n    let labelAnchor: 'start' | 'middle' | 'end'\n    let labelAlignment: 'alphabetic' | 'central' | 'text-before-edge'\n\n    switch (direction) {\n        case 'left-to-right':\n            symbolX = 0\n            symbolY = (height - symbolSize) / 2\n\n            labelY = height / 2\n            labelAlignment = 'central'\n            if (justify) {\n                labelX = width\n                labelAnchor = 'end'\n            } else {\n                labelX = symbolSize + symbolSpacing\n                labelAnchor = 'start'\n            }\n            break\n\n        case 'right-to-left':\n            symbolX = width - symbolSize\n            symbolY = (height - symbolSize) / 2\n\n            labelY = height / 2\n            labelAlignment = 'central'\n            if (justify) {\n                labelX = 0\n                labelAnchor = 'start'\n            } else {\n                labelX = width - symbolSize - symbolSpacing\n                labelAnchor = 'end'\n            }\n            break\n\n        case 'top-to-bottom':\n            symbolX = (width - symbolSize) / 2\n            symbolY = 0\n\n            labelX = width / 2\n\n            labelAnchor = 'middle'\n            if (justify) {\n                labelY = height\n                labelAlignment = 'alphabetic'\n            } else {\n                labelY = symbolSize + symbolSpacing\n                labelAlignment = 'text-before-edge'\n            }\n            break\n\n        case 'bottom-to-top':\n            symbolX = (width - symbolSize) / 2\n            symbolY = height - symbolSize\n\n            labelX = width / 2\n            labelAnchor = 'middle'\n            if (justify) {\n                labelY = 0\n                labelAlignment = 'text-before-edge'\n            } else {\n                labelY = height - symbolSize - symbolSpacing\n                labelAlignment = 'alphabetic'\n            }\n            break\n    }\n\n    return {\n        symbolX,\n        symbolY,\n        labelX,\n        labelY,\n        labelAnchor,\n        labelAlignment,\n    }\n}\n\nexport const computeContinuousColorsLegend = ({\n    scale,\n    ticks,\n    length = continuousColorsLegendDefaults.length,\n    thickness = continuousColorsLegendDefaults.thickness,\n    direction = continuousColorsLegendDefaults.direction,\n    tickPosition = continuousColorsLegendDefaults.tickPosition,\n    tickSize = continuousColorsLegendDefaults.tickSize,\n    tickSpacing = continuousColorsLegendDefaults.tickSpacing,\n    tickOverlap = continuousColorsLegendDefaults.tickOverlap,\n    tickFormat = continuousColorsLegendDefaults.tickFormat,\n    title,\n    titleAlign = continuousColorsLegendDefaults.titleAlign,\n    titleOffset = continuousColorsLegendDefaults.titleOffset,\n}: ContinuousColorsLegendProps) => {\n    // left to right for `row`, bottom to top for `column`\n    const domain = direction === 'column' ? [...scale.domain()].reverse() : scale.domain()\n\n    const positionScale = scaleLinear().domain(domain)\n    if (domain.length === 2) {\n        // sequential, quantize\n        positionScale.range([0, length])\n    } else if (domain.length === 3) {\n        // diverging\n        positionScale.range([0, length / 2, length])\n    }\n\n    let values: number[]\n    if ('thresholds' in scale) {\n        // quantize\n        values = [domain[0], ...scale.thresholds(), domain[1]]\n    } else {\n        // sequential, diverging\n        values = Array.isArray(ticks) ? ticks : (scale as any).ticks(ticks)\n    }\n\n    const colorStops = computeContinuousColorScaleColorStops(scale, 32)\n\n    const formatValue = getValueFormatter(tickFormat)\n\n    const computedTicks: {\n        x1: number\n        y1: number\n        x2: number\n        y2: number\n        text: string\n        textX: number\n        textY: number\n        textHorizontalAlign: 'start' | 'middle' | 'end'\n        textVerticalAlign: 'alphabetic' | 'central' | 'hanging'\n    }[] = []\n\n    let width: number\n    let height: number\n\n    const gradientX1 = 0\n    let gradientY1 = 0\n    let gradientX2 = 0\n    const gradientY2 = 0\n\n    let titleX: number\n    let titleY: number\n    let titleRotation: number\n    let titleVerticalAlign: 'alphabetic' | 'hanging'\n\n    if (direction === 'row') {\n        width = length\n        height = thickness\n\n        gradientX2 = 1\n\n        let y1: number\n        let y2: number\n\n        let textY: number\n        const textHorizontalAlign = 'middle'\n        let textVerticalAlign: 'alphabetic' | 'hanging'\n\n        titleRotation = 0\n        if (titleAlign === 'start') {\n            titleX = 0\n        } else if (titleAlign === 'middle') {\n            titleX = length / 2\n        } else {\n            titleX = length\n        }\n\n        if (tickPosition === 'before') {\n            y1 = -tickSize\n            y2 = tickOverlap ? thickness : 0\n\n            textY = -tickSize - tickSpacing\n            textVerticalAlign = 'alphabetic'\n\n            titleY = thickness + titleOffset\n            titleVerticalAlign = 'hanging'\n        } else {\n            y1 = tickOverlap ? 0 : thickness\n            y2 = thickness + tickSize\n\n            textY = y2 + tickSpacing\n            textVerticalAlign = 'hanging'\n\n            titleY = -titleOffset\n            titleVerticalAlign = 'alphabetic'\n        }\n\n        values.forEach(value => {\n            const x = positionScale(value)\n\n            computedTicks.push({\n                x1: x,\n                y1,\n                x2: x,\n                y2,\n                text: formatValue(value),\n                textX: x,\n                textY,\n                textHorizontalAlign,\n                textVerticalAlign,\n            })\n        })\n    } else {\n        width = thickness\n        height = length\n\n        gradientY1 = 1\n\n        let x1: number\n        let x2: number\n\n        let textX: number\n        let textHorizontalAlign: 'start' | 'end'\n        const textVerticalAlign = 'central'\n\n        titleRotation = -90\n        if (titleAlign === 'start') {\n            titleY = length\n        } else if (titleAlign === 'middle') {\n            titleY = length / 2\n        } else {\n            titleY = 0\n        }\n\n        if (tickPosition === 'before') {\n            x1 = -tickSize\n            x2 = tickOverlap ? thickness : 0\n\n            textX = x1 - tickSpacing\n            textHorizontalAlign = 'end'\n\n            titleX = thickness + titleOffset\n            titleVerticalAlign = 'hanging'\n        } else {\n            x1 = tickOverlap ? 0 : thickness\n            x2 = thickness + tickSize\n\n            textX = x2 + tickSpacing\n            textHorizontalAlign = 'start'\n\n            titleX = -titleOffset\n            titleVerticalAlign = 'alphabetic'\n        }\n\n        values.forEach(value => {\n            const y = positionScale(value)\n\n            computedTicks.push({\n                x1,\n                y1: y,\n                x2,\n                y2: y,\n                text: formatValue(value),\n                textX,\n                textY: y,\n                textHorizontalAlign,\n                textVerticalAlign,\n            })\n        })\n    }\n\n    return {\n        width,\n        height,\n        gradientX1,\n        gradientY1,\n        gradientX2,\n        gradientY2,\n        colorStops,\n        ticks: computedTicks,\n        titleText: title,\n        titleX,\n        titleY,\n        titleRotation,\n        titleHorizontalAlign: titleAlign,\n        titleVerticalAlign,\n    }\n}\n", "import { Fragment } from 'react'\nimport { useTheme } from '@nivo/core'\nimport { computeContinuousColorsLegend } from '../compute'\nimport { ContinuousColorsLegendProps } from '../types'\nimport { continuousColorsLegendDefaults } from '../defaults'\n\nexport const ContinuousColorsLegendSvg = ({\n    scale,\n    ticks,\n    length = continuousColorsLegendDefaults.length,\n    thickness = continuousColorsLegendDefaults.thickness,\n    direction = continuousColorsLegendDefaults.direction,\n    tickPosition = continuousColorsLegendDefaults.tickPosition,\n    tickSize = continuousColorsLegendDefaults.tickSize,\n    tickSpacing = continuousColorsLegendDefaults.tickSpacing,\n    tickOverlap = continuousColorsLegendDefaults.tickOverlap,\n    tickFormat = continuousColorsLegendDefaults.tickFormat,\n    title,\n    titleAlign = continuousColorsLegendDefaults.titleAlign,\n    titleOffset = continuousColorsLegendDefaults.titleOffset,\n}: ContinuousColorsLegendProps) => {\n    const {\n        width,\n        height,\n        gradientX1,\n        gradientY1,\n        gradientX2,\n        gradientY2,\n        ticks: computedTicks,\n        colorStops,\n        titleText,\n        titleX,\n        titleY,\n        titleRotation,\n        titleVerticalAlign,\n        titleHorizontalAlign,\n    } = computeContinuousColorsLegend({\n        scale,\n        ticks,\n        length,\n        thickness,\n        direction,\n        tickPosition,\n        tickSize,\n        tickSpacing,\n        tickOverlap,\n        tickFormat,\n        title,\n        titleAlign,\n        titleOffset,\n    })\n\n    const theme = useTheme()\n\n    const id = `ContinuousColorsLegendSvgGradient.${direction}.${colorStops\n        .map(stop => stop.offset)\n        .join('_')}`\n\n    return (\n        <g>\n            <defs>\n                <linearGradient\n                    id={id}\n                    x1={gradientX1}\n                    y1={gradientY1}\n                    x2={gradientX2}\n                    y2={gradientY2}\n                >\n                    {colorStops.map(colorStop => (\n                        <stop {...colorStop} />\n                    ))}\n                </linearGradient>\n            </defs>\n            {titleText && (\n                <text\n                    transform={`translate(${titleX}, ${titleY}) rotate(${titleRotation})`}\n                    textAnchor={titleHorizontalAlign}\n                    dominantBaseline={titleVerticalAlign}\n                    style={theme.legends.title.text}\n                >\n                    {titleText}\n                </text>\n            )}\n            <rect width={width} height={height} fill={`url(#${id}`} />\n            {computedTicks.map((tick, index) => (\n                <Fragment key={index}>\n                    <line\n                        x1={tick.x1}\n                        y1={tick.y1}\n                        x2={tick.x2}\n                        y2={tick.y2}\n                        style={theme.legends.ticks.line}\n                    />\n                    <text\n                        x={tick.textX}\n                        y={tick.textY}\n                        textAnchor={tick.textHorizontalAlign}\n                        dominantBaseline={tick.textVerticalAlign}\n                        style={theme.legends.ticks.text}\n                    >\n                        {tick.text}\n                    </text>\n                </Fragment>\n            ))}\n        </g>\n    )\n}\n", "import { AnchoredContinuousColorsLegendProps } from '../types'\nimport { computePositionFromAnchor } from '../compute'\nimport { continuousColorsLegendDefaults } from '../defaults'\nimport { ContinuousColorsLegendSvg } from './ContinuousColorsLegendSvg'\n\nexport const AnchoredContinuousColorsLegendSvg = ({\n    containerWidth,\n    containerHeight,\n    anchor,\n    translateX = 0,\n    translateY = 0,\n    length = continuousColorsLegendDefaults.length,\n    thickness = continuousColorsLegendDefaults.thickness,\n    direction = continuousColorsLegendDefaults.direction,\n    ...legendProps\n}: AnchoredContinuousColorsLegendProps) => {\n    let width: number\n    let height: number\n    if (direction === 'row') {\n        width = length\n        height = thickness\n    } else {\n        width = thickness\n        height = length\n    }\n\n    const { x, y } = computePositionFromAnchor({\n        anchor,\n        translateX,\n        translateY,\n        containerWidth,\n        containerHeight,\n        width,\n        height,\n    })\n\n    return (\n        <g transform={`translate(${x}, ${y})`}>\n            <ContinuousColorsLegendSvg\n                length={length}\n                thickness={thickness}\n                direction={direction}\n                {...legendProps}\n            />\n        </g>\n    )\n}\n", "import { useState, useCallback } from 'react'\nimport * as React from 'react'\nimport { useTheme } from '@nivo/core'\nimport { LegendSvgItemProps } from '../types'\nimport { computeItemLayout } from '../compute'\nimport { SymbolCircle, SymbolDiamond, SymbolSquare, SymbolTriangle } from './symbols'\n\ntype Style = Partial<{\n    itemBackground: string\n    itemOpacity: number\n    itemTextColor: string\n    symbolBorderColor: string\n    symbolBorderWidth: number\n    symbolSize: number\n}>\n\nconst symbolByShape = {\n    circle: SymbolCircle,\n    diamond: SymbolDiamond,\n    square: SymbolSquare,\n    triangle: SymbolTriangle,\n}\n\nexport const LegendSvgItem = ({\n    x,\n    y,\n    width,\n    height,\n    data,\n    direction = 'left-to-right',\n    justify = false,\n    textColor,\n    background = 'transparent',\n    opacity = 1,\n\n    symbolShape = 'square',\n    symbolSize = 16,\n    symbolSpacing = 8,\n    symbolBorderWidth = 0,\n    symbolBorderColor = 'transparent',\n\n    onClick,\n    onMouseEnter,\n    onMouseLeave,\n    toggleSerie,\n\n    effects,\n}: LegendSvgItemProps) => {\n    const [style, setStyle] = useState<Style>({})\n    const theme = useTheme()\n\n    const handleMouseEnter = useCallback(\n        (event: React.MouseEvent<SVGRectElement>) => {\n            if (effects) {\n                const applyEffects = effects.filter(({ on }) => on === 'hover')\n                const style = applyEffects.reduce(\n                    (acc, effect) => ({\n                        ...acc,\n                        ...effect.style,\n                    }),\n                    {}\n                )\n                setStyle(style)\n            }\n\n            onMouseEnter?.(data, event)\n        },\n        [onMouseEnter, data, effects]\n    )\n    const handleMouseLeave = useCallback(\n        (event: React.MouseEvent<SVGRectElement>) => {\n            if (effects) {\n                const applyEffects = effects.filter(({ on }) => on !== 'hover')\n                const style = applyEffects.reduce(\n                    (acc, effect) => ({\n                        ...acc,\n                        ...effect.style,\n                    }),\n                    {}\n                )\n                setStyle(style)\n            }\n\n            onMouseLeave?.(data, event)\n        },\n        [onMouseLeave, data, effects]\n    )\n\n    const { symbolX, symbolY, labelX, labelY, labelAnchor, labelAlignment } = computeItemLayout({\n        direction,\n        justify,\n        symbolSize: style.symbolSize ?? symbolSize,\n        symbolSpacing,\n        width,\n        height,\n    })\n\n    const isInteractive = [onClick, onMouseEnter, onMouseLeave, toggleSerie].some(\n        handler => handler !== undefined\n    )\n\n    const SymbolShape = typeof symbolShape === 'function' ? symbolShape : symbolByShape[symbolShape]\n\n    return (\n        <g\n            transform={`translate(${x},${y})`}\n            style={{\n                opacity: style.itemOpacity ?? opacity,\n            }}\n        >\n            <rect\n                width={width}\n                height={height}\n                fill={style.itemBackground ?? background}\n                style={{\n                    cursor: isInteractive ? 'pointer' : 'auto',\n                }}\n                onClick={event => {\n                    onClick?.(data, event)\n                    toggleSerie?.(data.id)\n                }}\n                onMouseEnter={handleMouseEnter}\n                onMouseLeave={handleMouseLeave}\n            />\n            {React.createElement(SymbolShape, {\n                id: data.id,\n                x: symbolX,\n                y: symbolY,\n                size: style.symbolSize ?? symbolSize,\n                fill: data.fill ?? data.color ?? 'black',\n                borderWidth: style.symbolBorderWidth ?? symbolBorderWidth,\n                borderColor: style.symbolBorderColor ?? symbolBorderColor,\n                ...(data.hidden ? theme.legends.hidden.symbol : undefined),\n            })}\n            <text\n                textAnchor={labelAnchor}\n                style={{\n                    ...theme.legends.text,\n                    fill: style.itemTextColor ?? textColor ?? theme.legends.text.fill ?? 'black',\n                    dominantBaseline: labelAlignment,\n                    pointerEvents: 'none',\n                    userSelect: 'none',\n                    ...(data.hidden ? theme.legends.hidden.text : undefined),\n                }}\n                x={labelX}\n                y={labelY}\n            >\n                {data.label}\n            </text>\n        </g>\n    )\n}\n", "import { LegendSvgItem } from './LegendSvgItem'\nimport { LegendSvgProps } from '../types'\nimport { computeDimensions } from '../compute'\n\nexport const LegendSvg = ({\n    data,\n\n    x,\n    y,\n    direction,\n    padding: _padding = 0,\n    justify,\n    effects,\n\n    itemWidth,\n    itemHeight,\n    itemDirection = 'left-to-right',\n    itemsSpacing = 0,\n    itemTextColor,\n    itemBackground = 'transparent',\n    itemOpacity = 1,\n\n    symbolShape,\n    symbolSize,\n    symbolSpacing,\n    symbolBorderWidth,\n    symbolBorderColor,\n\n    onClick,\n    onMouseEnter,\n    onMouseLeave,\n    toggleSerie,\n}: LegendSvgProps) => {\n    const { padding } = computeDimensions({\n        itemCount: data.length,\n        itemWidth,\n        itemHeight,\n        itemsSpacing,\n        direction,\n        padding: _padding,\n    })\n\n    const xStep = direction === 'row' ? itemWidth + itemsSpacing : 0\n    const yStep = direction === 'column' ? itemHeight + itemsSpacing : 0\n\n    return (\n        <g transform={`translate(${x},${y})`}>\n            {data.map((data, i) => (\n                <LegendSvgItem\n                    key={i}\n                    data={data}\n                    x={i * xStep + padding.left}\n                    y={i * yStep + padding.top}\n                    width={itemWidth}\n                    height={itemHeight}\n                    direction={itemDirection}\n                    justify={justify}\n                    effects={effects}\n                    textColor={itemTextColor}\n                    background={itemBackground}\n                    opacity={itemOpacity}\n                    symbolShape={symbolShape}\n                    symbolSize={symbolSize}\n                    symbolSpacing={symbolSpacing}\n                    symbolBorderWidth={symbolBorderWidth}\n                    symbolBorderColor={symbolBorderColor}\n                    onClick={onClick}\n                    onMouseEnter={onMouseEnter}\n                    onMouseLeave={onMouseLeave}\n                    toggleSerie={toggleSerie}\n                />\n            ))}\n        </g>\n    )\n}\n", "import { LegendSvg } from './LegendSvg'\nimport { BoxLegendSvgProps } from '../types'\nimport { computeDimensions, computePositionFromAnchor } from '../compute'\n\nexport const BoxLegendSvg = ({\n    data,\n\n    containerWidth,\n    containerHeight,\n    translateX = 0,\n    translateY = 0,\n    anchor,\n    direction,\n    padding = 0,\n    justify,\n\n    itemsSpacing = 0,\n    itemWidth,\n    itemHeight,\n    itemDirection,\n    itemTextColor,\n    itemBackground,\n    itemOpacity,\n\n    symbolShape,\n    symbolSize,\n    symbolSpacing,\n    symbolBorderWidth,\n    symbolBorderColor,\n\n    onClick,\n    onMouseEnter,\n    onMouseLeave,\n    toggleSerie,\n\n    effects,\n}: BoxLegendSvgProps) => {\n    const { width, height } = computeDimensions({\n        itemCount: data.length,\n        itemsSpacing,\n        itemWidth,\n        itemHeight,\n        direction,\n        padding,\n    })\n\n    const { x, y } = computePositionFromAnchor({\n        anchor,\n        translateX,\n        translateY,\n        containerWidth,\n        containerHeight,\n        width,\n        height,\n    })\n\n    return (\n        <LegendSvg\n            data={data}\n            x={x}\n            y={y}\n            direction={direction}\n            padding={padding}\n            justify={justify}\n            effects={effects}\n            itemsSpacing={itemsSpacing}\n            itemWidth={itemWidth}\n            itemHeight={itemHeight}\n            itemDirection={itemDirection}\n            itemTextColor={itemTextColor}\n            itemBackground={itemBackground}\n            itemOpacity={itemOpacity}\n            symbolShape={symbolShape}\n            symbolSize={symbolSize}\n            symbolSpacing={symbolSpacing}\n            symbolBorderWidth={symbolBorderWidth}\n            symbolBorderColor={symbolBorderColor}\n            onClick={onClick}\n            onMouseEnter={onMouseEnter}\n            onMouseLeave={onMouseLeave}\n            toggleSerie={typeof toggleSerie === 'boolean' ? undefined : toggleSerie}\n        />\n    )\n}\n", "import { CompleteTheme, degreesToRadians } from '@nivo/core'\nimport {\n    computeDimensions,\n    computePositionFromAnchor,\n    computeItemLayout,\n    computeContinuousColorsLegend,\n} from './compute'\nimport { AnchoredContinuousColorsLegendProps, LegendCanvasProps } from './types'\nimport { continuousColorsLegendDefaults } from './defaults'\n\nconst textAlignMapping = {\n    start: 'left',\n    middle: 'center',\n    end: 'right',\n} as const\n\nexport const renderLegendToCanvas = (\n    ctx: CanvasRenderingContext2D,\n    {\n        data,\n\n        containerWidth,\n        containerHeight,\n        translateX = 0,\n        translateY = 0,\n        anchor,\n        direction,\n        padding: _padding = 0,\n        justify = false,\n\n        // items\n        itemsSpacing = 0,\n        itemWidth,\n        itemHeight,\n        itemDirection = 'left-to-right',\n        itemTextColor,\n\n        // symbol\n        symbolSize = 16,\n        symbolSpacing = 8,\n        // @todo add support for shapes\n        // symbolShape = LegendSvgItem.defaultProps.symbolShape,\n\n        theme,\n    }: LegendCanvasProps\n) => {\n    const { width, height, padding } = computeDimensions({\n        itemCount: data.length,\n        itemWidth,\n        itemHeight,\n        itemsSpacing,\n        direction,\n        padding: _padding,\n    })\n\n    const { x, y } = computePositionFromAnchor({\n        anchor,\n        translateX,\n        translateY,\n        containerWidth,\n        containerHeight,\n        width,\n        height,\n    })\n\n    const xStep = direction === 'row' ? itemWidth + itemsSpacing : 0\n    const yStep = direction === 'column' ? itemHeight + itemsSpacing : 0\n\n    ctx.save()\n    ctx.translate(x, y)\n\n    ctx.font = `${theme.legends.text.fontSize}px ${theme.legends.text.fontFamily || 'sans-serif'}`\n\n    data.forEach((d, i) => {\n        const itemX = i * xStep + padding.left\n        const itemY = i * yStep + padding.top\n\n        const { symbolX, symbolY, labelX, labelY, labelAnchor, labelAlignment } = computeItemLayout(\n            {\n                direction: itemDirection,\n                justify,\n                symbolSize,\n                symbolSpacing,\n                width: itemWidth,\n                height: itemHeight,\n            }\n        )\n\n        ctx.fillStyle = d.color ?? 'black'\n        ctx.fillRect(itemX + symbolX, itemY + symbolY, symbolSize, symbolSize)\n\n        ctx.textAlign = textAlignMapping[labelAnchor]\n\n        if (labelAlignment === 'central') {\n            ctx.textBaseline = 'middle'\n        }\n\n        ctx.fillStyle = itemTextColor ?? theme.legends.text.fill ?? 'black'\n        ctx.fillText(String(d.label), itemX + labelX, itemY + labelY)\n    })\n\n    ctx.restore()\n}\n\nexport const renderContinuousColorLegendToCanvas = (\n    ctx: CanvasRenderingContext2D,\n    {\n        containerWidth,\n        containerHeight,\n        anchor,\n        translateX = 0,\n        translateY = 0,\n        scale,\n        length = continuousColorsLegendDefaults.length,\n        thickness = continuousColorsLegendDefaults.thickness,\n        direction = continuousColorsLegendDefaults.direction,\n        ticks: _ticks,\n        tickPosition = continuousColorsLegendDefaults.tickPosition,\n        tickSize = continuousColorsLegendDefaults.tickSize,\n        tickSpacing = continuousColorsLegendDefaults.tickSpacing,\n        tickOverlap = continuousColorsLegendDefaults.tickOverlap,\n        tickFormat = continuousColorsLegendDefaults.tickFormat,\n        title,\n        titleAlign = continuousColorsLegendDefaults.titleAlign,\n        titleOffset = continuousColorsLegendDefaults.titleOffset,\n        theme,\n    }: AnchoredContinuousColorsLegendProps & {\n        theme: CompleteTheme\n    }\n) => {\n    const {\n        width,\n        height,\n        gradientX1,\n        gradientY1,\n        gradientX2,\n        gradientY2,\n        colorStops,\n        ticks,\n        titleText,\n        titleX,\n        titleY,\n        titleRotation,\n        titleVerticalAlign,\n        titleHorizontalAlign,\n    } = computeContinuousColorsLegend({\n        scale,\n        ticks: _ticks,\n        length,\n        thickness,\n        direction,\n        tickPosition,\n        tickSize,\n        tickSpacing,\n        tickOverlap,\n        tickFormat,\n        title,\n        titleAlign,\n        titleOffset,\n    })\n\n    const { x, y } = computePositionFromAnchor({\n        anchor,\n        translateX,\n        translateY,\n        containerWidth,\n        containerHeight,\n        width,\n        height,\n    })\n\n    const initialStyles = {\n        font: ctx.font,\n        textAlign: ctx.textAlign,\n        textBaseline: ctx.textBaseline,\n    }\n    ctx.save()\n\n    ctx.translate(x, y)\n\n    const gradient = ctx.createLinearGradient(\n        gradientX1 * width,\n        gradientY1 * height,\n        gradientX2 * width,\n        gradientY2 * height\n    )\n    colorStops.forEach(colorStop => {\n        gradient.addColorStop(colorStop.offset, colorStop.stopColor)\n    })\n\n    ctx.fillStyle = gradient\n    ctx.fillRect(0, 0, width, height)\n\n    ctx.font = `${\n        theme.legends.ticks.text.fontWeight ? `${theme.legends.ticks.text.fontWeight} ` : ''\n    }${theme.legends.ticks.text.fontSize}px ${theme.legends.ticks.text.fontFamily}`\n\n    ticks.forEach(tick => {\n        if ((theme.legends.ticks.line.strokeWidth ?? 0) > 0) {\n            ctx.lineWidth = Number(theme.axis.ticks.line.strokeWidth)\n            if (theme.axis.ticks.line.stroke) {\n                ctx.strokeStyle = theme.axis.ticks.line.stroke\n            }\n            ctx.lineCap = 'square'\n\n            ctx.beginPath()\n            ctx.moveTo(tick.x1, tick.y1)\n            ctx.lineTo(tick.x2, tick.y2)\n            ctx.stroke()\n        }\n\n        if (theme.legends.ticks.text.fill) {\n            ctx.fillStyle = theme.legends.ticks.text.fill\n        }\n        ctx.textAlign = tick.textHorizontalAlign === 'middle' ? 'center' : tick.textHorizontalAlign\n        ctx.textBaseline = tick.textVerticalAlign === 'central' ? 'middle' : tick.textVerticalAlign\n\n        ctx.fillText(tick.text, tick.textX, tick.textY)\n    })\n\n    if (titleText) {\n        ctx.save()\n        ctx.translate(titleX, titleY)\n        ctx.rotate(degreesToRadians(titleRotation))\n\n        ctx.font = `${\n            theme.legends.title.text.fontWeight ? `${theme.legends.title.text.fontWeight} ` : ''\n        }${theme.legends.title.text.fontSize}px ${theme.legends.title.text.fontFamily}`\n        if (theme.legends.title.text.fill) {\n            ctx.fillStyle = theme.legends.title.text.fill\n        }\n        ctx.textAlign = titleHorizontalAlign === 'middle' ? 'center' : titleHorizontalAlign\n        ctx.textBaseline = titleVerticalAlign\n\n        ctx.fillText(titleText, 0, 0)\n\n        ctx.restore()\n    }\n\n    ctx.restore()\n\n    ctx.font = initialStyles.font\n    ctx.textAlign = initialStyles.textAlign\n    ctx.textBaseline = initialStyles.textBaseline\n}\n", "import { useMemo } from 'react'\n\ntype Scale = {\n    (value: number): number\n    invertExtent: (value: number) => [number, number]\n    range: () => number[]\n}\n\nexport const useQuantizeColorScaleLegendData = ({\n    scale,\n    domain: overriddenDomain,\n    reverse = false,\n    valueFormat = v => v,\n    separator = ' - ',\n}: {\n    scale: Scale\n    domain?: number[]\n    reverse?: boolean\n    valueFormat?: <T, U>(value: T) => T | U\n    separator?: string\n}) => {\n    return useMemo(() => {\n        const domain = overriddenDomain ?? scale.range()\n\n        const items = domain.map((domainValue, index) => {\n            const [start, end] = scale.invertExtent(domainValue)\n\n            return {\n                id: domainValue,\n                index,\n                extent: [start, end],\n                label: `${valueFormat(start)}${separator}${valueFormat(end)}`,\n                value: scale(start),\n                color: domainValue,\n            }\n        })\n\n        if (reverse) items.reverse()\n\n        return items\n    }, [overriddenDomain, scale, reverse, separator, valueFormat])\n}\n", "import PropTypes from 'prop-types'\n\n/**\n * The prop type is exported as a simple object instead of `PropTypes.shape`\n * to be able to add extra properties.\n *\n * @example\n * ```javascript\n * import { LegendPropShape } from '@nivo/legends'\n *\n * const customLegendPropType = PropTypes.shape({\n *     ...LegendPropShape,\n *     extra: PropTypes.any.isRequired,\n * })\n * ```\n */\nexport const LegendPropShape = {\n    data: PropTypes.arrayOf(PropTypes.object),\n\n    // position & layout\n    anchor: PropTypes.oneOf([\n        'top',\n        'top-right',\n        'right',\n        'bottom-right',\n        'bottom',\n        'bottom-left',\n        'left',\n        'top-left',\n        'center',\n    ]).isRequired,\n    translateX: PropTypes.number,\n    translateY: PropTypes.number,\n    direction: PropTypes.oneOf(['row', 'column']).isRequired,\n\n    // item\n    itemsSpacing: PropTypes.number,\n    itemWidth: PropTypes.number.isRequired,\n    itemHeight: PropTypes.number.isRequired,\n    itemDirection: PropTypes.oneOf([\n        'left-to-right',\n        'right-to-left',\n        'top-to-bottom',\n        'bottom-to-top',\n    ]),\n    itemTextColor: PropTypes.string,\n    itemBackground: PropTypes.string,\n    itemOpacity: PropTypes.number,\n\n    symbolShape: PropTypes.oneOfType([\n        PropTypes.oneOf(['circle', 'diamond', 'square', 'triangle']),\n        PropTypes.func,\n    ]),\n    symbolSize: PropTypes.number,\n    symbolSpacing: PropTypes.number,\n    symbolBorderWidth: PropTypes.number,\n    symbolBorderColor: PropTypes.string,\n\n    onClick: PropTypes.func,\n    onMouseEnter: PropTypes.func,\n    onMouseLeave: PropTypes.func,\n\n    effects: PropTypes.arrayOf(\n        PropTypes.shape({\n            on: PropTypes.oneOfType([PropTypes.oneOf(['hover'])]).isRequired,\n            style: PropTypes.shape({\n                itemTextColor: PropTypes.string,\n                itemBackground: PropTypes.string,\n                itemOpacity: PropTypes.number,\n                symbolSize: PropTypes.number,\n                symbolBorderWidth: PropTypes.number,\n                symbolBorderColor: PropTypes.string,\n            }).isRequired,\n        })\n    ),\n}\n", "import { memo, useRef, PropsWithChildren, CSSProperties } from 'react'\nimport { useSpring, animated } from '@react-spring/web'\nimport {\n    useTheme,\n    useMotionConfig,\n    // @ts-ignore\n    useMeasure,\n} from '@nivo/core'\nimport { TooltipStateContextDataVisible } from './context'\n\nconst TOOLTIP_OFFSET = 14\n\nconst tooltipStyle = {\n    pointerEvents: 'none' as CSSProperties['pointerEvents'],\n    position: 'absolute' as CSSProperties['position'],\n    zIndex: 10,\n    top: 0,\n    left: 0,\n}\n\nconst translate = (x: number, y: number) => `translate(${x}px, ${y}px)`\n\ninterface TooltipWrapperProps {\n    position: TooltipStateContextDataVisible['position']\n    anchor: TooltipStateContextDataVisible['anchor']\n}\n\nexport const TooltipWrapper = memo<PropsWithChildren<TooltipWrapperProps>>(\n    ({ position, anchor, children }) => {\n        const theme = useTheme()\n        const { animate, config: springConfig } = useMotionConfig()\n        const [measureRef, bounds] = useMeasure()\n        const previousPosition = useRef<[number, number] | false>(false)\n\n        let to = undefined\n        let immediate = false\n        const hasDimension = bounds.width > 0 && bounds.height > 0\n\n        let x = Math.round(position[0])\n        let y = Math.round(position[1])\n\n        if (hasDimension) {\n            if (anchor === 'top') {\n                x -= bounds.width / 2\n                y -= bounds.height + TOOLTIP_OFFSET\n            } else if (anchor === 'right') {\n                x += TOOLTIP_OFFSET\n                y -= bounds.height / 2\n            } else if (anchor === 'bottom') {\n                x -= bounds.width / 2\n                y += TOOLTIP_OFFSET\n            } else if (anchor === 'left') {\n                x -= bounds.width + TOOLTIP_OFFSET\n                y -= bounds.height / 2\n            } else if (anchor === 'center') {\n                x -= bounds.width / 2\n                y -= bounds.height / 2\n            }\n\n            to = {\n                transform: translate(x, y),\n            }\n\n            if (!previousPosition.current) {\n                immediate = true\n            }\n\n            previousPosition.current = [x, y]\n        }\n\n        const animatedProps = useSpring<{\n            transform: string\n        }>({\n            to,\n            config: springConfig,\n            immediate: !animate || immediate,\n        })\n\n        const style = {\n            ...tooltipStyle,\n            ...theme.tooltip,\n            transform: animatedProps.transform ?? translate(x, y),\n        }\n\n        return (\n            <animated.div ref={measureRef} style={style}>\n                {children}\n            </animated.div>\n        )\n    }\n)\n\nTooltipWrapper.displayName = 'TooltipWrapper'\n", "import { CSSProperties, memo } from 'react'\n\ninterface ChipProps {\n    size?: number\n    color: string\n    style?: CSSProperties\n}\n\nexport const Chip = memo<ChipProps>(({ size = 12, color, style = {} }) => (\n    <span style={{ display: 'block', width: size, height: size, background: color, ...style }} />\n))\n", "import { memo, ReactNode } from 'react'\nimport { useTheme, ValueFormat, useValueFormatter } from '@nivo/core'\nimport { Chip } from './Chip'\n\nexport interface BasicTooltipProps {\n    id: ReactNode\n    value?: number | string | Date\n    format?: ValueFormat<number | string | Date>\n    color?: string\n    enableChip?: boolean\n    /**\n     * @deprecated This should be replaced by custom tooltip components.\n     */\n    renderContent?: () => JSX.Element\n}\n\nexport const BasicTooltip = memo<BasicTooltipProps>(\n    ({ id, value: _value, format, enableChip = false, color, renderContent }) => {\n        const theme = useTheme()\n        const formatValue = useValueFormatter<number | string | Date>(format)\n\n        let content: JSX.Element\n        if (typeof renderContent === 'function') {\n            content = renderContent()\n        } else {\n            let value = _value\n            if (formatValue !== undefined && value !== undefined) {\n                value = formatValue(value)\n            }\n            content = (\n                <div style={theme.tooltip.basic}>\n                    {enableChip && <Chip color={color!} style={theme.tooltip.chip} />}\n                    {value !== undefined ? (\n                        <span>\n                            {id}: <strong>{`${value}`}</strong>\n                        </span>\n                    ) : (\n                        id\n                    )}\n                </div>\n            )\n        }\n\n        return <div style={theme.tooltip.container}>{content}</div>\n    }\n)\n", "import { CSSProperties, memo, ReactNode } from 'react'\nimport { useTheme } from '@nivo/core'\n\nconst tableStyle = {\n    width: '100%',\n    borderCollapse: 'collapse' as CSSProperties['borderCollapse'],\n}\n\ninterface TableTooltipProps {\n    title?: ReactNode\n    renderContent?: () => JSX.Element\n    rows?: ReactNode[][]\n}\n\nexport const TableTooltip = memo(({ title, rows = [], renderContent }: TableTooltipProps) => {\n    const theme = useTheme()\n\n    if (!rows.length) return null\n\n    let content\n    if (typeof renderContent === 'function') {\n        content = renderContent()\n    } else {\n        content = (\n            <div>\n                {title && title}\n                <table style={{ ...tableStyle, ...theme.tooltip.table }}>\n                    <tbody>\n                        {rows.map((row, i) => (\n                            <tr key={i}>\n                                {row.map((column, j) => (\n                                    <td key={j} style={theme.tooltip.tableCell}>\n                                        {column}\n                                    </td>\n                                ))}\n                            </tr>\n                        ))}\n                    </tbody>\n                </table>\n            </div>\n        )\n    }\n\n    return <div style={theme.tooltip.container}>{content}</div>\n})\n\nTableTooltip.displayName = 'TableTooltip'\n", "import { CSSProperties, memo, useMemo } from 'react'\nimport { useSpring, animated } from '@react-spring/web'\nimport { useTheme, useMotionConfig } from '@nivo/core'\n\ninterface CrosshairLineProps {\n    x0: number\n    x1: number\n    y0: number\n    y1: number\n}\n\nexport const CrosshairLine = memo(({ x0, x1, y0, y1 }: CrosshairLineProps) => {\n    const theme = useTheme()\n    const { animate, config: springConfig } = useMotionConfig()\n    const style = useMemo(\n        () => ({\n            ...theme.crosshair.line,\n            pointerEvents: 'none' as CSSProperties['pointerEvents'],\n        }),\n        [theme.crosshair.line]\n    )\n\n    const animatedProps = useSpring({\n        x1: x0,\n        x2: x1,\n        y1: y0,\n        y2: y1,\n        config: springConfig,\n        immediate: !animate,\n    })\n\n    return <animated.line {...animatedProps} fill=\"none\" style={style} />\n})\n\nCrosshairLine.displayName = 'CrosshairLine'\n", "import { memo } from 'react'\nimport { CrosshairLine } from './CrosshairLine'\nimport { CrosshairType } from './types'\n\ninterface CrosshairProps {\n    width: number\n    height: number\n    type: CrosshairType\n    x: number\n    y: number\n}\n\nexport const Crosshair = memo(({ width, height, type, x, y }: CrosshairProps) => {\n    let xLine\n    let yLine\n    if (type === 'cross') {\n        xLine = { x0: x, x1: x, y0: 0, y1: height }\n        yLine = { x0: 0, x1: width, y0: y, y1: y }\n    } else if (type === 'top-left') {\n        xLine = { x0: x, x1: x, y0: 0, y1: y }\n        yLine = { x0: 0, x1: x, y0: y, y1: y }\n    } else if (type === 'top') {\n        xLine = { x0: x, x1: x, y0: 0, y1: y }\n    } else if (type === 'top-right') {\n        xLine = { x0: x, x1: x, y0: 0, y1: y }\n        yLine = { x0: x, x1: width, y0: y, y1: y }\n    } else if (type === 'right') {\n        yLine = { x0: x, x1: width, y0: y, y1: y }\n    } else if (type === 'bottom-right') {\n        xLine = { x0: x, x1: x, y0: y, y1: height }\n        yLine = { x0: x, x1: width, y0: y, y1: y }\n    } else if (type === 'bottom') {\n        xLine = { x0: x, x1: x, y0: y, y1: height }\n    } else if (type === 'bottom-left') {\n        xLine = { x0: x, x1: x, y0: y, y1: height }\n        yLine = { x0: 0, x1: x, y0: y, y1: y }\n    } else if (type === 'left') {\n        yLine = { x0: 0, x1: x, y0: y, y1: y }\n    } else if (type === 'x') {\n        xLine = { x0: x, x1: x, y0: 0, y1: height }\n    } else if (type === 'y') {\n        yLine = { x0: 0, x1: width, y0: y, y1: y }\n    }\n\n    return (\n        <>\n            {xLine && <CrosshairLine x0={xLine.x0} x1={xLine.x1} y0={xLine.y0} y1={xLine.y1} />}\n            {yLine && <CrosshairLine x0={yLine.x0} x1={yLine.x1} y0={yLine.y0} y1={yLine.y1} />}\n        </>\n    )\n})\n\nCrosshair.displayName = 'Crosshair'\n", "import { createContext, MouseEvent } from 'react'\nimport { TooltipAnchor } from './types'\n\nexport interface TooltipActionsContextData {\n    showTooltipAt: (\n        content: JSX.Element,\n        position: [number, number],\n        anchor?: TooltipAnchor\n    ) => void\n    showTooltipFromEvent: (content: JSX.Element, event: MouseEvent, anchor?: TooltipAnchor) => void\n    hideTooltip: () => void\n}\n\nconst defaultActions: TooltipActionsContextData = {\n    showTooltipAt: () => {},\n    showTooltipFromEvent: () => {},\n    hideTooltip: () => {},\n}\n\nexport const TooltipActionsContext = createContext<TooltipActionsContextData>(defaultActions)\n\nexport interface TooltipStateContextDataVisible {\n    isVisible: true\n    position: [number, number]\n    content: JSX.Element\n    anchor: TooltipAnchor\n}\n\nexport interface TooltipStateContextDataHidden {\n    isVisible: false\n    position: [null, null]\n    content: null\n    anchor: null\n}\n\nexport type TooltipStateContextData = TooltipStateContextDataVisible | TooltipStateContextDataHidden\n\nexport const hiddenTooltipState: TooltipStateContextDataHidden = {\n    isVisible: false,\n    position: [null, null],\n    content: null,\n    anchor: null,\n}\n\nexport const TooltipStateContext = createContext<TooltipStateContextData>(hiddenTooltipState)\n", "import { useState, useContext, useCallback, MutableRefObject, MouseEvent, useMemo } from 'react'\nimport {\n    TooltipActionsContext,\n    TooltipActionsContextData,\n    TooltipStateContext,\n    TooltipStateContextData,\n    hiddenTooltipState,\n} from './context'\nimport { TooltipAnchor } from './types'\n\nexport const useTooltipHandlers = (container: MutableRefObject<HTMLDivElement>) => {\n    const [state, setState] = useState<TooltipStateContextData>(hiddenTooltipState)\n\n    const showTooltipAt: TooltipActionsContextData['showTooltipAt'] = useCallback(\n        (content: JSX.Element, [x, y]: [number, number], anchor: TooltipAnchor = 'top') => {\n            setState({\n                isVisible: true,\n                position: [x, y],\n                anchor,\n                content,\n            })\n        },\n        [setState]\n    )\n\n    const showTooltipFromEvent: TooltipActionsContextData['showTooltipFromEvent'] = useCallback(\n        (content: JSX.Element, event: MouseEvent, anchor: TooltipAnchor = 'top') => {\n            const bounds = container.current.getBoundingClientRect()\n            const x = event.clientX - bounds.left\n            const y = event.clientY - bounds.top\n\n            if (anchor === 'left' || anchor === 'right') {\n                if (x < bounds.width / 2) anchor = 'right'\n                else anchor = 'left'\n            }\n\n            setState({\n                isVisible: true,\n                position: [x, y],\n                anchor,\n                content,\n            })\n        },\n        [container, setState]\n    )\n\n    const hideTooltip = useCallback(() => {\n        setState(hiddenTooltipState)\n    }, [setState])\n\n    const actions: TooltipActionsContextData = useMemo(() => {\n        return {\n            showTooltipAt,\n            showTooltipFromEvent,\n            hideTooltip,\n        }\n    }, [showTooltipAt, showTooltipFromEvent, hideTooltip])\n\n    return {\n        actions,\n        state,\n    }\n}\n\nexport const useTooltip = () => {\n    const context = useContext(TooltipActionsContext)\n    if (context === undefined) {\n        throw new Error('useTooltip must be used within a TooltipProvider')\n    }\n\n    return context\n}\n\nexport const useTooltipState = () => {\n    const context = useContext(TooltipStateContext)\n    if (context === undefined) {\n        throw new Error('useTooltipState must be used within a TooltipProvider')\n    }\n\n    return context\n}\n", "import { useTooltipState } from './hooks'\nimport { TooltipWrapper } from './TooltipWrapper'\nimport { TooltipStateContextData, TooltipStateContextDataVisible } from './context'\n\nexport const isVisibleTooltipState = (\n    state: TooltipStateContextData\n): state is TooltipStateContextDataVisible => state.isVisible\n\nexport const Tooltip = () => {\n    const state = useTooltipState()\n\n    if (!isVisibleTooltipState(state)) {\n        return null\n    }\n\n    return (\n        <TooltipWrapper position={state.position} anchor={state.anchor}>\n            {state.content}\n        </TooltipWrapper>\n    )\n}\n", "import { PropsWithChildren, MutableRefObject } from 'react'\nimport { TooltipActionsContext, TooltipStateContext } from './context'\nimport { useTooltipHandlers } from './hooks'\n\ninterface TooltipProviderProps {\n    container: MutableRefObject<HTMLDivElement>\n}\n\nexport const TooltipProvider = ({\n    container,\n    children,\n}: PropsWithChildren<TooltipProviderProps>) => {\n    const { actions, state } = useTooltipHandlers(container)\n\n    return (\n        <TooltipActionsContext.Provider value={actions}>\n            <TooltipStateContext.Provider value={state}>{children}</TooltipStateContext.Provider>\n        </TooltipActionsContext.Provider>\n    )\n}\n", "\nconst EPSILON = Math.pow(2, -52);\nconst EDGE_STACK = new Uint32Array(512);\n\nexport default class Delaunator {\n\n    static from(points, getX = defaultGetX, getY = defaultGetY) {\n        const n = points.length;\n        const coords = new Float64Array(n * 2);\n\n        for (let i = 0; i < n; i++) {\n            const p = points[i];\n            coords[2 * i] = getX(p);\n            coords[2 * i + 1] = getY(p);\n        }\n\n        return new Delaunator(coords);\n    }\n\n    constructor(coords) {\n        const n = coords.length >> 1;\n        if (n > 0 && typeof coords[0] !== 'number') throw new Error('Expected coords to contain numbers.');\n\n        this.coords = coords;\n\n        // arrays that will store the triangulation graph\n        const maxTriangles = Math.max(2 * n - 5, 0);\n        this._triangles = new Uint32Array(maxTriangles * 3);\n        this._halfedges = new Int32Array(maxTriangles * 3);\n\n        // temporary arrays for tracking the edges of the advancing convex hull\n        this._hashSize = Math.ceil(Math.sqrt(n));\n        this._hullPrev = new Uint32Array(n); // edge to prev edge\n        this._hullNext = new Uint32Array(n); // edge to next edge\n        this._hullTri = new Uint32Array(n); // edge to adjacent triangle\n        this._hullHash = new Int32Array(this._hashSize).fill(-1); // angular edge hash\n\n        // temporary arrays for sorting points\n        this._ids = new Uint32Array(n);\n        this._dists = new Float64Array(n);\n\n        this.update();\n    }\n\n    update() {\n        const {coords, _hullPrev: hullPrev, _hullNext: hullNext, _hullTri: hullTri, _hullHash: hullHash} =  this;\n        const n = coords.length >> 1;\n\n        // populate an array of point indices; calculate input data bbox\n        let minX = Infinity;\n        let minY = Infinity;\n        let maxX = -Infinity;\n        let maxY = -Infinity;\n\n        for (let i = 0; i < n; i++) {\n            const x = coords[2 * i];\n            const y = coords[2 * i + 1];\n            if (x < minX) minX = x;\n            if (y < minY) minY = y;\n            if (x > maxX) maxX = x;\n            if (y > maxY) maxY = y;\n            this._ids[i] = i;\n        }\n        const cx = (minX + maxX) / 2;\n        const cy = (minY + maxY) / 2;\n\n        let minDist = Infinity;\n        let i0, i1, i2;\n\n        // pick a seed point close to the center\n        for (let i = 0; i < n; i++) {\n            const d = dist(cx, cy, coords[2 * i], coords[2 * i + 1]);\n            if (d < minDist) {\n                i0 = i;\n                minDist = d;\n            }\n        }\n        const i0x = coords[2 * i0];\n        const i0y = coords[2 * i0 + 1];\n\n        minDist = Infinity;\n\n        // find the point closest to the seed\n        for (let i = 0; i < n; i++) {\n            if (i === i0) continue;\n            const d = dist(i0x, i0y, coords[2 * i], coords[2 * i + 1]);\n            if (d < minDist && d > 0) {\n                i1 = i;\n                minDist = d;\n            }\n        }\n        let i1x = coords[2 * i1];\n        let i1y = coords[2 * i1 + 1];\n\n        let minRadius = Infinity;\n\n        // find the third point which forms the smallest circumcircle with the first two\n        for (let i = 0; i < n; i++) {\n            if (i === i0 || i === i1) continue;\n            const r = circumradius(i0x, i0y, i1x, i1y, coords[2 * i], coords[2 * i + 1]);\n            if (r < minRadius) {\n                i2 = i;\n                minRadius = r;\n            }\n        }\n        let i2x = coords[2 * i2];\n        let i2y = coords[2 * i2 + 1];\n\n        if (minRadius === Infinity) {\n            // order collinear points by dx (or dy if all x are identical)\n            // and return the list as a hull\n            for (let i = 0; i < n; i++) {\n                this._dists[i] = (coords[2 * i] - coords[0]) || (coords[2 * i + 1] - coords[1]);\n            }\n            quicksort(this._ids, this._dists, 0, n - 1);\n            const hull = new Uint32Array(n);\n            let j = 0;\n            for (let i = 0, d0 = -Infinity; i < n; i++) {\n                const id = this._ids[i];\n                if (this._dists[id] > d0) {\n                    hull[j++] = id;\n                    d0 = this._dists[id];\n                }\n            }\n            this.hull = hull.subarray(0, j);\n            this.triangles = new Uint32Array(0);\n            this.halfedges = new Uint32Array(0);\n            return;\n        }\n\n        // swap the order of the seed points for counter-clockwise orientation\n        if (orient(i0x, i0y, i1x, i1y, i2x, i2y)) {\n            const i = i1;\n            const x = i1x;\n            const y = i1y;\n            i1 = i2;\n            i1x = i2x;\n            i1y = i2y;\n            i2 = i;\n            i2x = x;\n            i2y = y;\n        }\n\n        const center = circumcenter(i0x, i0y, i1x, i1y, i2x, i2y);\n        this._cx = center.x;\n        this._cy = center.y;\n\n        for (let i = 0; i < n; i++) {\n            this._dists[i] = dist(coords[2 * i], coords[2 * i + 1], center.x, center.y);\n        }\n\n        // sort the points by distance from the seed triangle circumcenter\n        quicksort(this._ids, this._dists, 0, n - 1);\n\n        // set up the seed triangle as the starting hull\n        this._hullStart = i0;\n        let hullSize = 3;\n\n        hullNext[i0] = hullPrev[i2] = i1;\n        hullNext[i1] = hullPrev[i0] = i2;\n        hullNext[i2] = hullPrev[i1] = i0;\n\n        hullTri[i0] = 0;\n        hullTri[i1] = 1;\n        hullTri[i2] = 2;\n\n        hullHash.fill(-1);\n        hullHash[this._hashKey(i0x, i0y)] = i0;\n        hullHash[this._hashKey(i1x, i1y)] = i1;\n        hullHash[this._hashKey(i2x, i2y)] = i2;\n\n        this.trianglesLen = 0;\n        this._addTriangle(i0, i1, i2, -1, -1, -1);\n\n        for (let k = 0, xp, yp; k < this._ids.length; k++) {\n            const i = this._ids[k];\n            const x = coords[2 * i];\n            const y = coords[2 * i + 1];\n\n            // skip near-duplicate points\n            if (k > 0 && Math.abs(x - xp) <= EPSILON && Math.abs(y - yp) <= EPSILON) continue;\n            xp = x;\n            yp = y;\n\n            // skip seed triangle points\n            if (i === i0 || i === i1 || i === i2) continue;\n\n            // find a visible edge on the convex hull using edge hash\n            let start = 0;\n            for (let j = 0, key = this._hashKey(x, y); j < this._hashSize; j++) {\n                start = hullHash[(key + j) % this._hashSize];\n                if (start !== -1 && start !== hullNext[start]) break;\n            }\n\n            start = hullPrev[start];\n            let e = start, q;\n            while (q = hullNext[e], !orient(x, y, coords[2 * e], coords[2 * e + 1], coords[2 * q], coords[2 * q + 1])) {\n                e = q;\n                if (e === start) {\n                    e = -1;\n                    break;\n                }\n            }\n            if (e === -1) continue; // likely a near-duplicate point; skip it\n\n            // add the first triangle from the point\n            let t = this._addTriangle(e, i, hullNext[e], -1, -1, hullTri[e]);\n\n            // recursively flip triangles from the point until they satisfy the Delaunay condition\n            hullTri[i] = this._legalize(t + 2);\n            hullTri[e] = t; // keep track of boundary triangles on the hull\n            hullSize++;\n\n            // walk forward through the hull, adding more triangles and flipping recursively\n            let n = hullNext[e];\n            while (q = hullNext[n], orient(x, y, coords[2 * n], coords[2 * n + 1], coords[2 * q], coords[2 * q + 1])) {\n                t = this._addTriangle(n, i, q, hullTri[i], -1, hullTri[n]);\n                hullTri[i] = this._legalize(t + 2);\n                hullNext[n] = n; // mark as removed\n                hullSize--;\n                n = q;\n            }\n\n            // walk backward from the other side, adding more triangles and flipping\n            if (e === start) {\n                while (q = hullPrev[e], orient(x, y, coords[2 * q], coords[2 * q + 1], coords[2 * e], coords[2 * e + 1])) {\n                    t = this._addTriangle(q, i, e, -1, hullTri[e], hullTri[q]);\n                    this._legalize(t + 2);\n                    hullTri[q] = t;\n                    hullNext[e] = e; // mark as removed\n                    hullSize--;\n                    e = q;\n                }\n            }\n\n            // update the hull indices\n            this._hullStart = hullPrev[i] = e;\n            hullNext[e] = hullPrev[n] = i;\n            hullNext[i] = n;\n\n            // save the two new edges in the hash table\n            hullHash[this._hashKey(x, y)] = i;\n            hullHash[this._hashKey(coords[2 * e], coords[2 * e + 1])] = e;\n        }\n\n        this.hull = new Uint32Array(hullSize);\n        for (let i = 0, e = this._hullStart; i < hullSize; i++) {\n            this.hull[i] = e;\n            e = hullNext[e];\n        }\n\n        // trim typed triangle mesh arrays\n        this.triangles = this._triangles.subarray(0, this.trianglesLen);\n        this.halfedges = this._halfedges.subarray(0, this.trianglesLen);\n    }\n\n    _hashKey(x, y) {\n        return Math.floor(pseudoAngle(x - this._cx, y - this._cy) * this._hashSize) % this._hashSize;\n    }\n\n    _legalize(a) {\n        const {_triangles: triangles, _halfedges: halfedges, coords} = this;\n\n        let i = 0;\n        let ar = 0;\n\n        // recursion eliminated with a fixed-size stack\n        while (true) {\n            const b = halfedges[a];\n\n            /* if the pair of triangles doesn't satisfy the Delaunay condition\n             * (p1 is inside the circumcircle of [p0, pl, pr]), flip them,\n             * then do the same check/flip recursively for the new pair of triangles\n             *\n             *           pl                    pl\n             *          /||\\                  /  \\\n             *       al/ || \\bl            al/    \\a\n             *        /  ||  \\              /      \\\n             *       /  a||b  \\    flip    /___ar___\\\n             *     p0\\   ||   /p1   =>   p0\\---bl---/p1\n             *        \\  ||  /              \\      /\n             *       ar\\ || /br             b\\    /br\n             *          \\||/                  \\  /\n             *           pr                    pr\n             */\n            const a0 = a - a % 3;\n            ar = a0 + (a + 2) % 3;\n\n            if (b === -1) { // convex hull edge\n                if (i === 0) break;\n                a = EDGE_STACK[--i];\n                continue;\n            }\n\n            const b0 = b - b % 3;\n            const al = a0 + (a + 1) % 3;\n            const bl = b0 + (b + 2) % 3;\n\n            const p0 = triangles[ar];\n            const pr = triangles[a];\n            const pl = triangles[al];\n            const p1 = triangles[bl];\n\n            const illegal = inCircle(\n                coords[2 * p0], coords[2 * p0 + 1],\n                coords[2 * pr], coords[2 * pr + 1],\n                coords[2 * pl], coords[2 * pl + 1],\n                coords[2 * p1], coords[2 * p1 + 1]);\n\n            if (illegal) {\n                triangles[a] = p1;\n                triangles[b] = p0;\n\n                const hbl = halfedges[bl];\n\n                // edge swapped on the other side of the hull (rare); fix the halfedge reference\n                if (hbl === -1) {\n                    let e = this._hullStart;\n                    do {\n                        if (this._hullTri[e] === bl) {\n                            this._hullTri[e] = a;\n                            break;\n                        }\n                        e = this._hullPrev[e];\n                    } while (e !== this._hullStart);\n                }\n                this._link(a, hbl);\n                this._link(b, halfedges[ar]);\n                this._link(ar, bl);\n\n                const br = b0 + (b + 1) % 3;\n\n                // don't worry about hitting the cap: it can only happen on extremely degenerate input\n                if (i < EDGE_STACK.length) {\n                    EDGE_STACK[i++] = br;\n                }\n            } else {\n                if (i === 0) break;\n                a = EDGE_STACK[--i];\n            }\n        }\n\n        return ar;\n    }\n\n    _link(a, b) {\n        this._halfedges[a] = b;\n        if (b !== -1) this._halfedges[b] = a;\n    }\n\n    // add a new triangle given vertex indices and adjacent half-edge ids\n    _addTriangle(i0, i1, i2, a, b, c) {\n        const t = this.trianglesLen;\n\n        this._triangles[t] = i0;\n        this._triangles[t + 1] = i1;\n        this._triangles[t + 2] = i2;\n\n        this._link(t, a);\n        this._link(t + 1, b);\n        this._link(t + 2, c);\n\n        this.trianglesLen += 3;\n\n        return t;\n    }\n}\n\n// monotonically increases with real angle, but doesn't need expensive trigonometry\nfunction pseudoAngle(dx, dy) {\n    const p = dx / (Math.abs(dx) + Math.abs(dy));\n    return (dy > 0 ? 3 - p : 1 + p) / 4; // [0..1]\n}\n\nfunction dist(ax, ay, bx, by) {\n    const dx = ax - bx;\n    const dy = ay - by;\n    return dx * dx + dy * dy;\n}\n\n// return 2d orientation sign if we're confident in it through J. Shewchuk's error bound check\nfunction orientIfSure(px, py, rx, ry, qx, qy) {\n    const l = (ry - py) * (qx - px);\n    const r = (rx - px) * (qy - py);\n    return Math.abs(l - r) >= 3.3306690738754716e-16 * Math.abs(l + r) ? l - r : 0;\n}\n\n// a more robust orientation test that's stable in a given triangle (to fix robustness issues)\nfunction orient(rx, ry, qx, qy, px, py) {\n    const sign = orientIfSure(px, py, rx, ry, qx, qy) ||\n    orientIfSure(rx, ry, qx, qy, px, py) ||\n    orientIfSure(qx, qy, px, py, rx, ry);\n    return sign < 0;\n}\n\nfunction inCircle(ax, ay, bx, by, cx, cy, px, py) {\n    const dx = ax - px;\n    const dy = ay - py;\n    const ex = bx - px;\n    const ey = by - py;\n    const fx = cx - px;\n    const fy = cy - py;\n\n    const ap = dx * dx + dy * dy;\n    const bp = ex * ex + ey * ey;\n    const cp = fx * fx + fy * fy;\n\n    return dx * (ey * cp - bp * fy) -\n           dy * (ex * cp - bp * fx) +\n           ap * (ex * fy - ey * fx) < 0;\n}\n\nfunction circumradius(ax, ay, bx, by, cx, cy) {\n    const dx = bx - ax;\n    const dy = by - ay;\n    const ex = cx - ax;\n    const ey = cy - ay;\n\n    const bl = dx * dx + dy * dy;\n    const cl = ex * ex + ey * ey;\n    const d = 0.5 / (dx * ey - dy * ex);\n\n    const x = (ey * bl - dy * cl) * d;\n    const y = (dx * cl - ex * bl) * d;\n\n    return x * x + y * y;\n}\n\nfunction circumcenter(ax, ay, bx, by, cx, cy) {\n    const dx = bx - ax;\n    const dy = by - ay;\n    const ex = cx - ax;\n    const ey = cy - ay;\n\n    const bl = dx * dx + dy * dy;\n    const cl = ex * ex + ey * ey;\n    const d = 0.5 / (dx * ey - dy * ex);\n\n    const x = ax + (ey * bl - dy * cl) * d;\n    const y = ay + (dx * cl - ex * bl) * d;\n\n    return {x, y};\n}\n\nfunction quicksort(ids, dists, left, right) {\n    if (right - left <= 20) {\n        for (let i = left + 1; i <= right; i++) {\n            const temp = ids[i];\n            const tempDist = dists[temp];\n            let j = i - 1;\n            while (j >= left && dists[ids[j]] > tempDist) ids[j + 1] = ids[j--];\n            ids[j + 1] = temp;\n        }\n    } else {\n        const median = (left + right) >> 1;\n        let i = left + 1;\n        let j = right;\n        swap(ids, median, i);\n        if (dists[ids[left]] > dists[ids[right]]) swap(ids, left, right);\n        if (dists[ids[i]] > dists[ids[right]]) swap(ids, i, right);\n        if (dists[ids[left]] > dists[ids[i]]) swap(ids, left, i);\n\n        const temp = ids[i];\n        const tempDist = dists[temp];\n        while (true) {\n            do i++; while (dists[ids[i]] < tempDist);\n            do j--; while (dists[ids[j]] > tempDist);\n            if (j < i) break;\n            swap(ids, i, j);\n        }\n        ids[left + 1] = ids[j];\n        ids[j] = temp;\n\n        if (right - i + 1 >= j - left) {\n            quicksort(ids, dists, i, right);\n            quicksort(ids, dists, left, j - 1);\n        } else {\n            quicksort(ids, dists, left, j - 1);\n            quicksort(ids, dists, i, right);\n        }\n    }\n}\n\nfunction swap(arr, i, j) {\n    const tmp = arr[i];\n    arr[i] = arr[j];\n    arr[j] = tmp;\n}\n\nfunction defaultGetX(p) {\n    return p[0];\n}\nfunction defaultGetY(p) {\n    return p[1];\n}\n", "const epsilon = 1e-6;\n\nexport default class Path {\n  constructor() {\n    this._x0 = this._y0 = // start of current subpath\n    this._x1 = this._y1 = null; // end of current subpath\n    this._ = \"\";\n  }\n  moveTo(x, y) {\n    this._ += `M${this._x0 = this._x1 = +x},${this._y0 = this._y1 = +y}`;\n  }\n  closePath() {\n    if (this._x1 !== null) {\n      this._x1 = this._x0, this._y1 = this._y0;\n      this._ += \"Z\";\n    }\n  }\n  lineTo(x, y) {\n    this._ += `L${this._x1 = +x},${this._y1 = +y}`;\n  }\n  arc(x, y, r) {\n    x = +x, y = +y, r = +r;\n    const x0 = x + r;\n    const y0 = y;\n    if (r < 0) throw new Error(\"negative radius\");\n    if (this._x1 === null) this._ += `M${x0},${y0}`;\n    else if (Math.abs(this._x1 - x0) > epsilon || Math.abs(this._y1 - y0) > epsilon) this._ += \"L\" + x0 + \",\" + y0;\n    if (!r) return;\n    this._ += `A${r},${r},0,1,1,${x - r},${y}A${r},${r},0,1,1,${this._x1 = x0},${this._y1 = y0}`;\n  }\n  rect(x, y, w, h) {\n    this._ += `M${this._x0 = this._x1 = +x},${this._y0 = this._y1 = +y}h${+w}v${+h}h${-w}Z`;\n  }\n  value() {\n    return this._ || null;\n  }\n}\n", "export default class Polygon {\n  constructor() {\n    this._ = [];\n  }\n  moveTo(x, y) {\n    this._.push([x, y]);\n  }\n  closePath() {\n    this._.push(this._[0].slice());\n  }\n  lineTo(x, y) {\n    this._.push([x, y]);\n  }\n  value() {\n    return this._.length ? this._ : null;\n  }\n}\n", "import Path from \"./path.js\";\nimport Polygon from \"./polygon.js\";\n\nexport default class Voronoi {\n  constructor(delaunay, [xmin, ymin, xmax, ymax] = [0, 0, 960, 500]) {\n    if (!((xmax = +xmax) >= (xmin = +xmin)) || !((ymax = +ymax) >= (ymin = +ymin))) throw new Error(\"invalid bounds\");\n    this.delaunay = delaunay;\n    this._circumcenters = new Float64Array(delaunay.points.length * 2);\n    this.vectors = new Float64Array(delaunay.points.length * 2);\n    this.xmax = xmax, this.xmin = xmin;\n    this.ymax = ymax, this.ymin = ymin;\n    this._init();\n  }\n  update() {\n    this.delaunay.update();\n    this._init();\n    return this;\n  }\n  _init() {\n    const {delaunay: {points, hull, triangles}, vectors} = this;\n\n    // Compute circumcenters.\n    const circumcenters = this.circumcenters = this._circumcenters.subarray(0, triangles.length / 3 * 2);\n    for (let i = 0, j = 0, n = triangles.length, x, y; i < n; i += 3, j += 2) {\n      const t1 = triangles[i] * 2;\n      const t2 = triangles[i + 1] * 2;\n      const t3 = triangles[i + 2] * 2;\n      const x1 = points[t1];\n      const y1 = points[t1 + 1];\n      const x2 = points[t2];\n      const y2 = points[t2 + 1];\n      const x3 = points[t3];\n      const y3 = points[t3 + 1];\n\n      const dx = x2 - x1;\n      const dy = y2 - y1;\n      const ex = x3 - x1;\n      const ey = y3 - y1;\n      const bl = dx * dx + dy * dy;\n      const cl = ex * ex + ey * ey;\n      const ab = (dx * ey - dy * ex) * 2;\n\n      if (!ab) {\n        // degenerate case (collinear diagram)\n        x = (x1 + x3) / 2 - 1e8 * ey;\n        y = (y1 + y3) / 2 + 1e8 * ex;\n      }\n      else if (Math.abs(ab) < 1e-8) {\n        // almost equal points (degenerate triangle)\n        x = (x1 + x3) / 2;\n        y = (y1 + y3) / 2;\n      } else {\n        const d = 1 / ab;\n        x = x1 + (ey * bl - dy * cl) * d;\n        y = y1 + (dx * cl - ex * bl) * d;\n      }\n      circumcenters[j] = x;\n      circumcenters[j + 1] = y;\n    }\n\n    // Compute exterior cell rays.\n    let h = hull[hull.length - 1];\n    let p0, p1 = h * 4;\n    let x0, x1 = points[2 * h];\n    let y0, y1 = points[2 * h + 1];\n    vectors.fill(0);\n    for (let i = 0; i < hull.length; ++i) {\n      h = hull[i];\n      p0 = p1, x0 = x1, y0 = y1;\n      p1 = h * 4, x1 = points[2 * h], y1 = points[2 * h + 1];\n      vectors[p0 + 2] = vectors[p1] = y0 - y1;\n      vectors[p0 + 3] = vectors[p1 + 1] = x1 - x0;\n    }\n  }\n  render(context) {\n    const buffer = context == null ? context = new Path : undefined;\n    const {delaunay: {halfedges, inedges, hull}, circumcenters, vectors} = this;\n    if (hull.length <= 1) return null;\n    for (let i = 0, n = halfedges.length; i < n; ++i) {\n      const j = halfedges[i];\n      if (j < i) continue;\n      const ti = Math.floor(i / 3) * 2;\n      const tj = Math.floor(j / 3) * 2;\n      const xi = circumcenters[ti];\n      const yi = circumcenters[ti + 1];\n      const xj = circumcenters[tj];\n      const yj = circumcenters[tj + 1];\n      this._renderSegment(xi, yi, xj, yj, context);\n    }\n    let h0, h1 = hull[hull.length - 1];\n    for (let i = 0; i < hull.length; ++i) {\n      h0 = h1, h1 = hull[i];\n      const t = Math.floor(inedges[h1] / 3) * 2;\n      const x = circumcenters[t];\n      const y = circumcenters[t + 1];\n      const v = h0 * 4;\n      const p = this._project(x, y, vectors[v + 2], vectors[v + 3]);\n      if (p) this._renderSegment(x, y, p[0], p[1], context);\n    }\n    return buffer && buffer.value();\n  }\n  renderBounds(context) {\n    const buffer = context == null ? context = new Path : undefined;\n    context.rect(this.xmin, this.ymin, this.xmax - this.xmin, this.ymax - this.ymin);\n    return buffer && buffer.value();\n  }\n  renderCell(i, context) {\n    const buffer = context == null ? context = new Path : undefined;\n    const points = this._clip(i);\n    if (points === null || !points.length) return;\n    context.moveTo(points[0], points[1]);\n    let n = points.length;\n    while (points[0] === points[n-2] && points[1] === points[n-1] && n > 1) n -= 2;\n    for (let i = 2; i < n; i += 2) {\n      if (points[i] !== points[i-2] || points[i+1] !== points[i-1])\n        context.lineTo(points[i], points[i + 1]);\n    }\n    context.closePath();\n    return buffer && buffer.value();\n  }\n  *cellPolygons() {\n    const {delaunay: {points}} = this;\n    for (let i = 0, n = points.length / 2; i < n; ++i) {\n      const cell = this.cellPolygon(i);\n      if (cell) cell.index = i, yield cell;\n    }\n  }\n  cellPolygon(i) {\n    const polygon = new Polygon;\n    this.renderCell(i, polygon);\n    return polygon.value();\n  }\n  _renderSegment(x0, y0, x1, y1, context) {\n    let S;\n    const c0 = this._regioncode(x0, y0);\n    const c1 = this._regioncode(x1, y1);\n    if (c0 === 0 && c1 === 0) {\n      context.moveTo(x0, y0);\n      context.lineTo(x1, y1);\n    } else if (S = this._clipSegment(x0, y0, x1, y1, c0, c1)) {\n      context.moveTo(S[0], S[1]);\n      context.lineTo(S[2], S[3]);\n    }\n  }\n  contains(i, x, y) {\n    if ((x = +x, x !== x) || (y = +y, y !== y)) return false;\n    return this.delaunay._step(i, x, y) === i;\n  }\n  *neighbors(i) {\n    const ci = this._clip(i);\n    if (ci) for (const j of this.delaunay.neighbors(i)) {\n      const cj = this._clip(j);\n      // find the common edge\n      if (cj) loop: for (let ai = 0, li = ci.length; ai < li; ai += 2) {\n        for (let aj = 0, lj = cj.length; aj < lj; aj += 2) {\n          if (ci[ai] == cj[aj]\n          && ci[ai + 1] == cj[aj + 1]\n          && ci[(ai + 2) % li] == cj[(aj + lj - 2) % lj]\n          && ci[(ai + 3) % li] == cj[(aj + lj - 1) % lj]\n          ) {\n            yield j;\n            break loop;\n          }\n        }\n      }\n    }\n  }\n  _cell(i) {\n    const {circumcenters, delaunay: {inedges, halfedges, triangles}} = this;\n    const e0 = inedges[i];\n    if (e0 === -1) return null; // coincident point\n    const points = [];\n    let e = e0;\n    do {\n      const t = Math.floor(e / 3);\n      points.push(circumcenters[t * 2], circumcenters[t * 2 + 1]);\n      e = e % 3 === 2 ? e - 2 : e + 1;\n      if (triangles[e] !== i) break; // bad triangulation\n      e = halfedges[e];\n    } while (e !== e0 && e !== -1);\n    return points;\n  }\n  _clip(i) {\n    // degenerate case (1 valid point: return the box)\n    if (i === 0 && this.delaunay.hull.length === 1) {\n      return [this.xmax, this.ymin, this.xmax, this.ymax, this.xmin, this.ymax, this.xmin, this.ymin];\n    }\n    const points = this._cell(i);\n    if (points === null) return null;\n    const {vectors: V} = this;\n    const v = i * 4;\n    return V[v] || V[v + 1]\n        ? this._clipInfinite(i, points, V[v], V[v + 1], V[v + 2], V[v + 3])\n        : this._clipFinite(i, points);\n  }\n  _clipFinite(i, points) {\n    const n = points.length;\n    let P = null;\n    let x0, y0, x1 = points[n - 2], y1 = points[n - 1];\n    let c0, c1 = this._regioncode(x1, y1);\n    let e0, e1;\n    for (let j = 0; j < n; j += 2) {\n      x0 = x1, y0 = y1, x1 = points[j], y1 = points[j + 1];\n      c0 = c1, c1 = this._regioncode(x1, y1);\n      if (c0 === 0 && c1 === 0) {\n        e0 = e1, e1 = 0;\n        if (P) P.push(x1, y1);\n        else P = [x1, y1];\n      } else {\n        let S, sx0, sy0, sx1, sy1;\n        if (c0 === 0) {\n          if ((S = this._clipSegment(x0, y0, x1, y1, c0, c1)) === null) continue;\n          [sx0, sy0, sx1, sy1] = S;\n        } else {\n          if ((S = this._clipSegment(x1, y1, x0, y0, c1, c0)) === null) continue;\n          [sx1, sy1, sx0, sy0] = S;\n          e0 = e1, e1 = this._edgecode(sx0, sy0);\n          if (e0 && e1) this._edge(i, e0, e1, P, P.length);\n          if (P) P.push(sx0, sy0);\n          else P = [sx0, sy0];\n        }\n        e0 = e1, e1 = this._edgecode(sx1, sy1);\n        if (e0 && e1) this._edge(i, e0, e1, P, P.length);\n        if (P) P.push(sx1, sy1);\n        else P = [sx1, sy1];\n      }\n    }\n    if (P) {\n      e0 = e1, e1 = this._edgecode(P[0], P[1]);\n      if (e0 && e1) this._edge(i, e0, e1, P, P.length);\n    } else if (this.contains(i, (this.xmin + this.xmax) / 2, (this.ymin + this.ymax) / 2)) {\n      return [this.xmax, this.ymin, this.xmax, this.ymax, this.xmin, this.ymax, this.xmin, this.ymin];\n    }\n    return P;\n  }\n  _clipSegment(x0, y0, x1, y1, c0, c1) {\n    while (true) {\n      if (c0 === 0 && c1 === 0) return [x0, y0, x1, y1];\n      if (c0 & c1) return null;\n      let x, y, c = c0 || c1;\n      if (c & 0b1000) x = x0 + (x1 - x0) * (this.ymax - y0) / (y1 - y0), y = this.ymax;\n      else if (c & 0b0100) x = x0 + (x1 - x0) * (this.ymin - y0) / (y1 - y0), y = this.ymin;\n      else if (c & 0b0010) y = y0 + (y1 - y0) * (this.xmax - x0) / (x1 - x0), x = this.xmax;\n      else y = y0 + (y1 - y0) * (this.xmin - x0) / (x1 - x0), x = this.xmin;\n      if (c0) x0 = x, y0 = y, c0 = this._regioncode(x0, y0);\n      else x1 = x, y1 = y, c1 = this._regioncode(x1, y1);\n    }\n  }\n  _clipInfinite(i, points, vx0, vy0, vxn, vyn) {\n    let P = Array.from(points), p;\n    if (p = this._project(P[0], P[1], vx0, vy0)) P.unshift(p[0], p[1]);\n    if (p = this._project(P[P.length - 2], P[P.length - 1], vxn, vyn)) P.push(p[0], p[1]);\n    if (P = this._clipFinite(i, P)) {\n      for (let j = 0, n = P.length, c0, c1 = this._edgecode(P[n - 2], P[n - 1]); j < n; j += 2) {\n        c0 = c1, c1 = this._edgecode(P[j], P[j + 1]);\n        if (c0 && c1) j = this._edge(i, c0, c1, P, j), n = P.length;\n      }\n    } else if (this.contains(i, (this.xmin + this.xmax) / 2, (this.ymin + this.ymax) / 2)) {\n      P = [this.xmin, this.ymin, this.xmax, this.ymin, this.xmax, this.ymax, this.xmin, this.ymax];\n    }\n    return P;\n  }\n  _edge(i, e0, e1, P, j) {\n    while (e0 !== e1) {\n      let x, y;\n      switch (e0) {\n        case 0b0101: e0 = 0b0100; continue; // top-left\n        case 0b0100: e0 = 0b0110, x = this.xmax, y = this.ymin; break; // top\n        case 0b0110: e0 = 0b0010; continue; // top-right\n        case 0b0010: e0 = 0b1010, x = this.xmax, y = this.ymax; break; // right\n        case 0b1010: e0 = 0b1000; continue; // bottom-right\n        case 0b1000: e0 = 0b1001, x = this.xmin, y = this.ymax; break; // bottom\n        case 0b1001: e0 = 0b0001; continue; // bottom-left\n        case 0b0001: e0 = 0b0101, x = this.xmin, y = this.ymin; break; // left\n      }\n      if ((P[j] !== x || P[j + 1] !== y) && this.contains(i, x, y)) {\n        P.splice(j, 0, x, y), j += 2;\n      }\n    }\n    if (P.length > 4) {\n      for (let i = 0; i < P.length; i+= 2) {\n        const j = (i + 2) % P.length, k = (i + 4) % P.length;\n        if (P[i] === P[j] && P[j] === P[k]\n        || P[i + 1] === P[j + 1] && P[j + 1] === P[k + 1])\n          P.splice(j, 2), i -= 2;\n      }\n    }\n    return j;\n  }\n  _project(x0, y0, vx, vy) {\n    let t = Infinity, c, x, y;\n    if (vy < 0) { // top\n      if (y0 <= this.ymin) return null;\n      if ((c = (this.ymin - y0) / vy) < t) y = this.ymin, x = x0 + (t = c) * vx;\n    } else if (vy > 0) { // bottom\n      if (y0 >= this.ymax) return null;\n      if ((c = (this.ymax - y0) / vy) < t) y = this.ymax, x = x0 + (t = c) * vx;\n    }\n    if (vx > 0) { // right\n      if (x0 >= this.xmax) return null;\n      if ((c = (this.xmax - x0) / vx) < t) x = this.xmax, y = y0 + (t = c) * vy;\n    } else if (vx < 0) { // left\n      if (x0 <= this.xmin) return null;\n      if ((c = (this.xmin - x0) / vx) < t) x = this.xmin, y = y0 + (t = c) * vy;\n    }\n    return [x, y];\n  }\n  _edgecode(x, y) {\n    return (x === this.xmin ? 0b0001\n        : x === this.xmax ? 0b0010 : 0b0000)\n        | (y === this.ymin ? 0b0100\n        : y === this.ymax ? 0b1000 : 0b0000);\n  }\n  _regioncode(x, y) {\n    return (x < this.xmin ? 0b0001\n        : x > this.xmax ? 0b0010 : 0b0000)\n        | (y < this.ymin ? 0b0100\n        : y > this.ymax ? 0b1000 : 0b0000);\n  }\n}\n", "import Delaunator from \"delaunator\";\nimport Path from \"./path.js\";\nimport Polygon from \"./polygon.js\";\nimport Voronoi from \"./voronoi.js\";\n\nconst tau = 2 * Math.PI, pow = Math.pow;\n\nfunction pointX(p) {\n  return p[0];\n}\n\nfunction pointY(p) {\n  return p[1];\n}\n\n// A triangulation is collinear if all its triangles have a non-null area\nfunction collinear(d) {\n  const {triangles, coords} = d;\n  for (let i = 0; i < triangles.length; i += 3) {\n    const a = 2 * triangles[i],\n          b = 2 * triangles[i + 1],\n          c = 2 * triangles[i + 2],\n          cross = (coords[c] - coords[a]) * (coords[b + 1] - coords[a + 1])\n                - (coords[b] - coords[a]) * (coords[c + 1] - coords[a + 1]);\n    if (cross > 1e-10) return false;\n  }\n  return true;\n}\n\nfunction jitter(x, y, r) {\n  return [x + Math.sin(x + y) * r, y + Math.cos(x - y) * r];\n}\n\nexport default class Delaunay {\n  static from(points, fx = pointX, fy = pointY, that) {\n    return new Delaunay(\"length\" in points\n        ? flatArray(points, fx, fy, that)\n        : Float64Array.from(flatIterable(points, fx, fy, that)));\n  }\n  constructor(points) {\n    this._delaunator = new Delaunator(points);\n    this.inedges = new Int32Array(points.length / 2);\n    this._hullIndex = new Int32Array(points.length / 2);\n    this.points = this._delaunator.coords;\n    this._init();\n  }\n  update() {\n    this._delaunator.update();\n    this._init();\n    return this;\n  }\n  _init() {\n    const d = this._delaunator, points = this.points;\n\n    // check for collinear\n    if (d.hull && d.hull.length > 2 && collinear(d)) {\n      this.collinear = Int32Array.from({length: points.length/2}, (_,i) => i)\n        .sort((i, j) => points[2 * i] - points[2 * j] || points[2 * i + 1] - points[2 * j + 1]); // for exact neighbors\n      const e = this.collinear[0], f = this.collinear[this.collinear.length - 1],\n        bounds = [ points[2 * e], points[2 * e + 1], points[2 * f], points[2 * f + 1] ],\n        r = 1e-8 * Math.hypot(bounds[3] - bounds[1], bounds[2] - bounds[0]);\n      for (let i = 0, n = points.length / 2; i < n; ++i) {\n        const p = jitter(points[2 * i], points[2 * i + 1], r);\n        points[2 * i] = p[0];\n        points[2 * i + 1] = p[1];\n      }\n      this._delaunator = new Delaunator(points);\n    } else {\n      delete this.collinear;\n    }\n\n    const halfedges = this.halfedges = this._delaunator.halfedges;\n    const hull = this.hull = this._delaunator.hull;\n    const triangles = this.triangles = this._delaunator.triangles;\n    const inedges = this.inedges.fill(-1);\n    const hullIndex = this._hullIndex.fill(-1);\n\n    // Compute an index from each point to an (arbitrary) incoming halfedge\n    // Used to give the first neighbor of each point; for this reason,\n    // on the hull we give priority to exterior halfedges\n    for (let e = 0, n = halfedges.length; e < n; ++e) {\n      const p = triangles[e % 3 === 2 ? e - 2 : e + 1];\n      if (halfedges[e] === -1 || inedges[p] === -1) inedges[p] = e;\n    }\n    for (let i = 0, n = hull.length; i < n; ++i) {\n      hullIndex[hull[i]] = i;\n    }\n\n    // degenerate case: 1 or 2 (distinct) points\n    if (hull.length <= 2 && hull.length > 0) {\n      this.triangles = new Int32Array(3).fill(-1);\n      this.halfedges = new Int32Array(3).fill(-1);\n      this.triangles[0] = hull[0];\n      this.triangles[1] = hull[1];\n      this.triangles[2] = hull[1];\n      inedges[hull[0]] = 1;\n      if (hull.length === 2) inedges[hull[1]] = 0;\n    }\n  }\n  voronoi(bounds) {\n    return new Voronoi(this, bounds);\n  }\n  *neighbors(i) {\n    const {inedges, hull, _hullIndex, halfedges, triangles, collinear} = this;\n\n    // degenerate case with several collinear points\n    if (collinear) {\n      const l = collinear.indexOf(i);\n      if (l > 0) yield collinear[l - 1];\n      if (l < collinear.length - 1) yield collinear[l + 1];\n      return;\n    }\n\n    const e0 = inedges[i];\n    if (e0 === -1) return; // coincident point\n    let e = e0, p0 = -1;\n    do {\n      yield p0 = triangles[e];\n      e = e % 3 === 2 ? e - 2 : e + 1;\n      if (triangles[e] !== i) return; // bad triangulation\n      e = halfedges[e];\n      if (e === -1) {\n        const p = hull[(_hullIndex[i] + 1) % hull.length];\n        if (p !== p0) yield p;\n        return;\n      }\n    } while (e !== e0);\n  }\n  find(x, y, i = 0) {\n    if ((x = +x, x !== x) || (y = +y, y !== y)) return -1;\n    const i0 = i;\n    let c;\n    while ((c = this._step(i, x, y)) >= 0 && c !== i && c !== i0) i = c;\n    return c;\n  }\n  _step(i, x, y) {\n    const {inedges, hull, _hullIndex, halfedges, triangles, points} = this;\n    if (inedges[i] === -1 || !points.length) return (i + 1) % (points.length >> 1);\n    let c = i;\n    let dc = pow(x - points[i * 2], 2) + pow(y - points[i * 2 + 1], 2);\n    const e0 = inedges[i];\n    let e = e0;\n    do {\n      let t = triangles[e];\n      const dt = pow(x - points[t * 2], 2) + pow(y - points[t * 2 + 1], 2);\n      if (dt < dc) dc = dt, c = t;\n      e = e % 3 === 2 ? e - 2 : e + 1;\n      if (triangles[e] !== i) break; // bad triangulation\n      e = halfedges[e];\n      if (e === -1) {\n        e = hull[(_hullIndex[i] + 1) % hull.length];\n        if (e !== t) {\n          if (pow(x - points[e * 2], 2) + pow(y - points[e * 2 + 1], 2) < dc) return e;\n        }\n        break;\n      }\n    } while (e !== e0);\n    return c;\n  }\n  render(context) {\n    const buffer = context == null ? context = new Path : undefined;\n    const {points, halfedges, triangles} = this;\n    for (let i = 0, n = halfedges.length; i < n; ++i) {\n      const j = halfedges[i];\n      if (j < i) continue;\n      const ti = triangles[i] * 2;\n      const tj = triangles[j] * 2;\n      context.moveTo(points[ti], points[ti + 1]);\n      context.lineTo(points[tj], points[tj + 1]);\n    }\n    this.renderHull(context);\n    return buffer && buffer.value();\n  }\n  renderPoints(context, r = 2) {\n    const buffer = context == null ? context = new Path : undefined;\n    const {points} = this;\n    for (let i = 0, n = points.length; i < n; i += 2) {\n      const x = points[i], y = points[i + 1];\n      context.moveTo(x + r, y);\n      context.arc(x, y, r, 0, tau);\n    }\n    return buffer && buffer.value();\n  }\n  renderHull(context) {\n    const buffer = context == null ? context = new Path : undefined;\n    const {hull, points} = this;\n    const h = hull[0] * 2, n = hull.length;\n    context.moveTo(points[h], points[h + 1]);\n    for (let i = 1; i < n; ++i) {\n      const h = 2 * hull[i];\n      context.lineTo(points[h], points[h + 1]);\n    }\n    context.closePath();\n    return buffer && buffer.value();\n  }\n  hullPolygon() {\n    const polygon = new Polygon;\n    this.renderHull(polygon);\n    return polygon.value();\n  }\n  renderTriangle(i, context) {\n    const buffer = context == null ? context = new Path : undefined;\n    const {points, triangles} = this;\n    const t0 = triangles[i *= 3] * 2;\n    const t1 = triangles[i + 1] * 2;\n    const t2 = triangles[i + 2] * 2;\n    context.moveTo(points[t0], points[t0 + 1]);\n    context.lineTo(points[t1], points[t1 + 1]);\n    context.lineTo(points[t2], points[t2 + 1]);\n    context.closePath();\n    return buffer && buffer.value();\n  }\n  *trianglePolygons() {\n    const {triangles} = this;\n    for (let i = 0, n = triangles.length / 3; i < n; ++i) {\n      yield this.trianglePolygon(i);\n    }\n  }\n  trianglePolygon(i) {\n    const polygon = new Polygon;\n    this.renderTriangle(i, polygon);\n    return polygon.value();\n  }\n}\n\nfunction flatArray(points, fx, fy, that) {\n  const n = points.length;\n  const array = new Float64Array(n * 2);\n  for (let i = 0; i < n; ++i) {\n    const p = points[i];\n    array[i * 2] = fx.call(that, p, i, points);\n    array[i * 2 + 1] = fy.call(that, p, i, points);\n  }\n  return array;\n}\n\nfunction* flatIterable(points, fx, fy, that) {\n  let i = 0;\n  for (const p of points) {\n    yield fx.call(that, p, i, points);\n    yield fy.call(that, p, i, points);\n    ++i;\n  }\n}\n", "import { VoronoiDomain, VoronoiLayer } from './types'\n\nexport const defaultVoronoiProps = {\n    xDomain: [0, 1] as VoronoiDomain,\n    yDomain: [0, 1] as VoronoiDomain,\n    layers: ['links', 'cells', 'points', 'bounds'] as VoronoiLayer[],\n    enableLinks: false,\n    linkLineWidth: 1,\n    linkLineColor: '#bbbbbb',\n    enableCells: true,\n    cellLineWidth: 2,\n    cellLineColor: '#000000',\n    enablePoints: true,\n    pointSize: 4,\n    pointColor: '#666666',\n    role: 'img',\n}\n", "import { Delaunay } from 'd3-delaunay'\n\ntype NumberPropertyNames<T> = {\n    [K in keyof T]: T[K] extends number ? K : never\n}[keyof T]\n\nexport type XYAccessor<Datum> = NumberPropertyNames<Datum> | ((datum: Datum) => number)\n\nconst getAccessor = <Datum>(directive: XYAccessor<Datum>) =>\n    typeof directive === 'function' ? directive : (datum: Datum) => datum[directive]\n\n/**\n * The delaunay generator requires an array\n * where each point is defined as an array\n * of 2 elements: [x: number, y: number].\n *\n * Points represent the raw input data\n * and x/y represent accessors to x & y.\n */\nexport const computeMeshPoints = <Datum>({\n    points,\n    x = 'x' as NumberPropertyNames<Datum>,\n    y = 'y' as NumberPropertyNames<Datum>,\n}: {\n    points: Datum[]\n    x?: XYAccessor<Datum>\n    y?: XYAccessor<Datum>\n}): [number, number][] => {\n    const getX = getAccessor<Datum>(x)\n    const getY = getAccessor<Datum>(y)\n\n    return points.map(point => [getX(point) as number, getY(point) as number])\n}\n\nexport const computeMesh = ({\n    points,\n    width,\n    height,\n    debug,\n}: {\n    points: [number, number][]\n    width: number\n    height: number\n    debug?: boolean\n}) => {\n    const delaunay = Delaunay.from(points)\n    const voronoi = debug ? delaunay.voronoi([0, 0, width, height]) : undefined\n\n    return { delaunay, voronoi }\n}\n", "import { useMemo } from 'react'\nimport { scaleLinear } from 'd3-scale'\nimport { Delaunay } from 'd3-delaunay'\nimport { computeMeshPoints, computeMesh, XYAccessor } from './computeMesh'\nimport { VoronoiCommonProps, VoronoiDatum, VoronoiCustomLayerProps } from './types'\n\nexport const useVoronoiMesh = <Datum>({\n    points,\n    x,\n    y,\n    width,\n    height,\n    debug,\n}: {\n    points: Datum[]\n    x?: XYAccessor<Datum>\n    y?: XYAccessor<Datum>\n    width: number\n    height: number\n    debug?: boolean\n}) => {\n    const points2d = useMemo(() => computeMeshPoints<Datum>({ points, x, y }), [points, x, y])\n\n    return useMemo(\n        () => computeMesh({ points: points2d, width, height, debug }),\n        [points2d, width, height, debug]\n    )\n}\n\nexport const useVoronoi = ({\n    data,\n    width,\n    height,\n    xDomain,\n    yDomain,\n}: {\n    data: VoronoiDatum[]\n    width: number\n    height: number\n    xDomain: VoronoiCommonProps['xDomain']\n    yDomain: VoronoiCommonProps['yDomain']\n}) => {\n    const xScale = useMemo(() => scaleLinear().domain(xDomain).range([0, width]), [xDomain, width])\n    const yScale = useMemo(\n        () => scaleLinear().domain(yDomain).range([0, height]),\n        [yDomain, height]\n    )\n\n    const points = useMemo(\n        () =>\n            data.map(d => ({\n                x: xScale(d.x),\n                y: yScale(d.y),\n                data: d,\n            })),\n        [data, xScale, yScale]\n    )\n\n    return useMemo(() => {\n        const delaunay = Delaunay.from(points.map(p => [p.x, p.y]))\n        const voronoi = delaunay.voronoi([0, 0, width, height])\n\n        return {\n            points,\n            delaunay,\n            voronoi,\n        }\n    }, [points, width, height])\n}\n\n/**\n * Memoize the context to pass to custom layers.\n */\nexport const useVoronoiLayerContext = ({\n    points,\n    delaunay,\n    voronoi,\n}: VoronoiCustomLayerProps): VoronoiCustomLayerProps =>\n    useMemo(\n        () => ({\n            points,\n            delaunay,\n            voronoi,\n        }),\n        [points, delaunay, voronoi]\n    )\n", "import { createElement, Fragment, ReactNode } from 'react'\nimport { Container, SvgWrapper, useDimensions } from '@nivo/core'\nimport { VoronoiSvgProps, VoronoiLayerId } from './types'\nimport { defaultVoronoiProps } from './props'\nimport { useVoronoi, useVoronoiLayerContext } from './hooks'\n\ntype InnerVoronoiProps = Partial<Omit<VoronoiSvgProps, 'data' | 'width' | 'height'>> &\n    Pick<VoronoiSvgProps, 'data' | 'width' | 'height'>\n\nconst InnerVoronoi = ({\n    data,\n    width,\n    height,\n    margin: partialMargin,\n    layers = defaultVoronoiProps.layers,\n    xDomain = defaultVoronoiProps.xDomain,\n    yDomain = defaultVoronoiProps.yDomain,\n    enableLinks = defaultVoronoiProps.enableLinks,\n    linkLineWidth = defaultVoronoiProps.linkLineWidth,\n    linkLineColor = defaultVoronoiProps.linkLineColor,\n    enableCells = defaultVoronoiProps.enableCells,\n    cellLineWidth = defaultVoronoiProps.cellLineWidth,\n    cellLineColor = defaultVoronoiProps.cellLineColor,\n    enablePoints = defaultVoronoiProps.enableCells,\n    pointSize = defaultVoronoiProps.pointSize,\n    pointColor = defaultVoronoiProps.pointColor,\n    role = defaultVoronoiProps.role,\n}: InnerVoronoiProps) => {\n    const { outerWidth, outerHeight, margin, innerWidth, innerHeight } = useDimensions(\n        width,\n        height,\n        partialMargin\n    )\n\n    const { points, delaunay, voronoi } = useVoronoi({\n        data,\n        width: innerWidth,\n        height: innerHeight,\n        xDomain,\n        yDomain,\n    })\n\n    const layerById: Record<VoronoiLayerId, ReactNode> = {\n        links: null,\n        cells: null,\n        points: null,\n        bounds: null,\n    }\n\n    if (enableLinks && layers.includes('links')) {\n        layerById.links = (\n            <path\n                key=\"links\"\n                stroke={linkLineColor}\n                strokeWidth={linkLineWidth}\n                fill=\"none\"\n                d={delaunay.render()}\n            />\n        )\n    }\n\n    if (enableCells && layers.includes('cells')) {\n        layerById.cells = (\n            <path\n                key=\"cells\"\n                d={voronoi.render()}\n                fill=\"none\"\n                stroke={cellLineColor}\n                strokeWidth={cellLineWidth}\n            />\n        )\n    }\n\n    if (enablePoints && layers.includes('points')) {\n        layerById.points = (\n            <path\n                key=\"points\"\n                stroke=\"none\"\n                fill={pointColor}\n                d={delaunay.renderPoints(undefined, pointSize / 2)}\n            />\n        )\n    }\n\n    if (layers.includes('bounds')) {\n        layerById.bounds = (\n            <path\n                key=\"bounds\"\n                fill=\"none\"\n                stroke={cellLineColor}\n                strokeWidth={cellLineWidth}\n                d={voronoi.renderBounds()}\n            />\n        )\n    }\n\n    const layerContext = useVoronoiLayerContext({\n        points,\n        delaunay,\n        voronoi,\n    })\n\n    return (\n        <SvgWrapper width={outerWidth} height={outerHeight} margin={margin} role={role}>\n            {layers.map((layer, i) => {\n                if (layerById[layer as VoronoiLayerId] !== undefined) {\n                    return layerById[layer as VoronoiLayerId]\n                }\n\n                if (typeof layer === 'function') {\n                    return <Fragment key={i}>{createElement(layer, layerContext)}</Fragment>\n                }\n\n                return null\n            })}\n        </SvgWrapper>\n    )\n}\n\nexport const Voronoi = ({\n    theme,\n    ...otherProps\n}: Partial<Omit<VoronoiSvgProps, 'data' | 'width' | 'height'>> &\n    Pick<VoronoiSvgProps, 'data' | 'width' | 'height'>) => (\n    <Container isInteractive={false} animate={false} theme={theme}>\n        <InnerVoronoi {...otherProps} />\n    </Container>\n)\n", "import { ResponsiveWrapper } from '@nivo/core'\nimport { VoronoiSvgProps } from './types'\nimport { Voronoi } from './Voronoi'\n\ntype ResponsiveVoronoiProps = Partial<Omit<VoronoiSvgProps, 'data' | 'width' | 'height'>> &\n    Pick<VoronoiSvgProps, 'data'>\n\nexport const ResponsiveVoronoi = (props: ResponsiveVoronoiProps) => (\n    <ResponsiveWrapper>\n        {({ width, height }: { width: number; height: number }) => (\n            <Voronoi width={width} height={height} {...props} />\n        )}\n    </ResponsiveWrapper>\n)\n", "import { useRef, useState, useCallback, useMemo } from 'react'\nimport * as React from 'react'\nimport { getRelativeCursor } from '@nivo/core'\nimport { useVoronoiMesh } from './hooks'\nimport { XYAccessor } from './computeMesh'\n\ntype MouseHandler<Datum> = (datum: Datum, event: React.MouseEvent) => void\n\ninterface MeshProps<Datum> {\n    nodes: Datum[]\n    width: number\n    height: number\n    x?: XYAccessor<Datum>\n    y?: XYAccessor<Datum>\n    onMouseEnter?: MouseHandler<Datum>\n    onMouseMove?: MouseHandler<Datum>\n    onMouseLeave?: MouseHandler<Datum>\n    onClick?: MouseHandler<Datum>\n    debug?: boolean\n}\n\nexport const Mesh = <Datum,>({\n    nodes,\n    width,\n    height,\n    x,\n    y,\n    onMouseEnter,\n    onMouseMove,\n    onMouseLeave,\n    onClick,\n    debug,\n}: MeshProps<Datum>) => {\n    const elementRef = useRef<SVGGElement>(null)\n    const [currentIndex, setCurrentIndex] = useState<number | null>(null)\n\n    const { delaunay, voronoi } = useVoronoiMesh({\n        points: nodes,\n        x,\n        y,\n        width,\n        height,\n        debug,\n    })\n\n    const voronoiPath = useMemo(() => {\n        if (debug && voronoi) {\n            return voronoi.render()\n        }\n\n        return undefined\n    }, [debug, voronoi])\n\n    const getIndexAndNodeFromEvent = useCallback(\n        event => {\n            if (!elementRef.current) {\n                return [null, null]\n            }\n\n            const [x, y] = getRelativeCursor(elementRef.current, event)\n            const index = delaunay.find(x, y)\n\n            return [index, index !== undefined ? nodes[index] : null] as [number, Datum | null]\n        },\n        [elementRef, delaunay]\n    )\n\n    const handleMouseEnter = useCallback(\n        (event: React.MouseEvent) => {\n            const [index, node] = getIndexAndNodeFromEvent(event)\n            setCurrentIndex(index)\n            if (node) {\n                onMouseEnter?.(node, event)\n            }\n        },\n        [getIndexAndNodeFromEvent, setCurrentIndex, onMouseEnter]\n    )\n\n    const handleMouseMove = useCallback(\n        (event: React.MouseEvent) => {\n            const [index, node] = getIndexAndNodeFromEvent(event)\n            setCurrentIndex(index)\n            if (node) {\n                onMouseMove?.(node, event)\n            }\n        },\n        [getIndexAndNodeFromEvent, setCurrentIndex, onMouseMove]\n    )\n\n    const handleMouseLeave = useCallback(\n        (event: React.MouseEvent) => {\n            setCurrentIndex(null)\n            if (onMouseLeave) {\n                let previousNode: Datum | undefined = undefined\n                if (currentIndex !== null) {\n                    previousNode = nodes[currentIndex]\n                }\n                previousNode && onMouseLeave(previousNode, event)\n            }\n        },\n        [setCurrentIndex, currentIndex, onMouseLeave, nodes]\n    )\n\n    const handleClick = useCallback(\n        (event: React.MouseEvent) => {\n            const [index, node] = getIndexAndNodeFromEvent(event)\n            setCurrentIndex(index)\n            if (node) {\n                onClick?.(node, event)\n            }\n        },\n        [getIndexAndNodeFromEvent, setCurrentIndex, onClick]\n    )\n\n    return (\n        <g ref={elementRef}>\n            {debug && voronoi && (\n                <>\n                    <path d={voronoiPath} stroke=\"red\" strokeWidth={1} opacity={0.75} />\n                    {/* highlight current cell */}\n                    {currentIndex !== null && (\n                        <path fill=\"pink\" opacity={0.35} d={voronoi.renderCell(currentIndex)} />\n                    )}\n                </>\n            )}\n            {/* transparent rect to intercept mouse events */}\n            <rect\n                width={width}\n                height={height}\n                fill=\"red\"\n                opacity={0}\n                style={{ cursor: 'auto' }}\n                onMouseEnter={handleMouseEnter}\n                onMouseMove={handleMouseMove}\n                onMouseLeave={handleMouseLeave}\n                onClick={handleClick}\n            />\n        </g>\n    )\n}\n", "import { Delaunay, Voronoi } from 'd3-delaunay'\n\nexport const renderVoronoiToCanvas = (\n    ctx: CanvasRenderingContext2D,\n    voronoi: Voronoi<Delaunay.Point>\n) => {\n    ctx.save()\n\n    ctx.globalAlpha = 0.75\n    ctx.beginPath()\n    voronoi.render(ctx)\n    ctx.strokeStyle = 'red'\n    ctx.lineWidth = 1\n    ctx.stroke()\n\n    ctx.restore()\n}\n\nexport const renderVoronoiCellToCanvas = (\n    ctx: CanvasRenderingContext2D,\n    voronoi: Voronoi<Delaunay.Point>,\n    index: number\n) => {\n    ctx.save()\n\n    ctx.globalAlpha = 0.35\n    ctx.beginPath()\n    voronoi.renderCell(index, ctx)\n    ctx.fillStyle = 'red'\n    ctx.fill()\n\n    ctx.restore()\n}\n", "/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport { memo } from 'react'\nimport PropTypes from 'prop-types'\nimport { BasicTooltip } from '@nivo/tooltip'\n\nconst LinePointTooltip = ({ point }) => {\n    return (\n        <BasicTooltip\n            id={\n                <span>\n                    x: <strong>{point.data.xFormatted}</strong>, y:{' '}\n                    <strong>{point.data.yFormatted}</strong>\n                </span>\n            }\n            enableChip={true}\n            color={point.serieColor}\n        />\n    )\n}\n\nLinePointTooltip.propTypes = {\n    point: PropTypes.object.isRequired,\n}\n\nexport default memo(LinePointTooltip)\n", "/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport { memo } from 'react'\nimport PropTypes from 'prop-types'\nimport { useTheme } from '@nivo/core'\nimport { Chip, TableTooltip } from '@nivo/tooltip'\n\nconst SliceTooltip = ({ slice, axis }) => {\n    const theme = useTheme()\n    const otherAxis = axis === 'x' ? 'y' : 'x'\n\n    return (\n        <TableTooltip\n            rows={slice.points.map(point => [\n                <Chip key=\"chip\" color={point.serieColor} style={theme.tooltip.chip} />,\n                point.serieId,\n                <span key=\"value\" style={theme.tooltip.tableCellValue}>\n                    {point.data[`${otherAxis}Formatted`]}\n                </span>,\n            ])}\n        />\n    )\n}\n\nSliceTooltip.propTypes = {\n    slice: PropTypes.object.isRequired,\n    axis: PropTypes.oneOf(['x', 'y']).isRequired,\n}\n\nexport default memo(SliceTooltip)\n", "/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport PropTypes from 'prop-types'\nimport { lineCurvePropType, blendModePropType, motionPropTypes, defsPropTypes } from '@nivo/core'\nimport { ordinalColorsPropType } from '@nivo/colors'\nimport { axisPropType } from '@nivo/axes'\nimport { LegendPropShape } from '@nivo/legends'\nimport PointTooltip from './PointTooltip'\nimport SliceTooltip from './SliceTooltip'\n\nconst commonPropTypes = {\n    data: PropTypes.arrayOf(\n        PropTypes.shape({\n            id: PropTypes.oneOfType([PropTypes.string, PropTypes.number]).isRequired,\n            data: PropTypes.arrayOf(\n                PropTypes.shape({\n                    x: PropTypes.oneOfType([\n                        PropTypes.number,\n                        PropTypes.string,\n                        PropTypes.instanceOf(Date),\n                    ]),\n                    y: PropTypes.oneOfType([\n                        PropTypes.number,\n                        PropTypes.string,\n                        PropTypes.instanceOf(Date),\n                    ]),\n                })\n            ).isRequired,\n        })\n    ).isRequired,\n\n    xScale: PropTypes.object.isRequired,\n    xFormat: PropTypes.oneOfType([PropTypes.func, PropTypes.string]),\n    yScale: PropTypes.object.isRequired,\n    yFormat: PropTypes.oneOfType([PropTypes.func, PropTypes.string]),\n\n    layers: PropTypes.arrayOf(\n        PropTypes.oneOfType([\n            PropTypes.oneOf([\n                'grid',\n                'markers',\n                'axes',\n                'areas',\n                'crosshair',\n                'lines',\n                'slices',\n                'points',\n                'mesh',\n                'legends',\n            ]),\n            PropTypes.func,\n        ])\n    ).isRequired,\n\n    curve: lineCurvePropType.isRequired,\n\n    axisTop: axisPropType,\n    axisRight: axisPropType,\n    axisBottom: axisPropType,\n    axisLeft: axisPropType,\n\n    enableGridX: PropTypes.bool.isRequired,\n    enableGridY: PropTypes.bool.isRequired,\n    gridXValues: PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.arrayOf(\n            PropTypes.oneOfType([PropTypes.number, PropTypes.string, PropTypes.instanceOf(Date)])\n        ),\n    ]),\n    gridYValues: PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.arrayOf(\n            PropTypes.oneOfType([PropTypes.number, PropTypes.string, PropTypes.instanceOf(Date)])\n        ),\n    ]),\n\n    enablePoints: PropTypes.bool.isRequired,\n    pointSymbol: PropTypes.func,\n    pointSize: PropTypes.number.isRequired,\n    pointColor: PropTypes.any.isRequired,\n    pointBorderWidth: PropTypes.number.isRequired,\n    pointBorderColor: PropTypes.any.isRequired,\n    enablePointLabel: PropTypes.bool.isRequired,\n    pointLabel: PropTypes.oneOfType([PropTypes.string, PropTypes.func]).isRequired,\n\n    markers: PropTypes.arrayOf(\n        PropTypes.shape({\n            axis: PropTypes.oneOf(['x', 'y']).isRequired,\n            value: PropTypes.oneOfType([\n                PropTypes.number,\n                PropTypes.string,\n                PropTypes.instanceOf(Date),\n            ]).isRequired,\n            style: PropTypes.object,\n        })\n    ),\n\n    colors: ordinalColorsPropType.isRequired,\n\n    enableArea: PropTypes.bool.isRequired,\n    areaOpacity: PropTypes.number.isRequired,\n    areaBlendMode: blendModePropType.isRequired,\n    areaBaselineValue: PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n        PropTypes.instanceOf(Date),\n    ]).isRequired,\n    lineWidth: PropTypes.number.isRequired,\n\n    legends: PropTypes.arrayOf(PropTypes.shape(LegendPropShape)).isRequired,\n\n    isInteractive: PropTypes.bool.isRequired,\n    debugMesh: PropTypes.bool.isRequired,\n\n    tooltip: PropTypes.oneOfType([PropTypes.func, PropTypes.object]).isRequired,\n\n    enableSlices: PropTypes.oneOf(['x', 'y', false]).isRequired,\n    debugSlices: PropTypes.bool.isRequired,\n    sliceTooltip: PropTypes.oneOfType([PropTypes.func, PropTypes.object]).isRequired,\n\n    enableCrosshair: PropTypes.bool.isRequired,\n    crosshairType: PropTypes.string.isRequired,\n}\n\nexport const LinePropTypes = {\n    ...commonPropTypes,\n    enablePointLabel: PropTypes.bool.isRequired,\n    role: PropTypes.string.isRequired,\n    useMesh: PropTypes.bool.isRequired,\n    ...motionPropTypes,\n    ...defsPropTypes,\n}\n\nexport const LineCanvasPropTypes = {\n    pixelRatio: PropTypes.number.isRequired,\n    ...commonPropTypes,\n}\n\nconst commonDefaultProps = {\n    curve: 'linear',\n\n    xScale: {\n        type: 'point',\n    },\n    yScale: {\n        type: 'linear',\n        min: 0,\n        max: 'auto',\n    },\n\n    layers: [\n        'grid',\n        'markers',\n        'axes',\n        'areas',\n        'crosshair',\n        'lines',\n        'points',\n        'slices',\n        'mesh',\n        'legends',\n    ],\n    axisBottom: {},\n    axisLeft: {},\n    enableGridX: true,\n    enableGridY: true,\n\n    enablePoints: true,\n    pointSize: 6,\n    pointColor: { from: 'color' },\n    pointBorderWidth: 0,\n    pointBorderColor: { theme: 'background' },\n    enablePointLabel: false,\n    pointLabel: 'yFormatted',\n\n    colors: { scheme: 'nivo' },\n    enableArea: false,\n    areaBaselineValue: 0,\n    areaOpacity: 0.2,\n    areaBlendMode: 'normal',\n    lineWidth: 2,\n\n    legends: [],\n\n    isInteractive: true,\n    tooltip: PointTooltip,\n    enableSlices: false,\n    debugSlices: false,\n    sliceTooltip: SliceTooltip,\n    debugMesh: false,\n    enableCrosshair: true,\n    crosshairType: 'bottom-left',\n}\n\nexport const LineDefaultProps = {\n    ...commonDefaultProps,\n    enablePointLabel: false,\n    useMesh: false,\n    animate: true,\n    motionConfig: 'gentle',\n    defs: [],\n    fill: [],\n    role: 'img',\n}\n\nexport const LineCanvasDefaultProps = {\n    ...commonDefaultProps,\n    pixelRatio: typeof window !== 'undefined' ? window.devicePixelRatio || 1 : 1,\n}\n", "/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport { useCallback, useMemo, useState } from 'react'\nimport { area, line } from 'd3-shape'\nimport { curveFromProp, useTheme, useValueFormatter } from '@nivo/core'\nimport { useOrdinalColorScale, useInheritedColor } from '@nivo/colors'\nimport { computeXYScalesForSeries } from '@nivo/scales'\nimport { LineDefaultProps } from './props'\n\nexport const useLineGenerator = ({ curve }) => {\n    return useMemo(\n        () =>\n            line()\n                .defined(d => d.x !== null && d.y !== null)\n                .x(d => d.x)\n                .y(d => d.y)\n                .curve(curveFromProp(curve)),\n        [curve]\n    )\n}\n\nexport const useAreaGenerator = ({ curve, yScale, areaBaselineValue }) => {\n    return useMemo(() => {\n        return area()\n            .defined(d => d.x !== null && d.y !== null)\n            .x(d => d.x)\n            .y1(d => d.y)\n            .curve(curveFromProp(curve))\n            .y0(yScale(areaBaselineValue))\n    }, [curve, yScale, areaBaselineValue])\n}\n\nconst usePoints = ({ series, getPointColor, getPointBorderColor, formatX, formatY }) => {\n    return useMemo(() => {\n        return series.reduce((acc, serie) => {\n            return [\n                ...acc,\n                ...serie.data\n                    .filter(datum => datum.position.x !== null && datum.position.y !== null)\n                    .map((datum, i) => {\n                        const point = {\n                            id: `${serie.id}.${i}`,\n                            index: acc.length + i,\n                            serieId: serie.id,\n                            serieColor: serie.color,\n                            x: datum.position.x,\n                            y: datum.position.y,\n                        }\n                        point.color = getPointColor(serie)\n                        point.borderColor = getPointBorderColor(point)\n                        point.data = {\n                            ...datum.data,\n                            xFormatted: formatX(datum.data.x),\n                            yFormatted: formatY(datum.data.y),\n                        }\n\n                        return point\n                    }),\n            ]\n        }, [])\n    }, [series, getPointColor, getPointBorderColor, formatX, formatY])\n}\n\nexport const useSlices = ({ enableSlices, points, width, height }) => {\n    return useMemo(() => {\n        if (enableSlices === false) return []\n\n        if (enableSlices === 'x') {\n            const map = new Map()\n            points.forEach(point => {\n                if (point.data.x === null || point.data.y === null) return\n                if (!map.has(point.x)) map.set(point.x, [point])\n                else map.get(point.x).push(point)\n            })\n            return Array.from(map.entries())\n                .sort((a, b) => a[0] - b[0])\n                .map(([x, slicePoints], i, slices) => {\n                    const prevSlice = slices[i - 1]\n                    const nextSlice = slices[i + 1]\n\n                    let x0\n                    if (!prevSlice) x0 = x\n                    else x0 = x - (x - prevSlice[0]) / 2\n\n                    let sliceWidth\n                    if (!nextSlice) sliceWidth = width - x0\n                    else sliceWidth = x - x0 + (nextSlice[0] - x) / 2\n\n                    return {\n                        id: x,\n                        x0,\n                        x,\n                        y0: 0,\n                        y: 0,\n                        width: sliceWidth,\n                        height,\n                        points: slicePoints.reverse(),\n                    }\n                })\n        } else if (enableSlices === 'y') {\n            const map = new Map()\n            points.forEach(point => {\n                if (point.data.x === null || point.data.y === null) return\n                if (!map.has(point.y)) map.set(point.y, [point])\n                else map.get(point.y).push(point)\n            })\n            return Array.from(map.entries())\n                .sort((a, b) => a[0] - b[0])\n                .map(([y, slicePoints], i, slices) => {\n                    const prevSlice = slices[i - 1]\n                    const nextSlice = slices[i + 1]\n\n                    let y0\n                    if (!prevSlice) y0 = y\n                    else y0 = y - (y - prevSlice[0]) / 2\n\n                    let sliceHeight\n                    if (!nextSlice) sliceHeight = height - y0\n                    else sliceHeight = y - y0 + (nextSlice[0] - y) / 2\n\n                    return {\n                        id: y,\n                        x0: 0,\n                        x: 0,\n                        y0,\n                        y,\n                        width,\n                        height: sliceHeight,\n                        points: slicePoints.reverse(),\n                    }\n                })\n        }\n    }, [enableSlices, points])\n}\n\nexport const useLine = ({\n    data,\n    xScale: xScaleSpec = LineDefaultProps.xScale,\n    xFormat,\n    yScale: yScaleSpec = LineDefaultProps.yScale,\n    yFormat,\n    width,\n    height,\n    colors = LineDefaultProps.colors,\n    curve = LineDefaultProps.curve,\n    areaBaselineValue = LineDefaultProps.areaBaselineValue,\n    pointColor = LineDefaultProps.pointColor,\n    pointBorderColor = LineDefaultProps.pointBorderColor,\n    enableSlices = LineDefaultProps.enableSlicesTooltip,\n}) => {\n    const formatX = useValueFormatter(xFormat)\n    const formatY = useValueFormatter(yFormat)\n    const getColor = useOrdinalColorScale(colors, 'id')\n    const theme = useTheme()\n    const getPointColor = useInheritedColor(pointColor, theme)\n    const getPointBorderColor = useInheritedColor(pointBorderColor, theme)\n    const [hiddenIds, setHiddenIds] = useState([])\n\n    const {\n        xScale,\n        yScale,\n        series: rawSeries,\n    } = useMemo(\n        () =>\n            computeXYScalesForSeries(\n                data.filter(item => hiddenIds.indexOf(item.id) === -1),\n                xScaleSpec,\n                yScaleSpec,\n                width,\n                height\n            ),\n        [data, hiddenIds, xScaleSpec, yScaleSpec, width, height]\n    )\n\n    const { legendData, series } = useMemo(() => {\n        const dataWithColor = data.map(line => ({\n            id: line.id,\n            label: line.id,\n            color: getColor(line),\n        }))\n        const series = dataWithColor\n            .map(datum => ({\n                ...rawSeries.find(serie => serie.id === datum.id),\n                color: datum.color,\n            }))\n            .filter(item => Boolean(item.id))\n        const legendData = dataWithColor\n            .map(item => ({ ...item, hidden: !series.find(serie => serie.id === item.id) }))\n            .reverse()\n\n        return { legendData, series }\n    }, [data, rawSeries, getColor])\n\n    const toggleSerie = useCallback(id => {\n        setHiddenIds(state =>\n            state.indexOf(id) > -1 ? state.filter(item => item !== id) : [...state, id]\n        )\n    }, [])\n\n    const points = usePoints({\n        series,\n        getPointColor,\n        getPointBorderColor,\n        formatX,\n        formatY,\n    })\n\n    const slices = useSlices({\n        enableSlices,\n        points,\n        width,\n        height,\n    })\n\n    const lineGenerator = useLineGenerator({ curve })\n    const areaGenerator = useAreaGenerator({\n        curve,\n        yScale,\n        areaBaselineValue,\n    })\n\n    return {\n        legendData,\n        toggleSerie,\n        lineGenerator,\n        areaGenerator,\n        getColor,\n        series,\n        xScale,\n        yScale,\n        slices,\n        points,\n    }\n}\n", "/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport { memo } from 'react'\nimport PropTypes from 'prop-types'\nimport { useSpring, animated } from '@react-spring/web'\nimport { useAnimatedPath, useMotionConfig, blendModePropType } from '@nivo/core'\n\nconst AreaPath = ({ areaBlendMode, areaOpacity, color, fill, path }) => {\n    const { animate, config: springConfig } = useMotionConfig()\n\n    const animatedPath = useAnimatedPath(path)\n    const animatedProps = useSpring({\n        color,\n        config: springConfig,\n        immediate: !animate,\n    })\n\n    return (\n        <animated.path\n            d={animatedPath}\n            fill={fill ? fill : animatedProps.color}\n            fillOpacity={areaOpacity}\n            strokeWidth={0}\n            style={{\n                mixBlendMode: areaBlendMode,\n            }}\n        />\n    )\n}\n\nAreaPath.propTypes = {\n    areaBlendMode: blendModePropType.isRequired,\n    areaOpacity: PropTypes.number.isRequired,\n    color: PropTypes.string,\n    fill: PropTypes.string,\n    path: PropTypes.string.isRequired,\n}\n\nconst Areas = ({ areaGenerator, areaOpacity, areaBlendMode, lines }) => {\n    const computedLines = lines.slice(0).reverse()\n\n    return (\n        <g>\n            {computedLines.map(line => (\n                <AreaPath\n                    key={line.id}\n                    path={areaGenerator(line.data.map(d => d.position))}\n                    {...{ areaOpacity, areaBlendMode, ...line }}\n                />\n            ))}\n        </g>\n    )\n}\n\nAreas.propTypes = {\n    areaGenerator: PropTypes.func.isRequired,\n    areaOpacity: PropTypes.number.isRequired,\n    areaBlendMode: blendModePropType.isRequired,\n    lines: PropTypes.arrayOf(PropTypes.object).isRequired,\n}\n\nexport default memo(Areas)\n", "/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport { memo, useMemo } from 'react'\nimport PropTypes from 'prop-types'\nimport { animated } from '@react-spring/web'\nimport { useAnimatedPath } from '@nivo/core'\n\nconst LinesItem = ({ lineGenerator, points, color, thickness }) => {\n    const path = useMemo(() => lineGenerator(points), [lineGenerator, points])\n    const animatedPath = useAnimatedPath(path)\n\n    return <animated.path d={animatedPath} fill=\"none\" strokeWidth={thickness} stroke={color} />\n}\n\nLinesItem.propTypes = {\n    points: PropTypes.arrayOf(\n        PropTypes.shape({\n            x: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n            y: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n        })\n    ),\n    lineGenerator: PropTypes.func.isRequired,\n    color: PropTypes.string.isRequired,\n    thickness: PropTypes.number.isRequired,\n}\n\nexport default memo(LinesItem)\n", "/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport { memo } from 'react'\nimport PropTypes from 'prop-types'\nimport LinesItem from './LinesItem'\n\nconst Lines = ({ lines, lineGenerator, lineWidth }) => {\n    return lines\n        .slice(0)\n        .reverse()\n        .map(({ id, data, color }) => (\n            <LinesItem\n                key={id}\n                id={id}\n                points={data.map(d => d.position)}\n                lineGenerator={lineGenerator}\n                color={color}\n                thickness={lineWidth}\n            />\n        ))\n}\n\nLines.propTypes = {\n    lines: PropTypes.arrayOf(\n        PropTypes.shape({\n            id: PropTypes.oneOfType([PropTypes.string, PropTypes.number]).isRequired,\n            color: PropTypes.string.isRequired,\n            data: PropTypes.arrayOf(\n                PropTypes.shape({\n                    data: PropTypes.shape({\n                        x: PropTypes.oneOfType([\n                            PropTypes.string,\n                            PropTypes.number,\n                            PropTypes.instanceOf(Date),\n                        ]),\n                        y: PropTypes.oneOfType([\n                            PropTypes.string,\n                            PropTypes.number,\n                            PropTypes.instanceOf(Date),\n                        ]),\n                    }).isRequired,\n                    position: PropTypes.shape({\n                        x: PropTypes.number,\n                        y: PropTypes.number,\n                    }).isRequired,\n                })\n            ).isRequired,\n        })\n    ).isRequired,\n    lineWidth: PropTypes.number.isRequired,\n    lineGenerator: PropTypes.func.isRequired,\n}\n\nexport default memo(Lines)\n", "/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport { createElement, memo, useCallback } from 'react'\nimport PropTypes from 'prop-types'\nimport { useTooltip } from '@nivo/tooltip'\n\nconst SlicesItem = ({ slice, axis, debug, tooltip, isCurrent, setCurrent }) => {\n    const { showTooltipFromEvent, hideTooltip } = useTooltip()\n\n    const handleMouseEnter = useCallback(\n        event => {\n            showTooltipFromEvent(createElement(tooltip, { slice, axis }), event, 'right')\n            setCurrent(slice)\n        },\n        [showTooltipFromEvent, tooltip, slice]\n    )\n\n    const handleMouseMove = useCallback(\n        event => {\n            showTooltipFromEvent(createElement(tooltip, { slice, axis }), event, 'right')\n        },\n        [showTooltipFromEvent, tooltip, slice]\n    )\n\n    const handleMouseLeave = useCallback(() => {\n        hideTooltip()\n        setCurrent(null)\n    }, [hideTooltip])\n\n    return (\n        <rect\n            x={slice.x0}\n            y={slice.y0}\n            width={slice.width}\n            height={slice.height}\n            stroke=\"red\"\n            strokeWidth={debug ? 1 : 0}\n            strokeOpacity={0.75}\n            fill=\"red\"\n            fillOpacity={isCurrent && debug ? 0.35 : 0}\n            onMouseEnter={handleMouseEnter}\n            onMouseMove={handleMouseMove}\n            onMouseLeave={handleMouseLeave}\n        />\n    )\n}\n\nSlicesItem.propTypes = {\n    slice: PropTypes.object.isRequired,\n    axis: PropTypes.oneOf(['x', 'y']).isRequired,\n    debug: PropTypes.bool.isRequired,\n    height: PropTypes.number.isRequired,\n    tooltip: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\n    isCurrent: PropTypes.bool.isRequired,\n    setCurrent: PropTypes.func.isRequired,\n}\n\nexport default memo(SlicesItem)\n", "/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport { memo } from 'react'\nimport PropTypes from 'prop-types'\nimport SlicesItem from './SlicesItem'\n\nconst Slices = ({ slices, axis, debug, height, tooltip, current, setCurrent }) => {\n    return slices.map(slice => (\n        <SlicesItem\n            key={slice.id}\n            slice={slice}\n            axis={axis}\n            debug={debug}\n            height={height}\n            tooltip={tooltip}\n            setCurrent={setCurrent}\n            isCurrent={current !== null && current.id === slice.id}\n        />\n    ))\n}\n\nSlices.propTypes = {\n    slices: PropTypes.arrayOf(\n        PropTypes.shape({\n            id: PropTypes.oneOfType([\n                PropTypes.number,\n                PropTypes.string,\n                PropTypes.instanceOf(Date),\n            ]).isRequired,\n            x: PropTypes.number.isRequired,\n            y: PropTypes.number.isRequired,\n            points: PropTypes.arrayOf(PropTypes.object).isRequired,\n        })\n    ).isRequired,\n    axis: PropTypes.oneOf(['x', 'y']).isRequired,\n    debug: PropTypes.bool.isRequired,\n    height: PropTypes.number.isRequired,\n    tooltip: PropTypes.oneOfType([PropTypes.func, PropTypes.object]).isRequired,\n    current: PropTypes.object,\n    setCurrent: PropTypes.func.isRequired,\n}\n\nexport default memo(Slices)\n", "/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport { memo } from 'react'\nimport PropTypes from 'prop-types'\nimport { getLabelGenerator, DotsItem, useTheme } from '@nivo/core'\n\nconst Points = ({ points, symbol, size, borderWidth, enableLabel, label, labelYOffset }) => {\n    const theme = useTheme()\n    const getLabel = getLabelGenerator(label)\n\n    /**\n     * We reverse the `points` array so that points from the lower lines in stacked lines\n     * graph are drawn on top. See https://github.com/plouc/nivo/issues/1051.\n     */\n    const mappedPoints = points.reverse().map(point => {\n        const mappedPoint = {\n            id: point.id,\n            x: point.x,\n            y: point.y,\n            datum: point.data,\n            fill: point.color,\n            stroke: point.borderColor,\n            label: enableLabel ? getLabel(point.data) : null,\n        }\n\n        return mappedPoint\n    })\n\n    return (\n        <g>\n            {mappedPoints.map(point => (\n                <DotsItem\n                    key={point.id}\n                    x={point.x}\n                    y={point.y}\n                    datum={point.datum}\n                    symbol={symbol}\n                    size={size}\n                    color={point.fill}\n                    borderWidth={borderWidth}\n                    borderColor={point.stroke}\n                    label={point.label}\n                    labelYOffset={labelYOffset}\n                    theme={theme}\n                />\n            ))}\n        </g>\n    )\n}\n\nPoints.propTypes = {\n    points: PropTypes.arrayOf(PropTypes.object),\n    symbol: PropTypes.func,\n    size: PropTypes.number.isRequired,\n    color: PropTypes.func.isRequired,\n    borderWidth: PropTypes.number.isRequired,\n    borderColor: PropTypes.func.isRequired,\n    enableLabel: PropTypes.bool.isRequired,\n    label: PropTypes.oneOfType([PropTypes.string, PropTypes.func]).isRequired,\n    labelYOffset: PropTypes.number,\n}\n\nexport default memo(Points)\n", "/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport { createElement, memo, useCallback } from 'react'\nimport PropTypes from 'prop-types'\nimport { useTooltip } from '@nivo/tooltip'\nimport { Mesh as BaseMesh } from '@nivo/voronoi'\n\nconst Mesh = ({\n    points,\n    width,\n    height,\n    margin,\n    setCurrent,\n    onMouseEnter,\n    onMouseMove,\n    onMouseLeave,\n    onClick,\n    tooltip,\n    debug,\n}) => {\n    const { showTooltipAt, hideTooltip } = useTooltip()\n\n    const handleMouseEnter = useCallback(\n        (point, event) => {\n            showTooltipAt(\n                createElement(tooltip, { point }),\n                [point.x + margin.left, point.y + margin.top],\n                'top'\n            )\n            setCurrent(point)\n            onMouseEnter && onMouseEnter(point, event)\n        },\n        [setCurrent, showTooltipAt, tooltip, onMouseEnter, margin]\n    )\n\n    const handleMouseMove = useCallback(\n        (point, event) => {\n            showTooltipAt(\n                createElement(tooltip, { point }),\n                [point.x + margin.left, point.y + margin.top],\n                'top'\n            )\n            setCurrent(point)\n            onMouseMove && onMouseMove(point, event)\n        },\n        [setCurrent, showTooltipAt, tooltip, onMouseMove]\n    )\n\n    const handleMouseLeave = useCallback(\n        (point, event) => {\n            hideTooltip()\n            setCurrent(null)\n            onMouseLeave && onMouseLeave(point, event)\n        },\n        [hideTooltip, setCurrent, onMouseLeave]\n    )\n\n    const handleClick = useCallback(\n        (point, event) => {\n            onClick && onClick(point, event)\n        },\n        [onClick]\n    )\n\n    return (\n        <BaseMesh\n            nodes={points}\n            width={width}\n            height={height}\n            onMouseEnter={handleMouseEnter}\n            onMouseMove={handleMouseMove}\n            onMouseLeave={handleMouseLeave}\n            onClick={handleClick}\n            debug={debug}\n        />\n    )\n}\n\nMesh.propTypes = {\n    points: PropTypes.arrayOf(PropTypes.object).isRequired,\n    width: PropTypes.number.isRequired,\n    height: PropTypes.number.isRequired,\n    margin: PropTypes.object.isRequired,\n    setCurrent: PropTypes.func.isRequired,\n    onMouseEnter: PropTypes.func,\n    onMouseMove: PropTypes.func,\n    onMouseLeave: PropTypes.func,\n    onClick: PropTypes.func,\n    tooltip: PropTypes.oneOfType([PropTypes.func, PropTypes.object]).isRequired,\n    debug: PropTypes.bool.isRequired,\n}\n\nexport default memo(Mesh)\n", "/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport { Fragment, useState } from 'react'\nimport {\n    bindDefs,\n    withContainer,\n    useDimensions,\n    useTheme,\n    SvgWrapper,\n    CartesianMarkers,\n} from '@nivo/core'\nimport { useInheritedColor } from '@nivo/colors'\nimport { Axes, Grid } from '@nivo/axes'\nimport { BoxLegendSvg } from '@nivo/legends'\nimport { Crosshair } from '@nivo/tooltip'\nimport { useLine } from './hooks'\nimport { LinePropTypes, LineDefaultProps } from './props'\nimport Areas from './Areas'\nimport Lines from './Lines'\nimport Slices from './Slices'\nimport Points from './Points'\nimport Mesh from './Mesh'\n\nconst Line = props => {\n    const {\n        data,\n        xScale: xScaleSpec,\n        xFormat,\n        yScale: yScaleSpec,\n        yFormat,\n        layers,\n        curve,\n        areaBaselineValue,\n\n        colors,\n\n        margin: partialMargin,\n        width,\n        height,\n\n        axisTop,\n        axisRight,\n        axisBottom,\n        axisLeft,\n        enableGridX,\n        enableGridY,\n        gridXValues,\n        gridYValues,\n\n        lineWidth,\n        enableArea,\n        areaOpacity,\n        areaBlendMode,\n\n        enablePoints,\n        pointSymbol,\n        pointSize,\n        pointColor,\n        pointBorderWidth,\n        pointBorderColor,\n        enablePointLabel,\n        pointLabel,\n        pointLabelYOffset,\n\n        defs,\n        fill,\n\n        markers,\n\n        legends,\n\n        isInteractive,\n\n        useMesh,\n        debugMesh,\n\n        onMouseEnter,\n        onMouseMove,\n        onMouseLeave,\n        onClick,\n\n        tooltip,\n\n        enableSlices,\n        debugSlices,\n        sliceTooltip,\n\n        enableCrosshair,\n        crosshairType,\n\n        role,\n    } = props\n\n    const { margin, innerWidth, innerHeight, outerWidth, outerHeight } = useDimensions(\n        width,\n        height,\n        partialMargin\n    )\n\n    const {\n        legendData,\n        toggleSerie,\n        lineGenerator,\n        areaGenerator,\n        series,\n        xScale,\n        yScale,\n        slices,\n        points,\n    } = useLine({\n        data,\n        xScale: xScaleSpec,\n        xFormat,\n        yScale: yScaleSpec,\n        yFormat,\n        width: innerWidth,\n        height: innerHeight,\n        colors,\n        curve,\n        areaBaselineValue,\n        pointColor,\n        pointBorderColor,\n        enableSlices,\n    })\n\n    const theme = useTheme()\n    const getPointColor = useInheritedColor(pointColor, theme)\n    const getPointBorderColor = useInheritedColor(pointBorderColor, theme)\n\n    const [currentPoint, setCurrentPoint] = useState(null)\n    const [currentSlice, setCurrentSlice] = useState(null)\n\n    const layerById = {\n        grid: (\n            <Grid\n                key=\"grid\"\n                theme={theme}\n                width={innerWidth}\n                height={innerHeight}\n                xScale={enableGridX ? xScale : null}\n                yScale={enableGridY ? yScale : null}\n                xValues={gridXValues}\n                yValues={gridYValues}\n            />\n        ),\n        markers: (\n            <CartesianMarkers\n                key=\"markers\"\n                markers={markers}\n                width={innerWidth}\n                height={innerHeight}\n                xScale={xScale}\n                yScale={yScale}\n                theme={theme}\n            />\n        ),\n        axes: (\n            <Axes\n                key=\"axes\"\n                xScale={xScale}\n                yScale={yScale}\n                width={innerWidth}\n                height={innerHeight}\n                theme={theme}\n                top={axisTop}\n                right={axisRight}\n                bottom={axisBottom}\n                left={axisLeft}\n            />\n        ),\n        areas: null,\n        lines: (\n            <Lines key=\"lines\" lines={series} lineGenerator={lineGenerator} lineWidth={lineWidth} />\n        ),\n        slices: null,\n        points: null,\n        crosshair: null,\n        mesh: null,\n        legends: legends.map((legend, i) => (\n            <BoxLegendSvg\n                key={`legend.${i}`}\n                {...legend}\n                containerWidth={innerWidth}\n                containerHeight={innerHeight}\n                data={legend.data || legendData}\n                theme={theme}\n                toggleSerie={legend.toggleSerie ? toggleSerie : undefined}\n            />\n        )),\n    }\n\n    const boundDefs = bindDefs(defs, series, fill)\n\n    if (enableArea) {\n        layerById.areas = (\n            <Areas\n                key=\"areas\"\n                areaGenerator={areaGenerator}\n                areaOpacity={areaOpacity}\n                areaBlendMode={areaBlendMode}\n                lines={series}\n            />\n        )\n    }\n\n    if (isInteractive && enableSlices !== false) {\n        layerById.slices = (\n            <Slices\n                key=\"slices\"\n                slices={slices}\n                axis={enableSlices}\n                debug={debugSlices}\n                height={innerHeight}\n                tooltip={sliceTooltip}\n                current={currentSlice}\n                setCurrent={setCurrentSlice}\n            />\n        )\n    }\n\n    if (enablePoints) {\n        layerById.points = (\n            <Points\n                key=\"points\"\n                points={points}\n                symbol={pointSymbol}\n                size={pointSize}\n                color={getPointColor}\n                borderWidth={pointBorderWidth}\n                borderColor={getPointBorderColor}\n                enableLabel={enablePointLabel}\n                label={pointLabel}\n                labelYOffset={pointLabelYOffset}\n            />\n        )\n    }\n\n    if (isInteractive && enableCrosshair) {\n        if (currentPoint !== null) {\n            layerById.crosshair = (\n                <Crosshair\n                    key=\"crosshair\"\n                    width={innerWidth}\n                    height={innerHeight}\n                    x={currentPoint.x}\n                    y={currentPoint.y}\n                    type={crosshairType}\n                />\n            )\n        }\n        if (currentSlice !== null) {\n            layerById.crosshair = (\n                <Crosshair\n                    key=\"crosshair\"\n                    width={innerWidth}\n                    height={innerHeight}\n                    x={currentSlice.x}\n                    y={currentSlice.y}\n                    type={enableSlices}\n                />\n            )\n        }\n    }\n\n    if (isInteractive && useMesh && enableSlices === false) {\n        layerById.mesh = (\n            <Mesh\n                key=\"mesh\"\n                points={points}\n                width={innerWidth}\n                height={innerHeight}\n                margin={margin}\n                current={currentPoint}\n                setCurrent={setCurrentPoint}\n                onMouseEnter={onMouseEnter}\n                onMouseMove={onMouseMove}\n                onMouseLeave={onMouseLeave}\n                onClick={onClick}\n                tooltip={tooltip}\n                debug={debugMesh}\n            />\n        )\n    }\n\n    return (\n        <SvgWrapper\n            defs={boundDefs}\n            width={outerWidth}\n            height={outerHeight}\n            margin={margin}\n            role={role}\n        >\n            {layers.map((layer, i) => {\n                if (typeof layer === 'function') {\n                    return (\n                        <Fragment key={i}>\n                            {layer({\n                                ...props,\n                                innerWidth,\n                                innerHeight,\n                                series,\n                                slices,\n                                points,\n                                xScale,\n                                yScale,\n                                lineGenerator,\n                                areaGenerator,\n                                currentPoint,\n                                setCurrentPoint,\n                                currentSlice,\n                                setCurrentSlice,\n                            })}\n                        </Fragment>\n                    )\n                }\n\n                return layerById[layer]\n            })}\n        </SvgWrapper>\n    )\n}\n\nLine.propTypes = LinePropTypes\nLine.defaultProps = LineDefaultProps\n\nexport default withContainer(Line)\n", "/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport { ResponsiveWrapper } from '@nivo/core'\nimport Line from './Line'\n\nconst ResponsiveLine = props => (\n    <ResponsiveWrapper>\n        {({ width, height }) => <Line width={width} height={height} {...props} />}\n    </ResponsiveWrapper>\n)\n\nexport default ResponsiveLine\n", "/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport { createElement, useRef, useEffect, useState, useCallback, forwardRef } from 'react'\nimport {\n    withContainer,\n    useDimensions,\n    useTheme,\n    getRelativeCursor,\n    isCursorInRect,\n} from '@nivo/core'\nimport { renderAxesToCanvas, renderGridLinesToCanvas } from '@nivo/axes'\nimport { renderLegendToCanvas } from '@nivo/legends'\nimport { useTooltip } from '@nivo/tooltip'\nimport { useVoronoiMesh, renderVoronoiToCanvas, renderVoronoiCellToCanvas } from '@nivo/voronoi'\nimport { LineCanvasPropTypes, LineCanvasDefaultProps } from './props'\nimport { useLine } from './hooks'\n\nconst LineCanvas = ({\n    width,\n    height,\n    margin: partialMargin,\n    pixelRatio,\n\n    data,\n    xScale: xScaleSpec,\n    xFormat,\n    yScale: yScaleSpec,\n    yFormat,\n    curve,\n\n    layers,\n\n    colors,\n    lineWidth,\n\n    enableArea,\n    areaBaselineValue,\n    areaOpacity,\n\n    enablePoints,\n    pointSize,\n    pointColor,\n    pointBorderWidth,\n    pointBorderColor,\n\n    enableGridX,\n    gridXValues,\n    enableGridY,\n    gridYValues,\n    axisTop,\n    axisRight,\n    axisBottom,\n    axisLeft,\n\n    legends,\n\n    isInteractive,\n    debugMesh,\n    //onMouseEnter,\n    //onMouseMove,\n    onMouseLeave,\n    onClick,\n    tooltip,\n\n    canvasRef,\n}) => {\n    const canvasEl = useRef(null)\n    const { margin, innerWidth, innerHeight, outerWidth, outerHeight } = useDimensions(\n        width,\n        height,\n        partialMargin\n    )\n    const theme = useTheme()\n    const [currentPoint, setCurrentPoint] = useState(null)\n\n    const { lineGenerator, areaGenerator, series, xScale, yScale, points } = useLine({\n        data,\n        xScale: xScaleSpec,\n        xFormat,\n        yScale: yScaleSpec,\n        yFormat,\n        width: innerWidth,\n        height: innerHeight,\n        colors,\n        curve,\n        areaBaselineValue,\n        pointColor,\n        pointBorderColor,\n    })\n\n    const { delaunay, voronoi } = useVoronoiMesh({\n        points,\n        width: innerWidth,\n        height: innerHeight,\n        debug: debugMesh,\n    })\n\n    useEffect(() => {\n        if (canvasRef) {\n            canvasRef.current = canvasEl.current\n        }\n\n        canvasEl.current.width = outerWidth * pixelRatio\n        canvasEl.current.height = outerHeight * pixelRatio\n\n        const ctx = canvasEl.current.getContext('2d')\n\n        ctx.scale(pixelRatio, pixelRatio)\n\n        ctx.fillStyle = theme.background\n        ctx.fillRect(0, 0, outerWidth, outerHeight)\n        ctx.translate(margin.left, margin.top)\n\n        layers.forEach(layer => {\n            if (typeof layer === 'function') {\n                layer({\n                    ctx,\n                    innerWidth,\n                    innerHeight,\n                    series,\n                    points,\n                    xScale,\n                    yScale,\n                    lineWidth,\n                    lineGenerator,\n                    areaGenerator,\n                    currentPoint,\n                    setCurrentPoint,\n                })\n            }\n\n            if (layer === 'grid' && theme.grid.line.strokeWidth > 0) {\n                ctx.lineWidth = theme.grid.line.strokeWidth\n                ctx.strokeStyle = theme.grid.line.stroke\n\n                enableGridX &&\n                    renderGridLinesToCanvas(ctx, {\n                        width: innerWidth,\n                        height: innerHeight,\n                        scale: xScale,\n                        axis: 'x',\n                        values: gridXValues,\n                    })\n\n                enableGridY &&\n                    renderGridLinesToCanvas(ctx, {\n                        width: innerWidth,\n                        height: innerHeight,\n                        scale: yScale,\n                        axis: 'y',\n                        values: gridYValues,\n                    })\n            }\n\n            if (layer === 'axes') {\n                renderAxesToCanvas(ctx, {\n                    xScale,\n                    yScale,\n                    width: innerWidth,\n                    height: innerHeight,\n                    top: axisTop,\n                    right: axisRight,\n                    bottom: axisBottom,\n                    left: axisLeft,\n                    theme,\n                })\n            }\n\n            if (layer === 'areas' && enableArea === true) {\n                ctx.save()\n                ctx.globalAlpha = areaOpacity\n\n                areaGenerator.context(ctx)\n                series.forEach(serie => {\n                    ctx.fillStyle = serie.color\n                    ctx.beginPath()\n                    areaGenerator(serie.data.map(d => d.position))\n                    ctx.fill()\n                })\n\n                ctx.restore()\n            }\n\n            if (layer === 'lines') {\n                lineGenerator.context(ctx)\n                series.forEach(serie => {\n                    ctx.strokeStyle = serie.color\n                    ctx.lineWidth = lineWidth\n                    ctx.beginPath()\n                    lineGenerator(serie.data.map(d => d.position))\n                    ctx.stroke()\n                })\n            }\n\n            if (layer === 'points' && enablePoints === true && pointSize > 0) {\n                points.forEach(point => {\n                    ctx.fillStyle = point.color\n                    ctx.beginPath()\n                    ctx.arc(point.x, point.y, pointSize / 2, 0, 2 * Math.PI)\n                    ctx.fill()\n\n                    if (pointBorderWidth > 0) {\n                        ctx.strokeStyle = point.borderColor\n                        ctx.lineWidth = pointBorderWidth\n                        ctx.stroke()\n                    }\n                })\n            }\n\n            if (layer === 'mesh' && debugMesh === true) {\n                renderVoronoiToCanvas(ctx, voronoi)\n                if (currentPoint) {\n                    renderVoronoiCellToCanvas(ctx, voronoi, currentPoint.index)\n                }\n            }\n\n            if (layer === 'legends') {\n                const legendData = series\n                    .map(serie => ({\n                        id: serie.id,\n                        label: serie.id,\n                        color: serie.color,\n                    }))\n                    .reverse()\n\n                legends.forEach(legend => {\n                    renderLegendToCanvas(ctx, {\n                        ...legend,\n                        data: legend.data || legendData,\n                        containerWidth: innerWidth,\n                        containerHeight: innerHeight,\n                        theme,\n                    })\n                })\n            }\n        })\n    }, [\n        canvasEl,\n        outerWidth,\n        outerHeight,\n        layers,\n        theme,\n        lineGenerator,\n        series,\n        xScale,\n        yScale,\n        enableGridX,\n        gridXValues,\n        enableGridY,\n        gridYValues,\n        axisTop,\n        axisRight,\n        axisBottom,\n        axisLeft,\n        legends,\n        points,\n        enablePoints,\n        pointSize,\n        currentPoint,\n    ])\n\n    const getPointFromMouseEvent = useCallback(\n        event => {\n            const [x, y] = getRelativeCursor(canvasEl.current, event)\n            if (!isCursorInRect(margin.left, margin.top, innerWidth, innerHeight, x, y)) return null\n\n            const pointIndex = delaunay.find(x - margin.left, y - margin.top)\n            return points[pointIndex]\n        },\n        [canvasEl, margin, innerWidth, innerHeight, delaunay]\n    )\n\n    const { showTooltipFromEvent, hideTooltip } = useTooltip()\n\n    const handleMouseHover = useCallback(\n        event => {\n            const point = getPointFromMouseEvent(event)\n            setCurrentPoint(point)\n\n            if (point) {\n                showTooltipFromEvent(createElement(tooltip, { point }), event)\n            } else {\n                hideTooltip()\n            }\n        },\n        [getPointFromMouseEvent, setCurrentPoint, showTooltipFromEvent, hideTooltip, tooltip]\n    )\n\n    const handleMouseLeave = useCallback(\n        event => {\n            hideTooltip()\n            setCurrentPoint(null)\n            currentPoint && onMouseLeave && onMouseLeave(currentPoint, event)\n        },\n        [hideTooltip, setCurrentPoint, onMouseLeave]\n    )\n\n    const handleClick = useCallback(\n        event => {\n            if (onClick) {\n                const point = getPointFromMouseEvent(event)\n                point && onClick(point, event)\n            }\n        },\n        [getPointFromMouseEvent, onClick]\n    )\n\n    return (\n        <canvas\n            ref={canvasEl}\n            width={outerWidth * pixelRatio}\n            height={outerHeight * pixelRatio}\n            style={{\n                width: outerWidth,\n                height: outerHeight,\n                cursor: isInteractive ? 'auto' : 'normal',\n            }}\n            onMouseEnter={isInteractive ? handleMouseHover : undefined}\n            onMouseMove={isInteractive ? handleMouseHover : undefined}\n            onMouseLeave={isInteractive ? handleMouseLeave : undefined}\n            onClick={isInteractive ? handleClick : undefined}\n        />\n    )\n}\n\nLineCanvas.propTypes = LineCanvasPropTypes\nLineCanvas.defaultProps = LineCanvasDefaultProps\n\nconst LineCanvasWithContainer = withContainer(LineCanvas)\n\nexport default forwardRef((props, ref) => <LineCanvasWithContainer {...props} canvasRef={ref} />)\n", "/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport { forwardRef } from 'react'\nimport { ResponsiveWrapper } from '@nivo/core'\nimport LineCanvas from './LineCanvas'\n\nconst ResponsiveLineCanvas = (props, ref) => (\n    <ResponsiveWrapper>\n        {({ width, height }) => <LineCanvas width={width} height={height} {...props} ref={ref} />}\n    </ResponsiveWrapper>\n)\n\nexport default forwardRef(ResponsiveLineCanvas)\n"],
  "mappings": "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",
  "names": ["noop", "Set", "noop", "collection", "collection", "n", "colors", "i", "scheme", "scheme", "scheme", "scheme", "scheme", "scheme", "scheme", "scheme", "scheme", "scheme", "scheme", "scheme", "scheme", "scheme", "scheme", "scheme", "scheme", "scheme", "scheme", "scheme", "scheme", "scheme", "scheme", "scheme", "scheme", "scheme", "scheme", "t", "format", "m", "l", "n", "r", "g", "b", "a", "o", "k", "h", "s", "m2", "o", "r", "g", "b", "y", "x", "z", "l", "a", "b", "k", "y", "x", "z", "t", "o", "h", "h", "c", "l", "o", "k", "o", "r", "g", "b", "l", "k", "s", "h", "a", "t", "ts", "c", "t", "x", "t", "n", "t", "categoricalColorSchemes", "nivo", "category10", "schemeCategory10", "accent", "schemeAccent", "dark2", "schemeDark2", "paired", "schemePaired", "pastel1", "schemePastel1", "pastel2", "schemePastel2", "set1", "schemeSet1", "set2", "schemeSet2", "set3", "schemeSet3", "categoricalColorSchemeIds", "Object", "keys", "divergingColorSchemes", "brown_blueGreen", "schemeBrBG", "purpleRed_green", "schemePRGn", "pink_yellowGreen", "schemePiYG", "purple_orange", "schemePuOr", "red_blue", "schemeRdBu", "red_grey", "schemeRdGy", "red_yellow_blue", "schemeRdYlBu", "red_yellow_green", "schemeRdYlGn", "spectral", "schemeSpectral", "divergingColorSchemeIds", "divergingColorInterpolators", "interpolateBrBG", "interpolatePRGn", "interpolatePiYG", "interpolatePuOr", "interpolateRdBu", "interpolateRdGy", "interpolateRdYlBu", "interpolateRdYlGn", "interpolateSpectral", "sequentialColorSchemes", "blues", "schemeBlues", "greens", "schemeGreens", "greys", "schemeGreys", "oranges", "schemeOranges", "purples", "schemePurples", "reds", "schemeReds", "blue_green", "schemeBuGn", "blue_purple", "schemeBuPu", "green_blue", "schemeGnBu", "orange_red", "schemeOrRd", "purple_blue_green", "schemePuBuGn", "purple_blue", "schemePuBu", "purple_red", "schemePuRd", "red_purple", "schemeRdPu", "yellow_green_blue", "schemeYlGnBu", "yellow_green", "schemeYlGn", "yellow_orange_brown", "schemeYlOrBr", "yellow_orange_red", "schemeYlOrRd", "sequentialColorSchemeIds", "sequentialColorInterpolators", "interpolateBlues", "interpolateGreens", "interpolateGreys", "interpolateOranges", "interpolatePurples", "interpolateReds", "turbo", "interpolateTurbo", "viridis", "interpolateViridis", "inferno", "magma", "plasma", "cividis", "interpolateCividis", "warm", "cool", "cubehelixDefault", "interpolateCubehelixDefault", "interpolateBuGn", "interpolateBuPu", "interpolateGnBu", "interpolateOrRd", "interpolatePuBuGn", "interpolatePuBu", "interpolatePuRd", "interpolateRdPu", "interpolateYlGnBu", "interpolateYlGn", "interpolateYlOrBr", "interpolateYlOrRd", "colorSchemes", "colorSchemeIds", "isCategoricalColorScheme", "scheme", "includes", "isDivergingColorScheme", "isSequentialColorScheme", "cyclicalColorInterpolators", "rainbow", "interpolateRainbow", "sinebow", "interpolateSinebow", "colorInterpolators", "colorInterpolatorIds", "getInheritedColorGenerator", "config", "theme", "_isPlainObject", "Error", "themeColor", "_get", "from", "getColor", "d", "Array", "isArray", "modifiers", "o", "u", "modifier", "modifierType", "amount", "push", "color", "brighter", "darker", "opacity", "length", "datum", "reduce", "modify", "rgb", "toString", "useInheritedColor", "useMemo", "ordinalColorsPropType", "PropTypes", "oneOfType", "func", "arrayOf", "string", "shape", "oneOf", "isRequired", "size", "number", "inheritedColorPropType", "array", "getOrdinalColorScale", "config", "identity", "getIdentity", "datum", "_get", "Array", "isArray", "scale", "scaleOrdinal", "generator", "_isPlainObject", "scheme", "isCategoricalColorScheme", "colorSchemes", "isDivergingColorScheme", "size", "Error", "d", "isSequentialColorScheme", "useOrdinalColorScale", "useMemo", "fn", "time", "i", "t", "each", "e", "import_react", "a", "b", "i", "fn", "ctx", "globals", "rgb", "rgba", "hsl", "hsla", "color", "p", "t", "h", "s", "l", "r", "g", "config", "range", "_", "p2", "p3", "p4", "output", "update", "useLayoutEffect", "React", "import_react", "React", "import_react", "animated", "i", "_extends", "host", "useLayoutEffect", "observer", "update", "_extends", "i", "defaults", "to", "_", "linear", "t", "_extends", "config", "to", "props", "result", "priority", "node", "i", "p", "e", "n", "loop", "update", "flush", "onStart", "onChange", "onRest", "defaults", "SpringRef", "_getProps", "updates", "springs", "useLayoutEffect", "x", "TransitionPhase", "useLayoutEffect", "t", "i", "_extends", "a", "b", "p", "to", "config", "transitions", "priority", "update", "_objectWithoutPropertiesLoose", "i", "n", "prefix", "v", "x", "y", "z", "t", "t0", "t1", "start", "d", "start", "k", "start", "start", "start", "start", "i", "start", "start", "start", "k", "start", "start", "start", "i", "start", "start", "start", "k", "precisionCutOffs", "date", "setMilliseconds", "setSeconds", "setMinutes", "setHours", "setDate", "setMonth", "precisionCutOffsByType", "millisecond", "second", "slice", "minute", "hour", "day", "month", "year", "createPrecisionMethod", "precision", "forEach", "cutOff", "createDateNormalizer", "n", "t", "format", "e", "u", "useUTC", "precisionFn", "value", "Date", "parseTime", "utcParse", "timeParse", "createLinearScale", "data", "size", "axis", "minValue", "maxValue", "min", "f", "s", "max", "m", "stacked", "reverse", "clamp", "nice", "minStacked", "maxStacked", "scale", "scaleLinear", "rangeRound", "domain", "castLinearScale", "typedScale", "type", "createPointScale", "_spec", "scalePoint", "range", "all", "createBandScale", "n", "data", "size", "axis", "round", "scale", "scaleBand", "range", "domain", "all", "castBandScale", "typedScale", "type", "createTimeScale", "minValue", "maxValue", "format", "i", "u", "precision", "f", "min", "m", "max", "y", "useUTC", "nice", "normalize", "createDateNormalizer", "scaleUtc", "scaleTime", "createLogScale", "sign", "base", "some", "v", "Error", "hasMixedSign", "filter", "forEach", "Math", "scaleLog", "rangeRound", "createSymlogScale", "constant", "o", "c", "d", "l", "reverse", "scaleSymlog", "getOtherAxis", "compareValues", "a", "b", "compareDateValues", "getTime", "computeScale", "spec", "createLinearScale", "createPointScale", "getDatumAxisPosition", "datum", "stacked", "stackedValue", "computeXYScalesForSeries", "series", "xScaleSpec", "yScaleSpec", "width", "height", "nestedSeries", "map", "serie", "xy", "generateSeriesXY", "stackX", "stackY", "xScale", "x", "yScale", "computedSeries", "position", "generateSeriesAxis", "scaleSpec", "getValue", "setValue", "value", "parseFloat", "String", "parseTime", "values", "push", "sortBy", "uniq", "uniqBy", "slice", "sort", "last", "stackAxis", "otherAxis", "compare", "isDate", "stack", "find", "stackValue", "head", "minStacked", "maxStacked", "centerScale", "bandwidth", "offset", "timeByType", "millisecond", "timeMillisecond", "utcMillisecond", "second", "timeSecond", "utcSecond", "minute", "timeMinute", "utcMinute", "hour", "timeHour", "utcHour", "day", "timeInterval", "date", "setHours", "step", "setDate", "getDate", "start", "end", "floor", "setUTCHours", "setUTCDate", "getUTCDate", "week", "timeWeek", "utcWeek", "sunday", "timeSunday", "utcSunday", "monday", "timeMonday", "utcMonday", "tuesday", "timeTuesday", "utcTuesday", "wednesday", "timeWednesday", "utcWednesday", "thursday", "timeThursday", "utcThursday", "friday", "timeFriday", "utcFriday", "saturday", "timeSaturday", "utcSaturday", "month", "timeMonth", "utcMonth", "year", "timeYear", "utcYear", "timeTypes", "Object", "keys", "timeIntervalRegexp", "RegExp", "join", "getScaleTicks", "Array", "isArray", "matches", "match", "amount", "timeType", "originalStop", "stop", "Date", "every", "Number", "_timeType$every", "ticks", "interval", "isFinite", "computeCartesianTicks", "t", "translate", "axis", "scale", "ticksPosition", "tickValues", "tickSize", "tickPadding", "tickRotation", "engine", "f", "values", "getScaleTicks", "textProps", "textPropsByEngine", "position", "centerScale", "line", "lineX", "lineY", "text", "textX", "textY", "isRTL", "document", "dir", "textAlign", "align", "center", "textBaseline", "baseline", "d", "x", "y", "top", "bottom", "left", "right", "ticks", "map", "value", "key", "getFormatter", "format", "type", "formatter", "timeFormat", "Date", "d3Format", "computeGridLines", "width", "height", "_values", "Array", "isArray", "lines", "x1", "x2", "y1", "y2", "memoizedAxisTick", "memo", "e", "_value", "onClick", "textAnchor", "animatedProps", "theme", "useTheme", "props", "useMemo", "style", "opacity", "cursor", "event", "_jsxs", "animated", "g", "transform", "_jsx", "dominantBaseline", "textTransform", "memoizedAxis", "length", "P", "w", "O", "renderTick", "AxisTick", "legend", "legendPosition", "V", "legendOffset", "ariaHidden", "formatValue", "legendNode", "legendX", "legendY", "legendRotation", "useMotionConfig", "animate", "springConfig", "config", "useSpring", "lineX2", "lineY2", "immediate", "transition", "useTransition", "keys", "tick", "initial", "from", "enter", "update", "leave", "transitionProps", "_state", "tickIndex", "createElement", "rotate", "domain", "axisPropTypes", "PropTypes", "oneOf", "oneOfType", "number", "arrayOf", "string", "instanceOf", "func", "node", "bool", "axisPropType", "shape", "positions", "Axes", "xScale", "yScale", "axes", "isXAxis", "Axis", "GridLine", "grid", "GridLines", "_createElement", "Grid", "xValues", "yValues", "xLines", "yLines", "renderAxisToCanvas", "ctx", "a", "l", "u", "k", "_format", "T", "save", "font", "fontWeight", "fontSize", "fontFamily", "strokeWidth", "lineWidth", "Number", "lineCap", "stroke", "strokeStyle", "beginPath", "moveTo", "lineTo", "forEach", "degreesToRadians", "fill", "fillStyle", "fillText", "String", "restore", "renderAxesToCanvas", "renderGridLinesToCanvas", "SymbolCircle", "e", "x", "y", "size", "fill", "opacity", "l", "c", "borderWidth", "d", "borderColor", "_jsx", "r", "cx", "cy", "strokeWidth", "stroke", "style", "pointerEvents", "SymbolDiamond", "transform", "SymbolSquare", "width", "height", "SymbolTriangle", "p", "t", "i", "n", "zeroPadding", "top", "right", "bottom", "left", "computeDimensions", "t", "item", "direction", "itemsSpacing", "_padding", "padding", "itemCount", "itemWidth", "itemHeight", "Array", "isArray", "Error", "horizontalPadding", "verticalPadding", "width", "height", "spacing", "computePositionFromAnchor", "anchor", "translateX", "translateY", "containerWidth", "containerHeight", "x", "y", "computeItemLayout", "symbolX", "symbolY", "labelX", "labelY", "labelAnchor", "labelAlignment", "justify", "symbolSize", "symbolSpacing", "symbolByShape", "circle", "SymbolCircle", "diamond", "SymbolDiamond", "square", "SymbolSquare", "triangle", "SymbolTriangle", "LegendSvgItem", "i", "n", "r", "l", "c", "h", "g", "m", "f", "u", "v", "y", "x", "width", "height", "data", "direction", "z", "B", "justify", "textColor", "background", "Y", "E", "opacity", "T", "symbolShape", "symbolSize", "P", "symbolSpacing", "symbolBorderWidth", "D", "symbolBorderColor", "onClick", "onMouseEnter", "onMouseLeave", "toggleSerie", "effects", "useState", "style", "setStyle", "theme", "useTheme", "handleMouseEnter", "useCallback", "event", "filter", "t", "on", "reduce", "acc", "effect", "handleMouseLeave", "computeItemLayout", "symbolX", "symbolY", "labelX", "labelY", "labelAnchor", "labelAlignment", "isInteractive", "some", "handler", "SymbolShape", "_jsxs", "transform", "itemOpacity", "_jsx", "fill", "itemBackground", "cursor", "id", "createElement", "size", "color", "borderWidth", "borderColor", "hidden", "legends", "symbol", "undefined", "textAnchor", "text", "itemTextColor", "dominantBaseline", "pointerEvents", "userSelect", "label", "LegendSvg", "e", "padding", "_padding", "itemWidth", "itemHeight", "itemDirection", "itemsSpacing", "p", "b", "computeDimensions", "itemCount", "length", "xStep", "yStep", "map", "left", "top", "BoxLegendSvg", "containerWidth", "containerHeight", "translateX", "a", "translateY", "anchor", "computePositionFromAnchor", "textAlignMapping", "start", "middle", "end", "renderLegendToCanvas", "ctx", "O", "save", "translate", "font", "fontSize", "fontFamily", "forEach", "d", "itemX", "itemY", "fillStyle", "fillRect", "textAlign", "textBaseline", "fillText", "String", "restore", "LegendPropShape", "data", "PropTypes", "arrayOf", "object", "anchor", "oneOf", "isRequired", "translateX", "number", "translateY", "direction", "itemsSpacing", "itemWidth", "itemHeight", "itemDirection", "itemTextColor", "string", "itemBackground", "itemOpacity", "symbolShape", "oneOfType", "func", "symbolSize", "symbolSpacing", "symbolBorderWidth", "symbolBorderColor", "onClick", "onMouseEnter", "onMouseLeave", "effects", "shape", "on", "style", "tooltipStyle", "pointerEvents", "position", "zIndex", "top", "left", "translate", "x", "y", "TooltipWrapper", "memo", "t", "i", "anchor", "children", "theme", "useTheme", "useMotionConfig", "animate", "springConfig", "config", "useMeasure", "measureRef", "bounds", "previousPosition", "useRef", "to", "immediate", "hasDimension", "width", "height", "Math", "round", "transform", "current", "animatedProps", "useSpring", "style", "tooltip", "_jsx", "animated", "div", "ref", "displayName", "Chip", "o", "size", "color", "display", "background", "r", "BasicTooltip", "content", "id", "_value", "value", "format", "enableChip", "renderContent", "formatValue", "useValueFormatter", "_jsxs", "basic", "chip", "container", "tableStyle", "borderCollapse", "TableTooltip", "title", "rows", "n", "length", "table", "map", "row", "column", "j", "tableCell", "CrosshairLine", "x0", "x1", "y0", "y1", "useMemo", "v", "crosshair", "line", "x2", "y2", "fill", "Crosshair", "xLine", "yLine", "type", "TooltipActionsContext", "createContext", "showTooltipAt", "showTooltipFromEvent", "hideTooltip", "hiddenTooltipState", "isVisible", "TooltipStateContext", "useTooltip", "context", "useContext", "TooltipActionsContext", "Error", "n", "i", "p", "x", "y", "i2", "d", "r", "j", "k", "start", "e", "t", "a", "b", "c", "l", "x", "y", "r", "w", "h", "x", "y", "i", "j", "n", "x", "y", "t1", "t2", "t3", "x1", "y1", "x2", "y2", "x3", "y3", "d", "h", "ti", "yi", "t", "v", "p", "S", "e", "V", "P", "c", "k", "p", "d", "i", "a", "b", "c", "x", "y", "r", "_", "j", "e", "f", "n", "collinear", "l", "t", "ti", "h", "t0", "t1", "t2", "getAccessor", "directive", "datum", "computeMeshPoints", "n", "points", "x", "i", "t", "y", "getX", "getY", "map", "point", "computeMesh", "width", "height", "debug", "delaunay", "Delaunay", "from", "voronoi", "undefined", "useVoronoiMesh", "e", "points2d", "useMemo", "Mesh", "e", "nodes", "width", "height", "x", "y", "onMouseEnter", "onMouseMove", "onMouseLeave", "onClick", "debug", "elementRef", "useRef", "k", "useState", "currentIndex", "setCurrentIndex", "useVoronoiMesh", "points", "delaunay", "voronoi", "voronoiPath", "useMemo", "render", "getIndexAndNodeFromEvent", "useCallback", "event", "current", "getRelativeCursor", "index", "find", "handleMouseEnter", "node", "handleMouseMove", "handleMouseLeave", "previousNode", "handleClick", "_jsxs", "ref", "_jsx", "d", "stroke", "strokeWidth", "opacity", "fill", "renderCell", "style", "cursor", "renderVoronoiToCanvas", "ctx", "save", "globalAlpha", "beginPath", "strokeStyle", "lineWidth", "restore", "renderVoronoiCellToCanvas", "fillStyle", "LinePointTooltip", "e", "point", "_jsx", "BasicTooltip", "id", "_jsxs", "data", "xFormatted", "yFormatted", "enableChip", "color", "serieColor", "propTypes", "PropTypes", "object", "isRequired", "memo", "SliceTooltip", "slice", "axis", "theme", "useTheme", "otherAxis", "TableTooltip", "rows", "points", "map", "Chip", "style", "tooltip", "chip", "serieId", "tableCellValue", "oneOf", "commonPropTypes", "arrayOf", "shape", "oneOfType", "string", "number", "x", "instanceOf", "Date", "y", "xScale", "xFormat", "func", "yScale", "yFormat", "layers", "curve", "lineCurvePropType", "axisTop", "axisPropType", "axisRight", "axisBottom", "axisLeft", "enableGridX", "bool", "enableGridY", "gridXValues", "gridYValues", "enablePoints", "pointSymbol", "pointSize", "pointColor", "any", "pointBorderWidth", "pointBorderColor", "enablePointLabel", "pointLabel", "markers", "value", "colors", "ordinalColorsPropType", "enableArea", "areaOpacity", "areaBlendMode", "blendModePropType", "areaBaselineValue", "lineWidth", "legends", "LegendPropShape", "isInteractive", "debugMesh", "enableSlices", "debugSlices", "sliceTooltip", "enableCrosshair", "crosshairType", "LinePropTypes", "role", "useMesh", "motionPropTypes", "defsPropTypes", "LineCanvasPropTypes", "pixelRatio", "commonDefaultProps", "type", "min", "max", "from", "scheme", "PointTooltip", "LineDefaultProps", "animate", "motionConfig", "defs", "fill", "LineCanvasDefaultProps", "window", "devicePixelRatio", "useLineGenerator", "useMemo", "line", "defined", "d", "curveFromProp", "useAreaGenerator", "area", "y1", "y0", "useSlices", "width", "height", "Map", "forEach", "has", "get", "push", "set", "Array", "entries", "sort", "a", "b", "i", "slices", "x0", "slicePoints", "prevSlice", "nextSlice", "reverse", "sliceHeight", "useLine", "xScaleSpec", "yScaleSpec", "enableSlicesTooltip", "formatX", "useValueFormatter", "formatY", "getColor", "useOrdinalColorScale", "getPointColor", "useInheritedColor", "getPointBorderColor", "useState", "hiddenIds", "setHiddenIds", "computeXYScalesForSeries", "filter", "item", "indexOf", "rawSeries", "series", "dataWithColor", "label", "datum", "find", "serie", "Boolean", "legendData", "hidden", "toggleSerie", "useCallback", "state", "reduce", "acc", "position", "index", "length", "borderColor", "lineGenerator", "areaGenerator", "AreaPath", "path", "useMotionConfig", "springConfig", "config", "animatedPath", "useAnimatedPath", "animatedProps", "useSpring", "immediate", "animated", "fillOpacity", "strokeWidth", "mixBlendMode", "Areas", "computedLines", "lines", "LinesItem", "thickness", "stroke", "Re", "Lines", "Oe", "SlicesItem", "debug", "isCurrent", "setCurrent", "useTooltip", "showTooltipFromEvent", "hideTooltip", "handleMouseEnter", "event", "createElement", "handleMouseMove", "handleMouseLeave", "strokeOpacity", "onMouseEnter", "onMouseMove", "onMouseLeave", "Ce", "Slices", "current", "Me", "Points", "symbol", "size", "borderWidth", "enableLabel", "labelYOffset", "getLabel", "getLabelGenerator", "mappedPoints", "DotsItem", "Be", "Mesh", "margin", "onClick", "showTooltipAt", "left", "top", "handleClick", "BaseMesh", "nodes", "We", "Line", "props", "partialMargin", "pointLabelYOffset", "useDimensions", "innerWidth", "innerHeight", "outerWidth", "outerHeight", "currentPoint", "setCurrentPoint", "currentSlice", "setCurrentSlice", "layerById", "grid", "Grid", "xValues", "yValues", "CartesianMarkers", "axes", "Axes", "right", "bottom", "areas", "crosshair", "mesh", "legend", "BoxLegendSvg", "containerWidth", "containerHeight", "undefined", "boundDefs", "bindDefs", "Crosshair", "SvgWrapper", "layer", "Fragment", "defaultProps", "Le", "withContainer", "ResponsiveLine", "ResponsiveWrapper", "r", "LineCanvas", "canvasRef", "canvasEl", "useRef", "$", "useVoronoiMesh", "delaunay", "voronoi", "useEffect", "ctx", "getContext", "scale", "fillStyle", "background", "fillRect", "translate", "strokeStyle", "renderGridLinesToCanvas", "values", "renderAxesToCanvas", "save", "globalAlpha", "context", "beginPath", "restore", "arc", "Math", "PI", "renderVoronoiToCanvas", "renderVoronoiCellToCanvas", "renderLegendToCanvas", "getPointFromMouseEvent", "getRelativeCursor", "isCursorInRect", "pointIndex", "handleMouseHover", "ref", "cursor", "LineCanvasWithContainer", "forwardRef"]
}
