{
  "version": 3,
  "sources": ["../../../../node_modules/@nivo/colors/node_modules/d3-scale-chromatic/src/colors.js", "../../../../node_modules/@nivo/colors/node_modules/d3-scale-chromatic/src/categorical/category10.js", "../../../../node_modules/@nivo/colors/node_modules/d3-scale-chromatic/src/categorical/Accent.js", "../../../../node_modules/@nivo/colors/node_modules/d3-scale-chromatic/src/categorical/Dark2.js", "../../../../node_modules/@nivo/colors/node_modules/d3-scale-chromatic/src/categorical/Paired.js", "../../../../node_modules/@nivo/colors/node_modules/d3-scale-chromatic/src/categorical/Pastel1.js", "../../../../node_modules/@nivo/colors/node_modules/d3-scale-chromatic/src/categorical/Pastel2.js", "../../../../node_modules/@nivo/colors/node_modules/d3-scale-chromatic/src/categorical/Set1.js", "../../../../node_modules/@nivo/colors/node_modules/d3-scale-chromatic/src/categorical/Set2.js", "../../../../node_modules/@nivo/colors/node_modules/d3-scale-chromatic/src/categorical/Set3.js", "../../../../node_modules/@nivo/colors/node_modules/d3-scale-chromatic/src/categorical/Tableau10.js", "../../../../node_modules/@nivo/colors/node_modules/d3-scale-chromatic/src/ramp.js", "../../../../node_modules/@nivo/colors/node_modules/d3-scale-chromatic/src/diverging/BrBG.js", "../../../../node_modules/@nivo/colors/node_modules/d3-scale-chromatic/src/diverging/PRGn.js", "../../../../node_modules/@nivo/colors/node_modules/d3-scale-chromatic/src/diverging/PiYG.js", "../../../../node_modules/@nivo/colors/node_modules/d3-scale-chromatic/src/diverging/PuOr.js", "../../../../node_modules/@nivo/colors/node_modules/d3-scale-chromatic/src/diverging/RdBu.js", "../../../../node_modules/@nivo/colors/node_modules/d3-scale-chromatic/src/diverging/RdGy.js", "../../../../node_modules/@nivo/colors/node_modules/d3-scale-chromatic/src/diverging/RdYlBu.js", "../../../../node_modules/@nivo/colors/node_modules/d3-scale-chromatic/src/diverging/RdYlGn.js", "../../../../node_modules/@nivo/colors/node_modules/d3-scale-chromatic/src/diverging/Spectral.js", "../../../../node_modules/@nivo/colors/node_modules/d3-scale-chromatic/src/sequential-multi/BuGn.js", "../../../../node_modules/@nivo/colors/node_modules/d3-scale-chromatic/src/sequential-multi/BuPu.js", "../../../../node_modules/@nivo/colors/node_modules/d3-scale-chromatic/src/sequential-multi/GnBu.js", "../../../../node_modules/@nivo/colors/node_modules/d3-scale-chromatic/src/sequential-multi/OrRd.js", "../../../../node_modules/@nivo/colors/node_modules/d3-scale-chromatic/src/sequential-multi/PuBuGn.js", "../../../../node_modules/@nivo/colors/node_modules/d3-scale-chromatic/src/sequential-multi/PuBu.js", "../../../../node_modules/@nivo/colors/node_modules/d3-scale-chromatic/src/sequential-multi/PuRd.js", "../../../../node_modules/@nivo/colors/node_modules/d3-scale-chromatic/src/sequential-multi/RdPu.js", "../../../../node_modules/@nivo/colors/node_modules/d3-scale-chromatic/src/sequential-multi/YlGnBu.js", "../../../../node_modules/@nivo/colors/node_modules/d3-scale-chromatic/src/sequential-multi/YlGn.js", "../../../../node_modules/@nivo/colors/node_modules/d3-scale-chromatic/src/sequential-multi/YlOrBr.js", "../../../../node_modules/@nivo/colors/node_modules/d3-scale-chromatic/src/sequential-multi/YlOrRd.js", "../../../../node_modules/@nivo/colors/node_modules/d3-scale-chromatic/src/sequential-single/Blues.js", "../../../../node_modules/@nivo/colors/node_modules/d3-scale-chromatic/src/sequential-single/Greens.js", "../../../../node_modules/@nivo/colors/node_modules/d3-scale-chromatic/src/sequential-single/Greys.js", "../../../../node_modules/@nivo/colors/node_modules/d3-scale-chromatic/src/sequential-single/Purples.js", "../../../../node_modules/@nivo/colors/node_modules/d3-scale-chromatic/src/sequential-single/Reds.js", "../../../../node_modules/@nivo/colors/node_modules/d3-scale-chromatic/src/sequential-single/Oranges.js", "../../../../node_modules/@nivo/colors/node_modules/d3-scale-chromatic/src/sequential-multi/cividis.js", "../../../../node_modules/@nivo/colors/node_modules/d3-color/src/define.js", "../../../../node_modules/@nivo/colors/node_modules/d3-color/src/color.js", "../../../../node_modules/@nivo/colors/node_modules/d3-color/src/math.js", "../../../../node_modules/@nivo/colors/node_modules/d3-color/src/lab.js", "../../../../node_modules/@nivo/colors/node_modules/d3-color/src/cubehelix.js", "../../../../node_modules/@nivo/colors/node_modules/d3-scale-chromatic/src/sequential-multi/cubehelix.js", "../../../../node_modules/@nivo/colors/node_modules/d3-scale-chromatic/src/sequential-multi/rainbow.js", "../../../../node_modules/@nivo/colors/node_modules/d3-scale-chromatic/src/sequential-multi/sinebow.js", "../../../../node_modules/@nivo/colors/node_modules/d3-scale-chromatic/src/sequential-multi/turbo.js", "../../../../node_modules/@nivo/colors/node_modules/d3-scale-chromatic/src/sequential-multi/viridis.js", "../../../../node_modules/@nivo/colors/src/schemes/categorical.ts", "../../../../node_modules/@nivo/colors/src/schemes/diverging.ts", "../../../../node_modules/@nivo/colors/src/schemes/sequential.ts", "../../../../node_modules/@nivo/colors/src/schemes/all.ts", "../../../../node_modules/@nivo/colors/src/schemes/cyclical.ts", "../../../../node_modules/@nivo/colors/src/schemes/interpolators.ts", "../../../../node_modules/@nivo/colors/src/inheritedColor.ts", "../../../../node_modules/@nivo/colors/src/props.ts", "../../../../node_modules/@nivo/colors/src/scales/sequentialColorScale.ts", "../../../../node_modules/@nivo/colors/src/scales/divergingColorScale.ts", "../../../../node_modules/@nivo/colors/src/scales/quantizeColorScale.ts", "../../../../node_modules/@nivo/colors/src/scales/continuousColorScale.ts", "../../../../node_modules/@nivo/colors/src/scales/ordinalColorScale.ts", "../../../../node_modules/@nivo/arcs/src/arc_labels/ArcLabel.tsx", "../../../../node_modules/@nivo/arcs/src/utils.ts", "../../../../node_modules/@nivo/arcs/src/arcTransitionMode.ts", "../../../../node_modules/@nivo/arcs/src/centers.ts", "../../../../node_modules/@nivo/arcs/src/arc_labels/ArcLabelsLayer.tsx", "../../../../node_modules/@nivo/arcs/src/arc_labels/canvas.ts", "../../../../node_modules/@nivo/arcs/src/arc_labels/useArcLabels.ts", "../../../../node_modules/@nivo/arcs/src/arc_labels/index.ts", "../../../../node_modules/@nivo/arcs/src/arc_link_labels/ArcLinkLabel.tsx", "../../../../node_modules/@nivo/arcs/src/arc_link_labels/compute.ts", "../../../../node_modules/@nivo/arcs/src/arc_link_labels/useArcLinkLabelsTransition.ts", "../../../../node_modules/@nivo/arcs/src/arc_link_labels/ArcLinkLabelsLayer.tsx", "../../../../node_modules/@nivo/arcs/src/arc_link_labels/canvas.ts", "../../../../node_modules/@nivo/arcs/src/arc_link_labels/useArcLinks.ts", "../../../../node_modules/@nivo/arcs/src/arc_link_labels/useArcLinkLabels.ts", "../../../../node_modules/@nivo/arcs/src/arc_link_labels/index.ts", "../../../../node_modules/@nivo/arcs/src/ArcLine.tsx", "../../../../node_modules/@nivo/arcs/src/ArcShape.tsx", "../../../../node_modules/@nivo/arcs/src/interpolateArc.ts", "../../../../node_modules/@nivo/arcs/src/useArcsTransition.ts", "../../../../node_modules/@nivo/arcs/src/ArcsLayer.tsx", "../../../../node_modules/@nivo/arcs/src/boundingBox.ts", "../../../../node_modules/@nivo/arcs/src/interactivity.ts", "../../../../node_modules/@nivo/arcs/src/useAnimatedArc.ts", "../../../../node_modules/@nivo/arcs/src/useArcGenerator.ts", "../../../../node_modules/@nivo/legends/src/svg/symbols/SymbolCircle.tsx", "../../../../node_modules/@nivo/legends/src/svg/symbols/SymbolDiamond.tsx", "../../../../node_modules/@nivo/legends/src/svg/symbols/SymbolSquare.tsx", "../../../../node_modules/@nivo/legends/src/svg/symbols/SymbolTriangle.tsx", "../../../../node_modules/@nivo/legends/src/defaults.ts", "../../../../node_modules/@nivo/legends/src/compute.ts", "../../../../node_modules/@nivo/legends/src/svg/ContinuousColorsLegendSvg.tsx", "../../../../node_modules/@nivo/legends/src/svg/AnchoredContinuousColorsLegendSvg.tsx", "../../../../node_modules/@nivo/legends/src/svg/LegendSvgItem.tsx", "../../../../node_modules/@nivo/legends/src/svg/LegendSvg.tsx", "../../../../node_modules/@nivo/legends/src/svg/BoxLegendSvg.tsx", "../../../../node_modules/@nivo/legends/src/canvas.ts", "../../../../node_modules/@nivo/legends/src/hooks.ts", "../../../../node_modules/@nivo/legends/src/props.ts", "../../../../node_modules/@nivo/pie/src/PieLegends.tsx", "../../../../node_modules/@nivo/pie/src/props.ts", "../../../../node_modules/@nivo/pie/src/PieTooltip.tsx", "../../../../node_modules/@nivo/pie/src/hooks.ts", "../../../../node_modules/@nivo/pie/src/Arcs.tsx", "../../../../node_modules/@nivo/pie/src/Pie.tsx", "../../../../node_modules/@nivo/pie/src/ResponsivePie.tsx", "../../../../node_modules/@nivo/pie/src/PieCanvas.tsx", "../../../../node_modules/@nivo/pie/src/ResponsivePieCanvas.tsx"],
  "sourcesContent": ["export default function(specifier) {\n  var n = specifier.length / 6 | 0, colors = new Array(n), i = 0;\n  while (i < n) colors[i] = \"#\" + specifier.slice(i * 6, ++i * 6);\n  return colors;\n}\n", "import colors from \"../colors.js\";\n\nexport default colors(\"1f77b4ff7f0e2ca02cd627289467bd8c564be377c27f7f7fbcbd2217becf\");\n", "import colors from \"../colors.js\";\n\nexport default colors(\"7fc97fbeaed4fdc086ffff99386cb0f0027fbf5b17666666\");\n", "import colors from \"../colors.js\";\n\nexport default colors(\"1b9e77d95f027570b3e7298a66a61ee6ab02a6761d666666\");\n", "import colors from \"../colors.js\";\n\nexport default colors(\"a6cee31f78b4b2df8a33a02cfb9a99e31a1cfdbf6fff7f00cab2d66a3d9affff99b15928\");\n", "import colors from \"../colors.js\";\n\nexport default colors(\"fbb4aeb3cde3ccebc5decbe4fed9a6ffffcce5d8bdfddaecf2f2f2\");\n", "import colors from \"../colors.js\";\n\nexport default colors(\"b3e2cdfdcdaccbd5e8f4cae4e6f5c9fff2aef1e2cccccccc\");\n", "import colors from \"../colors.js\";\n\nexport default colors(\"e41a1c377eb84daf4a984ea3ff7f00ffff33a65628f781bf999999\");\n", "import colors from \"../colors.js\";\n\nexport default colors(\"66c2a5fc8d628da0cbe78ac3a6d854ffd92fe5c494b3b3b3\");\n", "import colors from \"../colors.js\";\n\nexport default colors(\"8dd3c7ffffb3bebadafb807280b1d3fdb462b3de69fccde5d9d9d9bc80bdccebc5ffed6f\");\n", "import colors from \"../colors.js\";\n\nexport default colors(\"4e79a7f28e2ce1575976b7b259a14fedc949af7aa1ff9da79c755fbab0ab\");\n", "import {interpolateRgbBasis} from \"d3-interpolate\";\n\nexport default scheme => interpolateRgbBasis(scheme[scheme.length - 1]);\n", "import colors from \"../colors.js\";\nimport ramp from \"../ramp.js\";\n\nexport var scheme = new Array(3).concat(\n  \"d8b365f5f5f55ab4ac\",\n  \"a6611adfc27d80cdc1018571\",\n  \"a6611adfc27df5f5f580cdc1018571\",\n  \"8c510ad8b365f6e8c3c7eae55ab4ac01665e\",\n  \"8c510ad8b365f6e8c3f5f5f5c7eae55ab4ac01665e\",\n  \"8c510abf812ddfc27df6e8c3c7eae580cdc135978f01665e\",\n  \"8c510abf812ddfc27df6e8c3f5f5f5c7eae580cdc135978f01665e\",\n  \"5430058c510abf812ddfc27df6e8c3c7eae580cdc135978f01665e003c30\",\n  \"5430058c510abf812ddfc27df6e8c3f5f5f5c7eae580cdc135978f01665e003c30\"\n).map(colors);\n\nexport default ramp(scheme);\n", "import colors from \"../colors.js\";\nimport ramp from \"../ramp.js\";\n\nexport var scheme = new Array(3).concat(\n  \"af8dc3f7f7f77fbf7b\",\n  \"7b3294c2a5cfa6dba0008837\",\n  \"7b3294c2a5cff7f7f7a6dba0008837\",\n  \"762a83af8dc3e7d4e8d9f0d37fbf7b1b7837\",\n  \"762a83af8dc3e7d4e8f7f7f7d9f0d37fbf7b1b7837\",\n  \"762a839970abc2a5cfe7d4e8d9f0d3a6dba05aae611b7837\",\n  \"762a839970abc2a5cfe7d4e8f7f7f7d9f0d3a6dba05aae611b7837\",\n  \"40004b762a839970abc2a5cfe7d4e8d9f0d3a6dba05aae611b783700441b\",\n  \"40004b762a839970abc2a5cfe7d4e8f7f7f7d9f0d3a6dba05aae611b783700441b\"\n).map(colors);\n\nexport default ramp(scheme);\n", "import colors from \"../colors.js\";\nimport ramp from \"../ramp.js\";\n\nexport var scheme = new Array(3).concat(\n  \"e9a3c9f7f7f7a1d76a\",\n  \"d01c8bf1b6dab8e1864dac26\",\n  \"d01c8bf1b6daf7f7f7b8e1864dac26\",\n  \"c51b7de9a3c9fde0efe6f5d0a1d76a4d9221\",\n  \"c51b7de9a3c9fde0eff7f7f7e6f5d0a1d76a4d9221\",\n  \"c51b7dde77aef1b6dafde0efe6f5d0b8e1867fbc414d9221\",\n  \"c51b7dde77aef1b6dafde0eff7f7f7e6f5d0b8e1867fbc414d9221\",\n  \"8e0152c51b7dde77aef1b6dafde0efe6f5d0b8e1867fbc414d9221276419\",\n  \"8e0152c51b7dde77aef1b6dafde0eff7f7f7e6f5d0b8e1867fbc414d9221276419\"\n).map(colors);\n\nexport default ramp(scheme);\n", "import colors from \"../colors.js\";\nimport ramp from \"../ramp.js\";\n\nexport var scheme = new Array(3).concat(\n  \"998ec3f7f7f7f1a340\",\n  \"5e3c99b2abd2fdb863e66101\",\n  \"5e3c99b2abd2f7f7f7fdb863e66101\",\n  \"542788998ec3d8daebfee0b6f1a340b35806\",\n  \"542788998ec3d8daebf7f7f7fee0b6f1a340b35806\",\n  \"5427888073acb2abd2d8daebfee0b6fdb863e08214b35806\",\n  \"5427888073acb2abd2d8daebf7f7f7fee0b6fdb863e08214b35806\",\n  \"2d004b5427888073acb2abd2d8daebfee0b6fdb863e08214b358067f3b08\",\n  \"2d004b5427888073acb2abd2d8daebf7f7f7fee0b6fdb863e08214b358067f3b08\"\n).map(colors);\n\nexport default ramp(scheme);\n", "import colors from \"../colors.js\";\nimport ramp from \"../ramp.js\";\n\nexport var scheme = new Array(3).concat(\n  \"ef8a62f7f7f767a9cf\",\n  \"ca0020f4a58292c5de0571b0\",\n  \"ca0020f4a582f7f7f792c5de0571b0\",\n  \"b2182bef8a62fddbc7d1e5f067a9cf2166ac\",\n  \"b2182bef8a62fddbc7f7f7f7d1e5f067a9cf2166ac\",\n  \"b2182bd6604df4a582fddbc7d1e5f092c5de4393c32166ac\",\n  \"b2182bd6604df4a582fddbc7f7f7f7d1e5f092c5de4393c32166ac\",\n  \"67001fb2182bd6604df4a582fddbc7d1e5f092c5de4393c32166ac053061\",\n  \"67001fb2182bd6604df4a582fddbc7f7f7f7d1e5f092c5de4393c32166ac053061\"\n).map(colors);\n\nexport default ramp(scheme);\n", "import colors from \"../colors.js\";\nimport ramp from \"../ramp.js\";\n\nexport var scheme = new Array(3).concat(\n  \"ef8a62ffffff999999\",\n  \"ca0020f4a582bababa404040\",\n  \"ca0020f4a582ffffffbababa404040\",\n  \"b2182bef8a62fddbc7e0e0e09999994d4d4d\",\n  \"b2182bef8a62fddbc7ffffffe0e0e09999994d4d4d\",\n  \"b2182bd6604df4a582fddbc7e0e0e0bababa8787874d4d4d\",\n  \"b2182bd6604df4a582fddbc7ffffffe0e0e0bababa8787874d4d4d\",\n  \"67001fb2182bd6604df4a582fddbc7e0e0e0bababa8787874d4d4d1a1a1a\",\n  \"67001fb2182bd6604df4a582fddbc7ffffffe0e0e0bababa8787874d4d4d1a1a1a\"\n).map(colors);\n\nexport default ramp(scheme);\n", "import colors from \"../colors.js\";\nimport ramp from \"../ramp.js\";\n\nexport var scheme = new Array(3).concat(\n  \"fc8d59ffffbf91bfdb\",\n  \"d7191cfdae61abd9e92c7bb6\",\n  \"d7191cfdae61ffffbfabd9e92c7bb6\",\n  \"d73027fc8d59fee090e0f3f891bfdb4575b4\",\n  \"d73027fc8d59fee090ffffbfe0f3f891bfdb4575b4\",\n  \"d73027f46d43fdae61fee090e0f3f8abd9e974add14575b4\",\n  \"d73027f46d43fdae61fee090ffffbfe0f3f8abd9e974add14575b4\",\n  \"a50026d73027f46d43fdae61fee090e0f3f8abd9e974add14575b4313695\",\n  \"a50026d73027f46d43fdae61fee090ffffbfe0f3f8abd9e974add14575b4313695\"\n).map(colors);\n\nexport default ramp(scheme);\n", "import colors from \"../colors.js\";\nimport ramp from \"../ramp.js\";\n\nexport var scheme = new Array(3).concat(\n  \"fc8d59ffffbf91cf60\",\n  \"d7191cfdae61a6d96a1a9641\",\n  \"d7191cfdae61ffffbfa6d96a1a9641\",\n  \"d73027fc8d59fee08bd9ef8b91cf601a9850\",\n  \"d73027fc8d59fee08bffffbfd9ef8b91cf601a9850\",\n  \"d73027f46d43fdae61fee08bd9ef8ba6d96a66bd631a9850\",\n  \"d73027f46d43fdae61fee08bffffbfd9ef8ba6d96a66bd631a9850\",\n  \"a50026d73027f46d43fdae61fee08bd9ef8ba6d96a66bd631a9850006837\",\n  \"a50026d73027f46d43fdae61fee08bffffbfd9ef8ba6d96a66bd631a9850006837\"\n).map(colors);\n\nexport default ramp(scheme);\n", "import colors from \"../colors.js\";\nimport ramp from \"../ramp.js\";\n\nexport var scheme = new Array(3).concat(\n  \"fc8d59ffffbf99d594\",\n  \"d7191cfdae61abdda42b83ba\",\n  \"d7191cfdae61ffffbfabdda42b83ba\",\n  \"d53e4ffc8d59fee08be6f59899d5943288bd\",\n  \"d53e4ffc8d59fee08bffffbfe6f59899d5943288bd\",\n  \"d53e4ff46d43fdae61fee08be6f598abdda466c2a53288bd\",\n  \"d53e4ff46d43fdae61fee08bffffbfe6f598abdda466c2a53288bd\",\n  \"9e0142d53e4ff46d43fdae61fee08be6f598abdda466c2a53288bd5e4fa2\",\n  \"9e0142d53e4ff46d43fdae61fee08bffffbfe6f598abdda466c2a53288bd5e4fa2\"\n).map(colors);\n\nexport default ramp(scheme);\n", "import colors from \"../colors.js\";\nimport ramp from \"../ramp.js\";\n\nexport var scheme = new Array(3).concat(\n  \"e5f5f999d8c92ca25f\",\n  \"edf8fbb2e2e266c2a4238b45\",\n  \"edf8fbb2e2e266c2a42ca25f006d2c\",\n  \"edf8fbccece699d8c966c2a42ca25f006d2c\",\n  \"edf8fbccece699d8c966c2a441ae76238b45005824\",\n  \"f7fcfde5f5f9ccece699d8c966c2a441ae76238b45005824\",\n  \"f7fcfde5f5f9ccece699d8c966c2a441ae76238b45006d2c00441b\"\n).map(colors);\n\nexport default ramp(scheme);\n", "import colors from \"../colors.js\";\nimport ramp from \"../ramp.js\";\n\nexport var scheme = new Array(3).concat(\n  \"e0ecf49ebcda8856a7\",\n  \"edf8fbb3cde38c96c688419d\",\n  \"edf8fbb3cde38c96c68856a7810f7c\",\n  \"edf8fbbfd3e69ebcda8c96c68856a7810f7c\",\n  \"edf8fbbfd3e69ebcda8c96c68c6bb188419d6e016b\",\n  \"f7fcfde0ecf4bfd3e69ebcda8c96c68c6bb188419d6e016b\",\n  \"f7fcfde0ecf4bfd3e69ebcda8c96c68c6bb188419d810f7c4d004b\"\n).map(colors);\n\nexport default ramp(scheme);\n", "import colors from \"../colors.js\";\nimport ramp from \"../ramp.js\";\n\nexport var scheme = new Array(3).concat(\n  \"e0f3dba8ddb543a2ca\",\n  \"f0f9e8bae4bc7bccc42b8cbe\",\n  \"f0f9e8bae4bc7bccc443a2ca0868ac\",\n  \"f0f9e8ccebc5a8ddb57bccc443a2ca0868ac\",\n  \"f0f9e8ccebc5a8ddb57bccc44eb3d32b8cbe08589e\",\n  \"f7fcf0e0f3dbccebc5a8ddb57bccc44eb3d32b8cbe08589e\",\n  \"f7fcf0e0f3dbccebc5a8ddb57bccc44eb3d32b8cbe0868ac084081\"\n).map(colors);\n\nexport default ramp(scheme);\n", "import colors from \"../colors.js\";\nimport ramp from \"../ramp.js\";\n\nexport var scheme = new Array(3).concat(\n  \"fee8c8fdbb84e34a33\",\n  \"fef0d9fdcc8afc8d59d7301f\",\n  \"fef0d9fdcc8afc8d59e34a33b30000\",\n  \"fef0d9fdd49efdbb84fc8d59e34a33b30000\",\n  \"fef0d9fdd49efdbb84fc8d59ef6548d7301f990000\",\n  \"fff7ecfee8c8fdd49efdbb84fc8d59ef6548d7301f990000\",\n  \"fff7ecfee8c8fdd49efdbb84fc8d59ef6548d7301fb300007f0000\"\n).map(colors);\n\nexport default ramp(scheme);\n", "import colors from \"../colors.js\";\nimport ramp from \"../ramp.js\";\n\nexport var scheme = new Array(3).concat(\n  \"ece2f0a6bddb1c9099\",\n  \"f6eff7bdc9e167a9cf02818a\",\n  \"f6eff7bdc9e167a9cf1c9099016c59\",\n  \"f6eff7d0d1e6a6bddb67a9cf1c9099016c59\",\n  \"f6eff7d0d1e6a6bddb67a9cf3690c002818a016450\",\n  \"fff7fbece2f0d0d1e6a6bddb67a9cf3690c002818a016450\",\n  \"fff7fbece2f0d0d1e6a6bddb67a9cf3690c002818a016c59014636\"\n).map(colors);\n\nexport default ramp(scheme);\n", "import colors from \"../colors.js\";\nimport ramp from \"../ramp.js\";\n\nexport var scheme = new Array(3).concat(\n  \"ece7f2a6bddb2b8cbe\",\n  \"f1eef6bdc9e174a9cf0570b0\",\n  \"f1eef6bdc9e174a9cf2b8cbe045a8d\",\n  \"f1eef6d0d1e6a6bddb74a9cf2b8cbe045a8d\",\n  \"f1eef6d0d1e6a6bddb74a9cf3690c00570b0034e7b\",\n  \"fff7fbece7f2d0d1e6a6bddb74a9cf3690c00570b0034e7b\",\n  \"fff7fbece7f2d0d1e6a6bddb74a9cf3690c00570b0045a8d023858\"\n).map(colors);\n\nexport default ramp(scheme);\n", "import colors from \"../colors.js\";\nimport ramp from \"../ramp.js\";\n\nexport var scheme = new Array(3).concat(\n  \"e7e1efc994c7dd1c77\",\n  \"f1eef6d7b5d8df65b0ce1256\",\n  \"f1eef6d7b5d8df65b0dd1c77980043\",\n  \"f1eef6d4b9dac994c7df65b0dd1c77980043\",\n  \"f1eef6d4b9dac994c7df65b0e7298ace125691003f\",\n  \"f7f4f9e7e1efd4b9dac994c7df65b0e7298ace125691003f\",\n  \"f7f4f9e7e1efd4b9dac994c7df65b0e7298ace125698004367001f\"\n).map(colors);\n\nexport default ramp(scheme);\n", "import colors from \"../colors.js\";\nimport ramp from \"../ramp.js\";\n\nexport var scheme = new Array(3).concat(\n  \"fde0ddfa9fb5c51b8a\",\n  \"feebe2fbb4b9f768a1ae017e\",\n  \"feebe2fbb4b9f768a1c51b8a7a0177\",\n  \"feebe2fcc5c0fa9fb5f768a1c51b8a7a0177\",\n  \"feebe2fcc5c0fa9fb5f768a1dd3497ae017e7a0177\",\n  \"fff7f3fde0ddfcc5c0fa9fb5f768a1dd3497ae017e7a0177\",\n  \"fff7f3fde0ddfcc5c0fa9fb5f768a1dd3497ae017e7a017749006a\"\n).map(colors);\n\nexport default ramp(scheme);\n", "import colors from \"../colors.js\";\nimport ramp from \"../ramp.js\";\n\nexport var scheme = new Array(3).concat(\n  \"edf8b17fcdbb2c7fb8\",\n  \"ffffcca1dab441b6c4225ea8\",\n  \"ffffcca1dab441b6c42c7fb8253494\",\n  \"ffffccc7e9b47fcdbb41b6c42c7fb8253494\",\n  \"ffffccc7e9b47fcdbb41b6c41d91c0225ea80c2c84\",\n  \"ffffd9edf8b1c7e9b47fcdbb41b6c41d91c0225ea80c2c84\",\n  \"ffffd9edf8b1c7e9b47fcdbb41b6c41d91c0225ea8253494081d58\"\n).map(colors);\n\nexport default ramp(scheme);\n", "import colors from \"../colors.js\";\nimport ramp from \"../ramp.js\";\n\nexport var scheme = new Array(3).concat(\n  \"f7fcb9addd8e31a354\",\n  \"ffffccc2e69978c679238443\",\n  \"ffffccc2e69978c67931a354006837\",\n  \"ffffccd9f0a3addd8e78c67931a354006837\",\n  \"ffffccd9f0a3addd8e78c67941ab5d238443005a32\",\n  \"ffffe5f7fcb9d9f0a3addd8e78c67941ab5d238443005a32\",\n  \"ffffe5f7fcb9d9f0a3addd8e78c67941ab5d238443006837004529\"\n).map(colors);\n\nexport default ramp(scheme);\n", "import colors from \"../colors.js\";\nimport ramp from \"../ramp.js\";\n\nexport var scheme = new Array(3).concat(\n  \"fff7bcfec44fd95f0e\",\n  \"ffffd4fed98efe9929cc4c02\",\n  \"ffffd4fed98efe9929d95f0e993404\",\n  \"ffffd4fee391fec44ffe9929d95f0e993404\",\n  \"ffffd4fee391fec44ffe9929ec7014cc4c028c2d04\",\n  \"ffffe5fff7bcfee391fec44ffe9929ec7014cc4c028c2d04\",\n  \"ffffe5fff7bcfee391fec44ffe9929ec7014cc4c02993404662506\"\n).map(colors);\n\nexport default ramp(scheme);\n", "import colors from \"../colors.js\";\nimport ramp from \"../ramp.js\";\n\nexport var scheme = new Array(3).concat(\n  \"ffeda0feb24cf03b20\",\n  \"ffffb2fecc5cfd8d3ce31a1c\",\n  \"ffffb2fecc5cfd8d3cf03b20bd0026\",\n  \"ffffb2fed976feb24cfd8d3cf03b20bd0026\",\n  \"ffffb2fed976feb24cfd8d3cfc4e2ae31a1cb10026\",\n  \"ffffccffeda0fed976feb24cfd8d3cfc4e2ae31a1cb10026\",\n  \"ffffccffeda0fed976feb24cfd8d3cfc4e2ae31a1cbd0026800026\"\n).map(colors);\n\nexport default ramp(scheme);\n", "import colors from \"../colors.js\";\nimport ramp from \"../ramp.js\";\n\nexport var scheme = new Array(3).concat(\n  \"deebf79ecae13182bd\",\n  \"eff3ffbdd7e76baed62171b5\",\n  \"eff3ffbdd7e76baed63182bd08519c\",\n  \"eff3ffc6dbef9ecae16baed63182bd08519c\",\n  \"eff3ffc6dbef9ecae16baed64292c62171b5084594\",\n  \"f7fbffdeebf7c6dbef9ecae16baed64292c62171b5084594\",\n  \"f7fbffdeebf7c6dbef9ecae16baed64292c62171b508519c08306b\"\n).map(colors);\n\nexport default ramp(scheme);\n", "import colors from \"../colors.js\";\nimport ramp from \"../ramp.js\";\n\nexport var scheme = new Array(3).concat(\n  \"e5f5e0a1d99b31a354\",\n  \"edf8e9bae4b374c476238b45\",\n  \"edf8e9bae4b374c47631a354006d2c\",\n  \"edf8e9c7e9c0a1d99b74c47631a354006d2c\",\n  \"edf8e9c7e9c0a1d99b74c47641ab5d238b45005a32\",\n  \"f7fcf5e5f5e0c7e9c0a1d99b74c47641ab5d238b45005a32\",\n  \"f7fcf5e5f5e0c7e9c0a1d99b74c47641ab5d238b45006d2c00441b\"\n).map(colors);\n\nexport default ramp(scheme);\n", "import colors from \"../colors.js\";\nimport ramp from \"../ramp.js\";\n\nexport var scheme = new Array(3).concat(\n  \"f0f0f0bdbdbd636363\",\n  \"f7f7f7cccccc969696525252\",\n  \"f7f7f7cccccc969696636363252525\",\n  \"f7f7f7d9d9d9bdbdbd969696636363252525\",\n  \"f7f7f7d9d9d9bdbdbd969696737373525252252525\",\n  \"fffffff0f0f0d9d9d9bdbdbd969696737373525252252525\",\n  \"fffffff0f0f0d9d9d9bdbdbd969696737373525252252525000000\"\n).map(colors);\n\nexport default ramp(scheme);\n", "import colors from \"../colors.js\";\nimport ramp from \"../ramp.js\";\n\nexport var scheme = new Array(3).concat(\n  \"efedf5bcbddc756bb1\",\n  \"f2f0f7cbc9e29e9ac86a51a3\",\n  \"f2f0f7cbc9e29e9ac8756bb154278f\",\n  \"f2f0f7dadaebbcbddc9e9ac8756bb154278f\",\n  \"f2f0f7dadaebbcbddc9e9ac8807dba6a51a34a1486\",\n  \"fcfbfdefedf5dadaebbcbddc9e9ac8807dba6a51a34a1486\",\n  \"fcfbfdefedf5dadaebbcbddc9e9ac8807dba6a51a354278f3f007d\"\n).map(colors);\n\nexport default ramp(scheme);\n", "import colors from \"../colors.js\";\nimport ramp from \"../ramp.js\";\n\nexport var scheme = new Array(3).concat(\n  \"fee0d2fc9272de2d26\",\n  \"fee5d9fcae91fb6a4acb181d\",\n  \"fee5d9fcae91fb6a4ade2d26a50f15\",\n  \"fee5d9fcbba1fc9272fb6a4ade2d26a50f15\",\n  \"fee5d9fcbba1fc9272fb6a4aef3b2ccb181d99000d\",\n  \"fff5f0fee0d2fcbba1fc9272fb6a4aef3b2ccb181d99000d\",\n  \"fff5f0fee0d2fcbba1fc9272fb6a4aef3b2ccb181da50f1567000d\"\n).map(colors);\n\nexport default ramp(scheme);\n", "import colors from \"../colors.js\";\nimport ramp from \"../ramp.js\";\n\nexport var scheme = new Array(3).concat(\n  \"fee6cefdae6be6550d\",\n  \"feeddefdbe85fd8d3cd94701\",\n  \"feeddefdbe85fd8d3ce6550da63603\",\n  \"feeddefdd0a2fdae6bfd8d3ce6550da63603\",\n  \"feeddefdd0a2fdae6bfd8d3cf16913d948018c2d04\",\n  \"fff5ebfee6cefdd0a2fdae6bfd8d3cf16913d948018c2d04\",\n  \"fff5ebfee6cefdd0a2fdae6bfd8d3cf16913d94801a636037f2704\"\n).map(colors);\n\nexport default ramp(scheme);\n", "export default function(t) {\n  t = Math.max(0, Math.min(1, t));\n  return \"rgb(\"\n      + Math.max(0, Math.min(255, Math.round(-4.54 - t * (35.34 - t * (2381.73 - t * (6402.7 - t * (7024.72 - t * 2710.57))))))) + \", \"\n      + Math.max(0, Math.min(255, Math.round(32.49 + t * (170.73 + t * (52.82 - t * (131.46 - t * (176.58 - t * 67.37))))))) + \", \"\n      + Math.max(0, Math.min(255, Math.round(81.24 + t * (442.36 - t * (2482.43 - t * (6167.24 - t * (6614.94 - t * 2475.67)))))))\n      + \")\";\n}\n", "export default function(constructor, factory, prototype) {\n  constructor.prototype = factory.prototype = prototype;\n  prototype.constructor = constructor;\n}\n\nexport function extend(parent, definition) {\n  var prototype = Object.create(parent.prototype);\n  for (var key in definition) prototype[key] = definition[key];\n  return prototype;\n}\n", "import define, {extend} from \"./define.js\";\n\nexport function Color() {}\n\nexport var darker = 0.7;\nexport var brighter = 1 / darker;\n\nvar reI = \"\\\\s*([+-]?\\\\d+)\\\\s*\",\n    reN = \"\\\\s*([+-]?\\\\d*\\\\.?\\\\d+(?:[eE][+-]?\\\\d+)?)\\\\s*\",\n    reP = \"\\\\s*([+-]?\\\\d*\\\\.?\\\\d+(?:[eE][+-]?\\\\d+)?)%\\\\s*\",\n    reHex = /^#([0-9a-f]{3,8})$/,\n    reRgbInteger = new RegExp(\"^rgb\\\\(\" + [reI, reI, reI] + \"\\\\)$\"),\n    reRgbPercent = new RegExp(\"^rgb\\\\(\" + [reP, reP, reP] + \"\\\\)$\"),\n    reRgbaInteger = new RegExp(\"^rgba\\\\(\" + [reI, reI, reI, reN] + \"\\\\)$\"),\n    reRgbaPercent = new RegExp(\"^rgba\\\\(\" + [reP, reP, reP, reN] + \"\\\\)$\"),\n    reHslPercent = new RegExp(\"^hsl\\\\(\" + [reN, reP, reP] + \"\\\\)$\"),\n    reHslaPercent = new RegExp(\"^hsla\\\\(\" + [reN, reP, reP, reN] + \"\\\\)$\");\n\nvar named = {\n  aliceblue: 0xf0f8ff,\n  antiquewhite: 0xfaebd7,\n  aqua: 0x00ffff,\n  aquamarine: 0x7fffd4,\n  azure: 0xf0ffff,\n  beige: 0xf5f5dc,\n  bisque: 0xffe4c4,\n  black: 0x000000,\n  blanchedalmond: 0xffebcd,\n  blue: 0x0000ff,\n  blueviolet: 0x8a2be2,\n  brown: 0xa52a2a,\n  burlywood: 0xdeb887,\n  cadetblue: 0x5f9ea0,\n  chartreuse: 0x7fff00,\n  chocolate: 0xd2691e,\n  coral: 0xff7f50,\n  cornflowerblue: 0x6495ed,\n  cornsilk: 0xfff8dc,\n  crimson: 0xdc143c,\n  cyan: 0x00ffff,\n  darkblue: 0x00008b,\n  darkcyan: 0x008b8b,\n  darkgoldenrod: 0xb8860b,\n  darkgray: 0xa9a9a9,\n  darkgreen: 0x006400,\n  darkgrey: 0xa9a9a9,\n  darkkhaki: 0xbdb76b,\n  darkmagenta: 0x8b008b,\n  darkolivegreen: 0x556b2f,\n  darkorange: 0xff8c00,\n  darkorchid: 0x9932cc,\n  darkred: 0x8b0000,\n  darksalmon: 0xe9967a,\n  darkseagreen: 0x8fbc8f,\n  darkslateblue: 0x483d8b,\n  darkslategray: 0x2f4f4f,\n  darkslategrey: 0x2f4f4f,\n  darkturquoise: 0x00ced1,\n  darkviolet: 0x9400d3,\n  deeppink: 0xff1493,\n  deepskyblue: 0x00bfff,\n  dimgray: 0x696969,\n  dimgrey: 0x696969,\n  dodgerblue: 0x1e90ff,\n  firebrick: 0xb22222,\n  floralwhite: 0xfffaf0,\n  forestgreen: 0x228b22,\n  fuchsia: 0xff00ff,\n  gainsboro: 0xdcdcdc,\n  ghostwhite: 0xf8f8ff,\n  gold: 0xffd700,\n  goldenrod: 0xdaa520,\n  gray: 0x808080,\n  green: 0x008000,\n  greenyellow: 0xadff2f,\n  grey: 0x808080,\n  honeydew: 0xf0fff0,\n  hotpink: 0xff69b4,\n  indianred: 0xcd5c5c,\n  indigo: 0x4b0082,\n  ivory: 0xfffff0,\n  khaki: 0xf0e68c,\n  lavender: 0xe6e6fa,\n  lavenderblush: 0xfff0f5,\n  lawngreen: 0x7cfc00,\n  lemonchiffon: 0xfffacd,\n  lightblue: 0xadd8e6,\n  lightcoral: 0xf08080,\n  lightcyan: 0xe0ffff,\n  lightgoldenrodyellow: 0xfafad2,\n  lightgray: 0xd3d3d3,\n  lightgreen: 0x90ee90,\n  lightgrey: 0xd3d3d3,\n  lightpink: 0xffb6c1,\n  lightsalmon: 0xffa07a,\n  lightseagreen: 0x20b2aa,\n  lightskyblue: 0x87cefa,\n  lightslategray: 0x778899,\n  lightslategrey: 0x778899,\n  lightsteelblue: 0xb0c4de,\n  lightyellow: 0xffffe0,\n  lime: 0x00ff00,\n  limegreen: 0x32cd32,\n  linen: 0xfaf0e6,\n  magenta: 0xff00ff,\n  maroon: 0x800000,\n  mediumaquamarine: 0x66cdaa,\n  mediumblue: 0x0000cd,\n  mediumorchid: 0xba55d3,\n  mediumpurple: 0x9370db,\n  mediumseagreen: 0x3cb371,\n  mediumslateblue: 0x7b68ee,\n  mediumspringgreen: 0x00fa9a,\n  mediumturquoise: 0x48d1cc,\n  mediumvioletred: 0xc71585,\n  midnightblue: 0x191970,\n  mintcream: 0xf5fffa,\n  mistyrose: 0xffe4e1,\n  moccasin: 0xffe4b5,\n  navajowhite: 0xffdead,\n  navy: 0x000080,\n  oldlace: 0xfdf5e6,\n  olive: 0x808000,\n  olivedrab: 0x6b8e23,\n  orange: 0xffa500,\n  orangered: 0xff4500,\n  orchid: 0xda70d6,\n  palegoldenrod: 0xeee8aa,\n  palegreen: 0x98fb98,\n  paleturquoise: 0xafeeee,\n  palevioletred: 0xdb7093,\n  papayawhip: 0xffefd5,\n  peachpuff: 0xffdab9,\n  peru: 0xcd853f,\n  pink: 0xffc0cb,\n  plum: 0xdda0dd,\n  powderblue: 0xb0e0e6,\n  purple: 0x800080,\n  rebeccapurple: 0x663399,\n  red: 0xff0000,\n  rosybrown: 0xbc8f8f,\n  royalblue: 0x4169e1,\n  saddlebrown: 0x8b4513,\n  salmon: 0xfa8072,\n  sandybrown: 0xf4a460,\n  seagreen: 0x2e8b57,\n  seashell: 0xfff5ee,\n  sienna: 0xa0522d,\n  silver: 0xc0c0c0,\n  skyblue: 0x87ceeb,\n  slateblue: 0x6a5acd,\n  slategray: 0x708090,\n  slategrey: 0x708090,\n  snow: 0xfffafa,\n  springgreen: 0x00ff7f,\n  steelblue: 0x4682b4,\n  tan: 0xd2b48c,\n  teal: 0x008080,\n  thistle: 0xd8bfd8,\n  tomato: 0xff6347,\n  turquoise: 0x40e0d0,\n  violet: 0xee82ee,\n  wheat: 0xf5deb3,\n  white: 0xffffff,\n  whitesmoke: 0xf5f5f5,\n  yellow: 0xffff00,\n  yellowgreen: 0x9acd32\n};\n\ndefine(Color, color, {\n  copy: function(channels) {\n    return Object.assign(new this.constructor, this, channels);\n  },\n  displayable: function() {\n    return this.rgb().displayable();\n  },\n  hex: color_formatHex, // Deprecated! Use color.formatHex.\n  formatHex: color_formatHex,\n  formatHsl: color_formatHsl,\n  formatRgb: color_formatRgb,\n  toString: color_formatRgb\n});\n\nfunction color_formatHex() {\n  return this.rgb().formatHex();\n}\n\nfunction color_formatHsl() {\n  return hslConvert(this).formatHsl();\n}\n\nfunction color_formatRgb() {\n  return this.rgb().formatRgb();\n}\n\nexport default function color(format) {\n  var m, l;\n  format = (format + \"\").trim().toLowerCase();\n  return (m = reHex.exec(format)) ? (l = m[1].length, m = parseInt(m[1], 16), l === 6 ? rgbn(m) // #ff0000\n      : l === 3 ? new Rgb((m >> 8 & 0xf) | (m >> 4 & 0xf0), (m >> 4 & 0xf) | (m & 0xf0), ((m & 0xf) << 4) | (m & 0xf), 1) // #f00\n      : l === 8 ? rgba(m >> 24 & 0xff, m >> 16 & 0xff, m >> 8 & 0xff, (m & 0xff) / 0xff) // #ff000000\n      : l === 4 ? rgba((m >> 12 & 0xf) | (m >> 8 & 0xf0), (m >> 8 & 0xf) | (m >> 4 & 0xf0), (m >> 4 & 0xf) | (m & 0xf0), (((m & 0xf) << 4) | (m & 0xf)) / 0xff) // #f000\n      : null) // invalid hex\n      : (m = reRgbInteger.exec(format)) ? new Rgb(m[1], m[2], m[3], 1) // rgb(255, 0, 0)\n      : (m = reRgbPercent.exec(format)) ? new Rgb(m[1] * 255 / 100, m[2] * 255 / 100, m[3] * 255 / 100, 1) // rgb(100%, 0%, 0%)\n      : (m = reRgbaInteger.exec(format)) ? rgba(m[1], m[2], m[3], m[4]) // rgba(255, 0, 0, 1)\n      : (m = reRgbaPercent.exec(format)) ? rgba(m[1] * 255 / 100, m[2] * 255 / 100, m[3] * 255 / 100, m[4]) // rgb(100%, 0%, 0%, 1)\n      : (m = reHslPercent.exec(format)) ? hsla(m[1], m[2] / 100, m[3] / 100, 1) // hsl(120, 50%, 50%)\n      : (m = reHslaPercent.exec(format)) ? hsla(m[1], m[2] / 100, m[3] / 100, m[4]) // hsla(120, 50%, 50%, 1)\n      : named.hasOwnProperty(format) ? rgbn(named[format]) // eslint-disable-line no-prototype-builtins\n      : format === \"transparent\" ? new Rgb(NaN, NaN, NaN, 0)\n      : null;\n}\n\nfunction rgbn(n) {\n  return new Rgb(n >> 16 & 0xff, n >> 8 & 0xff, n & 0xff, 1);\n}\n\nfunction rgba(r, g, b, a) {\n  if (a <= 0) r = g = b = NaN;\n  return new Rgb(r, g, b, a);\n}\n\nexport function rgbConvert(o) {\n  if (!(o instanceof Color)) o = color(o);\n  if (!o) return new Rgb;\n  o = o.rgb();\n  return new Rgb(o.r, o.g, o.b, o.opacity);\n}\n\nexport function rgb(r, g, b, opacity) {\n  return arguments.length === 1 ? rgbConvert(r) : new Rgb(r, g, b, opacity == null ? 1 : opacity);\n}\n\nexport function Rgb(r, g, b, opacity) {\n  this.r = +r;\n  this.g = +g;\n  this.b = +b;\n  this.opacity = +opacity;\n}\n\ndefine(Rgb, rgb, extend(Color, {\n  brighter: function(k) {\n    k = k == null ? brighter : Math.pow(brighter, k);\n    return new Rgb(this.r * k, this.g * k, this.b * k, this.opacity);\n  },\n  darker: function(k) {\n    k = k == null ? darker : Math.pow(darker, k);\n    return new Rgb(this.r * k, this.g * k, this.b * k, this.opacity);\n  },\n  rgb: function() {\n    return this;\n  },\n  displayable: function() {\n    return (-0.5 <= this.r && this.r < 255.5)\n        && (-0.5 <= this.g && this.g < 255.5)\n        && (-0.5 <= this.b && this.b < 255.5)\n        && (0 <= this.opacity && this.opacity <= 1);\n  },\n  hex: rgb_formatHex, // Deprecated! Use color.formatHex.\n  formatHex: rgb_formatHex,\n  formatRgb: rgb_formatRgb,\n  toString: rgb_formatRgb\n}));\n\nfunction rgb_formatHex() {\n  return \"#\" + hex(this.r) + hex(this.g) + hex(this.b);\n}\n\nfunction rgb_formatRgb() {\n  var a = this.opacity; a = isNaN(a) ? 1 : Math.max(0, Math.min(1, a));\n  return (a === 1 ? \"rgb(\" : \"rgba(\")\n      + Math.max(0, Math.min(255, Math.round(this.r) || 0)) + \", \"\n      + Math.max(0, Math.min(255, Math.round(this.g) || 0)) + \", \"\n      + Math.max(0, Math.min(255, Math.round(this.b) || 0))\n      + (a === 1 ? \")\" : \", \" + a + \")\");\n}\n\nfunction hex(value) {\n  value = Math.max(0, Math.min(255, Math.round(value) || 0));\n  return (value < 16 ? \"0\" : \"\") + value.toString(16);\n}\n\nfunction hsla(h, s, l, a) {\n  if (a <= 0) h = s = l = NaN;\n  else if (l <= 0 || l >= 1) h = s = NaN;\n  else if (s <= 0) h = NaN;\n  return new Hsl(h, s, l, a);\n}\n\nexport function hslConvert(o) {\n  if (o instanceof Hsl) return new Hsl(o.h, o.s, o.l, o.opacity);\n  if (!(o instanceof Color)) o = color(o);\n  if (!o) return new Hsl;\n  if (o instanceof Hsl) return o;\n  o = o.rgb();\n  var r = o.r / 255,\n      g = o.g / 255,\n      b = o.b / 255,\n      min = Math.min(r, g, b),\n      max = Math.max(r, g, b),\n      h = NaN,\n      s = max - min,\n      l = (max + min) / 2;\n  if (s) {\n    if (r === max) h = (g - b) / s + (g < b) * 6;\n    else if (g === max) h = (b - r) / s + 2;\n    else h = (r - g) / s + 4;\n    s /= l < 0.5 ? max + min : 2 - max - min;\n    h *= 60;\n  } else {\n    s = l > 0 && l < 1 ? 0 : h;\n  }\n  return new Hsl(h, s, l, o.opacity);\n}\n\nexport function hsl(h, s, l, opacity) {\n  return arguments.length === 1 ? hslConvert(h) : new Hsl(h, s, l, opacity == null ? 1 : opacity);\n}\n\nfunction Hsl(h, s, l, opacity) {\n  this.h = +h;\n  this.s = +s;\n  this.l = +l;\n  this.opacity = +opacity;\n}\n\ndefine(Hsl, hsl, extend(Color, {\n  brighter: function(k) {\n    k = k == null ? brighter : Math.pow(brighter, k);\n    return new Hsl(this.h, this.s, this.l * k, this.opacity);\n  },\n  darker: function(k) {\n    k = k == null ? darker : Math.pow(darker, k);\n    return new Hsl(this.h, this.s, this.l * k, this.opacity);\n  },\n  rgb: function() {\n    var h = this.h % 360 + (this.h < 0) * 360,\n        s = isNaN(h) || isNaN(this.s) ? 0 : this.s,\n        l = this.l,\n        m2 = l + (l < 0.5 ? l : 1 - l) * s,\n        m1 = 2 * l - m2;\n    return new Rgb(\n      hsl2rgb(h >= 240 ? h - 240 : h + 120, m1, m2),\n      hsl2rgb(h, m1, m2),\n      hsl2rgb(h < 120 ? h + 240 : h - 120, m1, m2),\n      this.opacity\n    );\n  },\n  displayable: function() {\n    return (0 <= this.s && this.s <= 1 || isNaN(this.s))\n        && (0 <= this.l && this.l <= 1)\n        && (0 <= this.opacity && this.opacity <= 1);\n  },\n  formatHsl: function() {\n    var a = this.opacity; a = isNaN(a) ? 1 : Math.max(0, Math.min(1, a));\n    return (a === 1 ? \"hsl(\" : \"hsla(\")\n        + (this.h || 0) + \", \"\n        + (this.s || 0) * 100 + \"%, \"\n        + (this.l || 0) * 100 + \"%\"\n        + (a === 1 ? \")\" : \", \" + a + \")\");\n  }\n}));\n\n/* From FvD 13.37, CSS Color Module Level 3 */\nfunction hsl2rgb(h, m1, m2) {\n  return (h < 60 ? m1 + (m2 - m1) * h / 60\n      : h < 180 ? m2\n      : h < 240 ? m1 + (m2 - m1) * (240 - h) / 60\n      : m1) * 255;\n}\n", "export const radians = Math.PI / 180;\nexport const degrees = 180 / Math.PI;\n", "import define, {extend} from \"./define.js\";\nimport {Color, rgbConvert, Rgb} from \"./color.js\";\nimport {degrees, radians} from \"./math.js\";\n\n// https://observablehq.com/@mbostock/lab-and-rgb\nconst K = 18,\n    Xn = 0.96422,\n    Yn = 1,\n    Zn = 0.82521,\n    t0 = 4 / 29,\n    t1 = 6 / 29,\n    t2 = 3 * t1 * t1,\n    t3 = t1 * t1 * t1;\n\nfunction labConvert(o) {\n  if (o instanceof Lab) return new Lab(o.l, o.a, o.b, o.opacity);\n  if (o instanceof Hcl) return hcl2lab(o);\n  if (!(o instanceof Rgb)) o = rgbConvert(o);\n  var r = rgb2lrgb(o.r),\n      g = rgb2lrgb(o.g),\n      b = rgb2lrgb(o.b),\n      y = xyz2lab((0.2225045 * r + 0.7168786 * g + 0.0606169 * b) / Yn), x, z;\n  if (r === g && g === b) x = z = y; else {\n    x = xyz2lab((0.4360747 * r + 0.3850649 * g + 0.1430804 * b) / Xn);\n    z = xyz2lab((0.0139322 * r + 0.0971045 * g + 0.7141733 * b) / Zn);\n  }\n  return new Lab(116 * y - 16, 500 * (x - y), 200 * (y - z), o.opacity);\n}\n\nexport function gray(l, opacity) {\n  return new Lab(l, 0, 0, opacity == null ? 1 : opacity);\n}\n\nexport default function lab(l, a, b, opacity) {\n  return arguments.length === 1 ? labConvert(l) : new Lab(l, a, b, opacity == null ? 1 : opacity);\n}\n\nexport function Lab(l, a, b, opacity) {\n  this.l = +l;\n  this.a = +a;\n  this.b = +b;\n  this.opacity = +opacity;\n}\n\ndefine(Lab, lab, extend(Color, {\n  brighter: function(k) {\n    return new Lab(this.l + K * (k == null ? 1 : k), this.a, this.b, this.opacity);\n  },\n  darker: function(k) {\n    return new Lab(this.l - K * (k == null ? 1 : k), this.a, this.b, this.opacity);\n  },\n  rgb: function() {\n    var y = (this.l + 16) / 116,\n        x = isNaN(this.a) ? y : y + this.a / 500,\n        z = isNaN(this.b) ? y : y - this.b / 200;\n    x = Xn * lab2xyz(x);\n    y = Yn * lab2xyz(y);\n    z = Zn * lab2xyz(z);\n    return new Rgb(\n      lrgb2rgb( 3.1338561 * x - 1.6168667 * y - 0.4906146 * z),\n      lrgb2rgb(-0.9787684 * x + 1.9161415 * y + 0.0334540 * z),\n      lrgb2rgb( 0.0719453 * x - 0.2289914 * y + 1.4052427 * z),\n      this.opacity\n    );\n  }\n}));\n\nfunction xyz2lab(t) {\n  return t > t3 ? Math.pow(t, 1 / 3) : t / t2 + t0;\n}\n\nfunction lab2xyz(t) {\n  return t > t1 ? t * t * t : t2 * (t - t0);\n}\n\nfunction lrgb2rgb(x) {\n  return 255 * (x <= 0.0031308 ? 12.92 * x : 1.055 * Math.pow(x, 1 / 2.4) - 0.055);\n}\n\nfunction rgb2lrgb(x) {\n  return (x /= 255) <= 0.04045 ? x / 12.92 : Math.pow((x + 0.055) / 1.055, 2.4);\n}\n\nfunction hclConvert(o) {\n  if (o instanceof Hcl) return new Hcl(o.h, o.c, o.l, o.opacity);\n  if (!(o instanceof Lab)) o = labConvert(o);\n  if (o.a === 0 && o.b === 0) return new Hcl(NaN, 0 < o.l && o.l < 100 ? 0 : NaN, o.l, o.opacity);\n  var h = Math.atan2(o.b, o.a) * degrees;\n  return new Hcl(h < 0 ? h + 360 : h, Math.sqrt(o.a * o.a + o.b * o.b), o.l, o.opacity);\n}\n\nexport function lch(l, c, h, opacity) {\n  return arguments.length === 1 ? hclConvert(l) : new Hcl(h, c, l, opacity == null ? 1 : opacity);\n}\n\nexport function hcl(h, c, l, opacity) {\n  return arguments.length === 1 ? hclConvert(h) : new Hcl(h, c, l, opacity == null ? 1 : opacity);\n}\n\nexport function Hcl(h, c, l, opacity) {\n  this.h = +h;\n  this.c = +c;\n  this.l = +l;\n  this.opacity = +opacity;\n}\n\nfunction hcl2lab(o) {\n  if (isNaN(o.h)) return new Lab(o.l, 0, 0, o.opacity);\n  var h = o.h * radians;\n  return new Lab(o.l, Math.cos(h) * o.c, Math.sin(h) * o.c, o.opacity);\n}\n\ndefine(Hcl, hcl, extend(Color, {\n  brighter: function(k) {\n    return new Hcl(this.h, this.c, this.l + K * (k == null ? 1 : k), this.opacity);\n  },\n  darker: function(k) {\n    return new Hcl(this.h, this.c, this.l - K * (k == null ? 1 : k), this.opacity);\n  },\n  rgb: function() {\n    return hcl2lab(this).rgb();\n  }\n}));\n", "import define, {extend} from \"./define.js\";\nimport {Color, rgbConvert, Rgb, darker, brighter} from \"./color.js\";\nimport {degrees, radians} from \"./math.js\";\n\nvar A = -0.14861,\n    B = +1.78277,\n    C = -0.29227,\n    D = -0.90649,\n    E = +1.97294,\n    ED = E * D,\n    EB = E * B,\n    BC_DA = B * C - D * A;\n\nfunction cubehelixConvert(o) {\n  if (o instanceof Cubehelix) return new Cubehelix(o.h, o.s, o.l, o.opacity);\n  if (!(o instanceof Rgb)) o = rgbConvert(o);\n  var r = o.r / 255,\n      g = o.g / 255,\n      b = o.b / 255,\n      l = (BC_DA * b + ED * r - EB * g) / (BC_DA + ED - EB),\n      bl = b - l,\n      k = (E * (g - l) - C * bl) / D,\n      s = Math.sqrt(k * k + bl * bl) / (E * l * (1 - l)), // NaN if l=0 or l=1\n      h = s ? Math.atan2(k, bl) * degrees - 120 : NaN;\n  return new Cubehelix(h < 0 ? h + 360 : h, s, l, o.opacity);\n}\n\nexport default function cubehelix(h, s, l, opacity) {\n  return arguments.length === 1 ? cubehelixConvert(h) : new Cubehelix(h, s, l, opacity == null ? 1 : opacity);\n}\n\nexport function Cubehelix(h, s, l, opacity) {\n  this.h = +h;\n  this.s = +s;\n  this.l = +l;\n  this.opacity = +opacity;\n}\n\ndefine(Cubehelix, cubehelix, extend(Color, {\n  brighter: function(k) {\n    k = k == null ? brighter : Math.pow(brighter, k);\n    return new Cubehelix(this.h, this.s, this.l * k, this.opacity);\n  },\n  darker: function(k) {\n    k = k == null ? darker : Math.pow(darker, k);\n    return new Cubehelix(this.h, this.s, this.l * k, this.opacity);\n  },\n  rgb: function() {\n    var h = isNaN(this.h) ? 0 : (this.h + 120) * radians,\n        l = +this.l,\n        a = isNaN(this.s) ? 0 : this.s * l * (1 - l),\n        cosh = Math.cos(h),\n        sinh = Math.sin(h);\n    return new Rgb(\n      255 * (l + a * (A * cosh + B * sinh)),\n      255 * (l + a * (C * cosh + D * sinh)),\n      255 * (l + a * (E * cosh)),\n      this.opacity\n    );\n  }\n}));\n", "import {cubehelix} from \"d3-color\";\nimport {interpolateCubehelixLong} from \"d3-interpolate\";\n\nexport default interpolateCubehelixLong(cubehelix(300, 0.5, 0.0), cubehelix(-240, 0.5, 1.0));\n", "import {cubehelix} from \"d3-color\";\nimport {interpolateCubehelixLong} from \"d3-interpolate\";\n\nexport var warm = interpolateCubehelixLong(cubehelix(-100, 0.75, 0.35), cubehelix(80, 1.50, 0.8));\n\nexport var cool = interpolateCubehelixLong(cubehelix(260, 0.75, 0.35), cubehelix(80, 1.50, 0.8));\n\nvar c = cubehelix();\n\nexport default function(t) {\n  if (t < 0 || t > 1) t -= Math.floor(t);\n  var ts = Math.abs(t - 0.5);\n  c.h = 360 * t - 100;\n  c.s = 1.5 - 1.5 * ts;\n  c.l = 0.8 - 0.9 * ts;\n  return c + \"\";\n}\n", "import {rgb} from \"d3-color\";\n\nvar c = rgb(),\n    pi_1_3 = Math.PI / 3,\n    pi_2_3 = Math.PI * 2 / 3;\n\nexport default function(t) {\n  var x;\n  t = (0.5 - t) * Math.PI;\n  c.r = 255 * (x = Math.sin(t)) * x;\n  c.g = 255 * (x = Math.sin(t + pi_1_3)) * x;\n  c.b = 255 * (x = Math.sin(t + pi_2_3)) * x;\n  return c + \"\";\n}\n", "export default function(t) {\n  t = Math.max(0, Math.min(1, t));\n  return \"rgb(\"\n      + Math.max(0, Math.min(255, Math.round(34.61 + t * (1172.33 - t * (10793.56 - t * (33300.12 - t * (38394.49 - t * 14825.05))))))) + \", \"\n      + Math.max(0, Math.min(255, Math.round(23.31 + t * (557.33 + t * (1225.33 - t * (3574.96 - t * (1073.77 + t * 707.56))))))) + \", \"\n      + Math.max(0, Math.min(255, Math.round(27.2 + t * (3211.1 - t * (15327.97 - t * (27814 - t * (22569.18 - t * 6838.66)))))))\n      + \")\";\n}\n", "import colors from \"../colors.js\";\n\nfunction ramp(range) {\n  var n = range.length;\n  return function(t) {\n    return range[Math.max(0, Math.min(n - 1, Math.floor(t * n)))];\n  };\n}\n\nexport default ramp(colors(\"44015444025645045745055946075a46085c460a5d460b5e470d60470e6147106347116447136548146748166848176948186a481a6c481b6d481c6e481d6f481f70482071482173482374482475482576482677482878482979472a7a472c7a472d7b472e7c472f7d46307e46327e46337f463480453581453781453882443983443a83443b84433d84433e85423f854240864241864142874144874045884046883f47883f48893e49893e4a893e4c8a3d4d8a3d4e8a3c4f8a3c508b3b518b3b528b3a538b3a548c39558c39568c38588c38598c375a8c375b8d365c8d365d8d355e8d355f8d34608d34618d33628d33638d32648e32658e31668e31678e31688e30698e306a8e2f6b8e2f6c8e2e6d8e2e6e8e2e6f8e2d708e2d718e2c718e2c728e2c738e2b748e2b758e2a768e2a778e2a788e29798e297a8e297b8e287c8e287d8e277e8e277f8e27808e26818e26828e26828e25838e25848e25858e24868e24878e23888e23898e238a8d228b8d228c8d228d8d218e8d218f8d21908d21918c20928c20928c20938c1f948c1f958b1f968b1f978b1f988b1f998a1f9a8a1e9b8a1e9c891e9d891f9e891f9f881fa0881fa1881fa1871fa28720a38620a48621a58521a68522a78522a88423a98324aa8325ab8225ac8226ad8127ad8128ae8029af7f2ab07f2cb17e2db27d2eb37c2fb47c31b57b32b67a34b67935b77937b87838b9773aba763bbb753dbc743fbc7340bd7242be7144bf7046c06f48c16e4ac16d4cc26c4ec36b50c46a52c56954c56856c66758c7655ac8645cc8635ec96260ca6063cb5f65cb5e67cc5c69cd5b6ccd5a6ece5870cf5773d05675d05477d1537ad1517cd2507fd34e81d34d84d44b86d54989d5488bd6468ed64590d74393d74195d84098d83e9bd93c9dd93ba0da39a2da37a5db36a8db34aadc32addc30b0dd2fb2dd2db5de2bb8de29bade28bddf26c0df25c2df23c5e021c8e020cae11fcde11dd0e11cd2e21bd5e21ad8e219dae319dde318dfe318e2e418e5e419e7e419eae51aece51befe51cf1e51df4e61ef6e620f8e621fbe723fde725\"));\n\nexport var magma = ramp(colors(\"00000401000501010601010802010902020b02020d03030f03031204041405041606051806051a07061c08071e0907200a08220b09240c09260d0a290e0b2b100b2d110c2f120d31130d34140e36150e38160f3b180f3d19103f1a10421c10441d11471e114920114b21114e22115024125325125527125829115a2a115c2c115f2d11612f116331116533106734106936106b38106c390f6e3b0f703d0f713f0f72400f74420f75440f764510774710784910784a10794c117a4e117b4f127b51127c52137c54137d56147d57157e59157e5a167e5c167f5d177f5f187f601880621980641a80651a80671b80681c816a1c816b1d816d1d816e1e81701f81721f817320817521817621817822817922827b23827c23827e24828025828125818326818426818627818827818928818b29818c29818e2a81902a81912b81932b80942c80962c80982d80992d809b2e7f9c2e7f9e2f7fa02f7fa1307ea3307ea5317ea6317da8327daa337dab337cad347cae347bb0357bb2357bb3367ab5367ab73779b83779ba3878bc3978bd3977bf3a77c03a76c23b75c43c75c53c74c73d73c83e73ca3e72cc3f71cd4071cf4070d0416fd2426fd3436ed5446dd6456cd8456cd9466bdb476adc4869de4968df4a68e04c67e24d66e34e65e44f64e55064e75263e85362e95462ea5661eb5760ec5860ed5a5fee5b5eef5d5ef05f5ef1605df2625df2645cf3655cf4675cf4695cf56b5cf66c5cf66e5cf7705cf7725cf8745cf8765cf9785df9795df97b5dfa7d5efa7f5efa815ffb835ffb8560fb8761fc8961fc8a62fc8c63fc8e64fc9065fd9266fd9467fd9668fd9869fd9a6afd9b6bfe9d6cfe9f6dfea16efea36ffea571fea772fea973feaa74feac76feae77feb078feb27afeb47bfeb67cfeb77efeb97ffebb81febd82febf84fec185fec287fec488fec68afec88cfeca8dfecc8ffecd90fecf92fed194fed395fed597fed799fed89afdda9cfddc9efddea0fde0a1fde2a3fde3a5fde5a7fde7a9fde9aafdebacfcecaefceeb0fcf0b2fcf2b4fcf4b6fcf6b8fcf7b9fcf9bbfcfbbdfcfdbf\"));\n\nexport var inferno = ramp(colors(\"00000401000501010601010802010a02020c02020e03021004031204031405041706041907051b08051d09061f0a07220b07240c08260d08290e092b10092d110a30120a32140b34150b37160b39180c3c190c3e1b0c411c0c431e0c451f0c48210c4a230c4c240c4f260c51280b53290b552b0b572d0b592f0a5b310a5c320a5e340a5f3609613809623909633b09643d09653e0966400a67420a68440a68450a69470b6a490b6a4a0c6b4c0c6b4d0d6c4f0d6c510e6c520e6d540f6d550f6d57106e59106e5a116e5c126e5d126e5f136e61136e62146e64156e65156e67166e69166e6a176e6c186e6d186e6f196e71196e721a6e741a6e751b6e771c6d781c6d7a1d6d7c1d6d7d1e6d7f1e6c801f6c82206c84206b85216b87216b88226a8a226a8c23698d23698f24699025689225689326679526679727669827669a28659b29649d29649f2a63a02a63a22b62a32c61a52c60a62d60a82e5fa92e5eab2f5ead305dae305cb0315bb1325ab3325ab43359b63458b73557b93556ba3655bc3754bd3853bf3952c03a51c13a50c33b4fc43c4ec63d4dc73e4cc83f4bca404acb4149cc4248ce4347cf4446d04545d24644d34743d44842d54a41d74b3fd84c3ed94d3dda4e3cdb503bdd513ade5238df5337e05536e15635e25734e35933e45a31e55c30e65d2fe75e2ee8602de9612bea632aeb6429eb6628ec6726ed6925ee6a24ef6c23ef6e21f06f20f1711ff1731df2741cf3761bf37819f47918f57b17f57d15f67e14f68013f78212f78410f8850ff8870ef8890cf98b0bf98c0af98e09fa9008fa9207fa9407fb9606fb9706fb9906fb9b06fb9d07fc9f07fca108fca309fca50afca60cfca80dfcaa0ffcac11fcae12fcb014fcb216fcb418fbb61afbb81dfbba1ffbbc21fbbe23fac026fac228fac42afac62df9c72ff9c932f9cb35f8cd37f8cf3af7d13df7d340f6d543f6d746f5d949f5db4cf4dd4ff4df53f4e156f3e35af3e55df2e661f2e865f2ea69f1ec6df1ed71f1ef75f1f179f2f27df2f482f3f586f3f68af4f88ef5f992f6fa96f8fb9af9fc9dfafda1fcffa4\"));\n\nexport var plasma = ramp(colors(\"0d088710078813078916078a19068c1b068d1d068e20068f2206902406912605912805922a05932c05942e05952f059631059733059735049837049938049a3a049a3c049b3e049c3f049c41049d43039e44039e46039f48039f4903a04b03a14c02a14e02a25002a25102a35302a35502a45601a45801a45901a55b01a55c01a65e01a66001a66100a76300a76400a76600a76700a86900a86a00a86c00a86e00a86f00a87100a87201a87401a87501a87701a87801a87a02a87b02a87d03a87e03a88004a88104a78305a78405a78606a68707a68808a68a09a58b0aa58d0ba58e0ca48f0da4910ea3920fa39410a29511a19613a19814a099159f9a169f9c179e9d189d9e199da01a9ca11b9ba21d9aa31e9aa51f99a62098a72197a82296aa2395ab2494ac2694ad2793ae2892b02991b12a90b22b8fb32c8eb42e8db52f8cb6308bb7318ab83289ba3388bb3488bc3587bd3786be3885bf3984c03a83c13b82c23c81c33d80c43e7fc5407ec6417dc7427cc8437bc9447aca457acb4679cc4778cc4977cd4a76ce4b75cf4c74d04d73d14e72d24f71d35171d45270d5536fd5546ed6556dd7566cd8576bd9586ada5a6ada5b69db5c68dc5d67dd5e66de5f65de6164df6263e06363e16462e26561e26660e3685fe4695ee56a5de56b5de66c5ce76e5be76f5ae87059e97158e97257ea7457eb7556eb7655ec7754ed7953ed7a52ee7b51ef7c51ef7e50f07f4ff0804ef1814df1834cf2844bf3854bf3874af48849f48948f58b47f58c46f68d45f68f44f79044f79143f79342f89441f89540f9973ff9983ef99a3efa9b3dfa9c3cfa9e3bfb9f3afba139fba238fca338fca537fca636fca835fca934fdab33fdac33fdae32fdaf31fdb130fdb22ffdb42ffdb52efeb72dfeb82cfeba2cfebb2bfebd2afebe2afec029fdc229fdc328fdc527fdc627fdc827fdca26fdcb26fccd25fcce25fcd025fcd225fbd324fbd524fbd724fad824fada24f9dc24f9dd25f8df25f8e125f7e225f7e425f6e626f6e826f5e926f5eb27f4ed27f3ee27f3f027f2f227f1f426f1f525f0f724f0f921\"));\n", "import {\n    schemeCategory10,\n    schemeAccent,\n    schemeDark2,\n    schemePaired,\n    schemePastel1,\n    schemePastel2,\n    schemeSet1,\n    schemeSet2,\n    schemeSet3,\n} from 'd3-scale-chromatic'\n\nexport const categoricalColorSchemes = {\n    nivo: ['#e8c1a0', '#f47560', '#f1e15b', '#e8a838', '#61cdbb', '#97e3d5'],\n    category10: schemeCategory10,\n    accent: schemeAccent,\n    dark2: schemeDark2,\n    paired: schemePaired,\n    pastel1: schemePastel1,\n    pastel2: schemePastel2,\n    set1: schemeSet1,\n    set2: schemeSet2,\n    set3: schemeSet3,\n}\n\nexport type CategoricalColorSchemeId = keyof typeof categoricalColorSchemes\n\nexport const categoricalColorSchemeIds = Object.keys(\n    categoricalColorSchemes\n) as CategoricalColorSchemeId[]\n", "import {\n    schemeBrBG,\n    interpolateBrBG,\n    schemePRGn,\n    interpolatePRGn,\n    schemePiYG,\n    interpolatePiYG,\n    schemePuOr,\n    interpolatePuOr,\n    schemeRdBu,\n    interpolateRdBu,\n    schemeRdGy,\n    interpolateRdGy,\n    schemeRdYlBu,\n    interpolateRdYlBu,\n    schemeRdYlGn,\n    interpolateRdYlGn,\n    schemeSpectral,\n    interpolateSpectral,\n} from 'd3-scale-chromatic'\n\n// Diverging color schemes support a size k ranging from 3 to 11\nexport const divergingColorSchemes = {\n    brown_blueGreen: schemeBrBG,\n    purpleRed_green: schemePRGn,\n    pink_yellowGreen: schemePiYG,\n    purple_orange: schemePuOr,\n    red_blue: schemeRdBu,\n    red_grey: schemeRdGy,\n    red_yellow_blue: schemeRdYlBu,\n    red_yellow_green: schemeRdYlGn,\n    spectral: schemeSpectral,\n}\n\nexport type DivergingColorSchemeId = keyof typeof divergingColorSchemes\n\nexport const divergingColorSchemeIds = Object.keys(\n    divergingColorSchemes\n) as DivergingColorSchemeId[]\n\nexport const divergingColorInterpolators = {\n    brown_blueGreen: interpolateBrBG,\n    purpleRed_green: interpolatePRGn,\n    pink_yellowGreen: interpolatePiYG,\n    purple_orange: interpolatePuOr,\n    red_blue: interpolateRdBu,\n    red_grey: interpolateRdGy,\n    red_yellow_blue: interpolateRdYlBu,\n    red_yellow_green: interpolateRdYlGn,\n    spectral: interpolateSpectral,\n}\n\nexport type DivergingColorInterpolatorId = keyof typeof divergingColorInterpolators\n", "import {\n    // single hue\n    schemeBlues,\n    interpolateBlues,\n    schemeGreens,\n    interpolateGreens,\n    schemeGreys,\n    interpolateGreys,\n    schemeOranges,\n    interpolateOranges,\n    schemePurples,\n    interpolatePurples,\n    schemeReds,\n    interpolateReds,\n    // multi hue\n    schemeBuGn,\n    interpolateBuGn,\n    schemeBuPu,\n    interpolateBuPu,\n    schemeGnBu,\n    interpolateGnBu,\n    schemeOrRd,\n    interpolateOrRd,\n    schemePuBuGn,\n    interpolatePuBuGn,\n    schemePuBu,\n    interpolatePuBu,\n    schemePuRd,\n    interpolatePuRd,\n    schemeRdPu,\n    interpolateRdPu,\n    schemeYlGnBu,\n    interpolateYlGnBu,\n    schemeYlGn,\n    interpolateYlGn,\n    schemeYlOrBr,\n    interpolateYlOrBr,\n    schemeYlOrRd,\n    interpolateYlOrRd,\n    interpolateTurbo,\n    interpolateViridis,\n    interpolateInferno,\n    interpolateMagma,\n    interpolatePlasma,\n    interpolateCividis,\n    interpolateWarm,\n    interpolateCool,\n    interpolateCubehelixDefault,\n} from 'd3-scale-chromatic'\n\n// Sequential, single-hue color schemes support a size k ranging from 3 to 9\n// Sequential, multi-hue color schemes support a size k ranging from 3 to 9\nexport const sequentialColorSchemes = {\n    // single hue\n    blues: schemeBlues,\n    greens: schemeGreens,\n    greys: schemeGreys,\n    oranges: schemeOranges,\n    purples: schemePurples,\n    reds: schemeReds,\n    // multi hue\n    blue_green: schemeBuGn,\n    blue_purple: schemeBuPu,\n    green_blue: schemeGnBu,\n    orange_red: schemeOrRd,\n    purple_blue_green: schemePuBuGn,\n    purple_blue: schemePuBu,\n    purple_red: schemePuRd,\n    red_purple: schemeRdPu,\n    yellow_green_blue: schemeYlGnBu,\n    yellow_green: schemeYlGn,\n    yellow_orange_brown: schemeYlOrBr,\n    yellow_orange_red: schemeYlOrRd,\n}\n\nexport type SequentialColorSchemeId = keyof typeof sequentialColorSchemes\n\nexport const sequentialColorSchemeIds = Object.keys(\n    sequentialColorSchemes\n) as SequentialColorSchemeId[]\n\nexport const sequentialColorInterpolators = {\n    // single hue\n    blues: interpolateBlues,\n    greens: interpolateGreens,\n    greys: interpolateGreys,\n    oranges: interpolateOranges,\n    purples: interpolatePurples,\n    reds: interpolateReds,\n    // multi hue\n    turbo: interpolateTurbo,\n    viridis: interpolateViridis,\n    inferno: interpolateInferno,\n    magma: interpolateMagma,\n    plasma: interpolatePlasma,\n    cividis: interpolateCividis,\n    warm: interpolateWarm,\n    cool: interpolateCool,\n    cubehelixDefault: interpolateCubehelixDefault,\n    blue_green: interpolateBuGn,\n    blue_purple: interpolateBuPu,\n    green_blue: interpolateGnBu,\n    orange_red: interpolateOrRd,\n    purple_blue_green: interpolatePuBuGn,\n    purple_blue: interpolatePuBu,\n    purple_red: interpolatePuRd,\n    red_purple: interpolateRdPu,\n    yellow_green_blue: interpolateYlGnBu,\n    yellow_green: interpolateYlGn,\n    yellow_orange_brown: interpolateYlOrBr,\n    yellow_orange_red: interpolateYlOrRd,\n}\n\nexport type SequentialColorInterpolatorId = keyof typeof sequentialColorInterpolators\n", "import {\n    categoricalColorSchemes,\n    categoricalColorSchemeIds,\n    CategoricalColorSchemeId,\n} from './categorical'\nimport { divergingColorSchemes, divergingColorSchemeIds, DivergingColorSchemeId } from './diverging'\nimport {\n    sequentialColorSchemes,\n    sequentialColorSchemeIds,\n    SequentialColorSchemeId,\n} from './sequential'\n\nexport const colorSchemes = {\n    ...categoricalColorSchemes,\n    ...divergingColorSchemes,\n    ...sequentialColorSchemes,\n}\n\nexport type ColorSchemeId =\n    | CategoricalColorSchemeId\n    | DivergingColorSchemeId\n    | SequentialColorSchemeId\n\nexport const colorSchemeIds = Object.keys(colorSchemes) as ColorSchemeId[]\n\nexport const isCategoricalColorScheme = (\n    scheme: ColorSchemeId\n): scheme is CategoricalColorSchemeId =>\n    categoricalColorSchemeIds.includes(scheme as CategoricalColorSchemeId)\n\nexport const isDivergingColorScheme = (scheme: ColorSchemeId): scheme is DivergingColorSchemeId =>\n    divergingColorSchemeIds.includes(scheme as DivergingColorSchemeId)\n\nexport const isSequentialColorScheme = (scheme: ColorSchemeId): scheme is SequentialColorSchemeId =>\n    sequentialColorSchemeIds.includes(scheme as SequentialColorSchemeId)\n", "import { interpolateRainbow, interpolateSinebow } from 'd3-scale-chromatic'\n\nexport const cyclicalColorInterpolators = {\n    rainbow: interpolateRainbow,\n    sinebow: interpolateSinebow,\n}\n\nexport type CyclicalColorInterpolatorId = keyof typeof cyclicalColorInterpolators\n", "import { divergingColorInterpolators, DivergingColorInterpolatorId } from './diverging'\nimport { sequentialColorInterpolators, SequentialColorInterpolatorId } from './sequential'\nimport { cyclicalColorInterpolators, CyclicalColorInterpolatorId } from './cyclical'\n\nexport const colorInterpolators = {\n    ...divergingColorInterpolators,\n    ...sequentialColorInterpolators,\n    ...cyclicalColorInterpolators,\n}\n\nexport type ColorInterpolatorId =\n    | DivergingColorInterpolatorId\n    | SequentialColorInterpolatorId\n    | CyclicalColorInterpolatorId\n\nexport const colorInterpolatorIds = Object.keys(colorInterpolators) as ColorInterpolatorId[]\n", "import { useMemo } from 'react'\nimport { get, isPlainObject } from 'lodash'\nimport { rgb, RGBColor } from 'd3-color'\nimport { Theme } from '@nivo/core'\n\nexport type ColorModifierBrightness = ['brighter', number]\n\nexport type ColorModifierDarkness = ['darker', number]\n\nexport type ColorModifierOpacity = ['opacity', number]\n\nexport type ColorModifier = ColorModifierBrightness | ColorModifierDarkness | ColorModifierOpacity\n\nexport type ColorModifierFunction = (color: RGBColor) => RGBColor\n\nexport type InheritedColorConfigStaticColor = string\n\nexport type InheritedColorConfigCustomFunction<Datum> = (d: Datum, ...drest: Datum[]) => string\n\nexport interface InheritedColorConfigFromTheme {\n    theme: string\n}\n\nexport interface InheritedColorConfigFromContext {\n    from: string\n    modifiers?: ColorModifier[]\n}\n\nexport type InheritedColorConfig<Datum> =\n    | InheritedColorConfigStaticColor\n    | InheritedColorConfigCustomFunction<Datum>\n    | InheritedColorConfigFromTheme\n    | InheritedColorConfigFromContext\n\nconst isInheritedColorConfigFromTheme = <Datum>(\n    config: InheritedColorConfig<Datum>\n): config is InheritedColorConfigFromTheme => {\n    return (config as InheritedColorConfigFromTheme).theme !== undefined\n}\n\nconst isInheritedColorConfigFromContext = <Datum>(\n    config: InheritedColorConfig<Datum>\n): config is InheritedColorConfigFromContext => {\n    return (config as InheritedColorConfigFromContext).from !== undefined\n}\n\n/**\n * Create a color generator for items which\n * might inherit from parent context,\n * for example labels, outlines…\n *\n * Support the following strategies:\n * - custom function\n * - color from theme\n * - color from parent, with optional color modifiers\n * - static color\n */\nexport const getInheritedColorGenerator = <Datum = any>(\n    config: InheritedColorConfig<Datum>,\n    theme?: Theme\n) => {\n    // user provided function\n    if (typeof config === 'function') {\n        return config\n    }\n\n    if (isPlainObject(config)) {\n        // use color from theme\n        if (isInheritedColorConfigFromTheme(config)) {\n            if (theme === undefined) {\n                throw new Error(`Unable to use color from theme as no theme was provided`)\n            }\n\n            const themeColor = get(theme, config.theme)\n            if (themeColor === undefined) {\n                throw new Error(`Color from theme is undefined at path: '${config.theme}'`)\n            }\n\n            return () => themeColor\n        }\n\n        // use color from parent with optional color modifiers\n        if (isInheritedColorConfigFromContext(config)) {\n            const getColor = (d: Datum) => get(d, config.from)\n\n            if (Array.isArray(config.modifiers)) {\n                const modifiers: ColorModifierFunction[] = []\n                for (const modifier of config.modifiers) {\n                    const [modifierType, amount] = modifier\n                    if (modifierType === 'brighter') {\n                        modifiers.push(color => color.brighter(amount))\n                    } else if (modifierType === 'darker') {\n                        modifiers.push(color => color.darker(amount))\n                    } else if (modifierType === 'opacity') {\n                        modifiers.push(color => {\n                            color.opacity = amount\n\n                            return color\n                        })\n                    } else {\n                        throw new Error(\n                            `Invalid color modifier: '${modifierType}', must be one of: 'brighter', 'darker', 'opacity'`\n                        )\n                    }\n                }\n\n                if (modifiers.length === 0) return getColor\n\n                return (datum: Datum) =>\n                    modifiers\n                        .reduce((color, modify) => modify(color), rgb(getColor(datum)))\n                        .toString()\n            }\n\n            // no modifier\n            return getColor\n        }\n\n        throw new Error(\n            `Invalid color spec, you should either specify 'theme' or 'from' when using a config object`\n        )\n    }\n\n    // use provided color statically\n    return () => config as string\n}\n\nexport const useInheritedColor = <Datum = any>(\n    config: InheritedColorConfig<Datum>,\n    theme?: Theme\n) => useMemo(() => getInheritedColorGenerator<Datum>(config, theme), [config, theme])\n", "import PropTypes from 'prop-types'\nimport { colorSchemeIds } from './schemes'\n\nexport const ordinalColorsPropType = PropTypes.oneOfType([\n    PropTypes.func,\n    PropTypes.arrayOf(PropTypes.string),\n    PropTypes.shape({\n        scheme: PropTypes.oneOf(colorSchemeIds).isRequired,\n        size: PropTypes.number,\n    }),\n    PropTypes.shape({\n        datum: PropTypes.string.isRequired,\n    }),\n    PropTypes.string,\n])\n\nexport const inheritedColorPropType = PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.func,\n    PropTypes.shape({\n        theme: PropTypes.string.isRequired,\n    }),\n    PropTypes.shape({\n        from: PropTypes.string.isRequired,\n        modifiers: PropTypes.arrayOf(PropTypes.array),\n    }),\n])\n", "import { useMemo } from 'react'\nimport { scaleSequential } from 'd3-scale'\nimport { colorInterpolators, ColorInterpolatorId } from '../schemes'\n\nexport interface SequentialColorScaleBaseConfig {\n    type: 'sequential'\n    minValue?: number\n    maxValue?: number\n}\n\nexport interface SequentialColorScaleSchemeConfig extends SequentialColorScaleBaseConfig {\n    scheme?: ColorInterpolatorId\n}\n\nexport interface SequentialColorScaleColorsConfig extends SequentialColorScaleBaseConfig {\n    colors: [string, string]\n}\n\nexport interface SequentialColorScaleInterpolatorConfig extends SequentialColorScaleBaseConfig {\n    interpolator: (t: number) => string\n}\n\nexport type SequentialColorScaleConfig =\n    | SequentialColorScaleSchemeConfig\n    | SequentialColorScaleColorsConfig\n    | SequentialColorScaleInterpolatorConfig\n\nexport interface SequentialColorScaleValues {\n    min: number\n    max: number\n}\n\nexport const sequentialColorScaleDefaults: {\n    scheme: ColorInterpolatorId\n} = {\n    scheme: 'turbo',\n}\n\nexport const getSequentialColorScale = (\n    config: SequentialColorScaleConfig,\n    values: SequentialColorScaleValues\n) => {\n    const { minValue, maxValue } = config\n    const min = minValue !== undefined ? minValue : values.min\n    const max = maxValue !== undefined ? maxValue : values.max\n\n    const colorScale = scaleSequential<string>().domain([min, max]).clamp(true)\n    if ('colors' in config) {\n        colorScale.range(config.colors)\n    } else if ('interpolator' in config) {\n        colorScale.interpolator(config.interpolator)\n    } else {\n        const scheme = config.scheme ?? sequentialColorScaleDefaults.scheme\n        colorScale.interpolator(colorInterpolators[scheme])\n    }\n\n    return colorScale\n}\n\nexport const useSequentialColorScale = (\n    config: SequentialColorScaleConfig,\n    values: SequentialColorScaleValues\n) => useMemo(() => getSequentialColorScale(config, values), [config, values])\n", "import { useMemo } from 'react'\nimport { scaleDiverging } from 'd3-scale'\nimport { colorInterpolators, ColorInterpolatorId } from '../schemes'\n\ninterface DivergingColorScaleBaseConfig {\n    type: 'diverging'\n    minValue?: number\n    maxValue?: number\n    divergeAt?: number\n}\n\nexport interface DivergingColorScaleSchemeConfig extends DivergingColorScaleBaseConfig {\n    scheme?: ColorInterpolatorId\n}\n\nexport interface DivergingColorScaleColorsConfig extends DivergingColorScaleBaseConfig {\n    colors: [string, string, string]\n}\n\nexport interface DivergingColorScaleInterpolatorConfig extends DivergingColorScaleBaseConfig {\n    interpolator: (t: number) => string\n}\n\nexport type DivergingColorScaleConfig =\n    | DivergingColorScaleSchemeConfig\n    | DivergingColorScaleColorsConfig\n    | DivergingColorScaleInterpolatorConfig\n\nexport interface DivergingColorScaleValues {\n    min: number\n    max: number\n}\n\nexport const divergingColorScaleDefaults: {\n    scheme: ColorInterpolatorId\n    divergeAt: number\n} = {\n    scheme: 'red_yellow_blue',\n    divergeAt: 0.5,\n}\n\nexport const getDivergingColorScale = (\n    config: DivergingColorScaleConfig,\n    values: DivergingColorScaleValues\n) => {\n    const { minValue, maxValue } = config\n    const min = minValue !== undefined ? minValue : values.min\n    const max = maxValue !== undefined ? maxValue : values.max\n    const domain = [min, min + (max - min) / 2, max]\n\n    const divergeAt = config.divergeAt ?? divergingColorScaleDefaults.divergeAt\n    const offset = 0.5 - divergeAt\n\n    const colorScale = scaleDiverging<string>().domain(domain).clamp(true)\n    let interpolator = (t: number) => String(t) as string\n    if ('colors' in config) {\n        interpolator = scaleDiverging<string>()\n            .domain(domain.map(x => x - offset * (max - min)))\n            .range(config.colors)\n            .interpolator()\n    } else if ('interpolator' in config) {\n        interpolator = config.interpolator\n    } else {\n        const scheme = config.scheme ?? divergingColorScaleDefaults.scheme\n        interpolator = colorInterpolators[scheme]\n    }\n    const offsetInterpolator = (t: number) => interpolator(t + offset)\n    return colorScale.interpolator(offsetInterpolator)\n}\n\nexport const useDivergingColorScale = (\n    config: DivergingColorScaleConfig,\n    values: DivergingColorScaleValues\n) => useMemo(() => getDivergingColorScale(config, values), [config, values])\n", "import { useMemo } from 'react'\nimport { scaleQuantize } from 'd3-scale'\nimport { colorInterpolators, ColorInterpolatorId } from '../schemes'\n\n// colors from a scheme\nexport interface QuantizeColorScaleSchemeConfig {\n    type: 'quantize'\n    domain?: [number, number]\n    scheme?: ColorInterpolatorId\n    steps?: number\n}\n\n// explicit colors\nexport interface QuantizeColorScaleColorsConfig {\n    type: 'quantize'\n    domain?: [number, number]\n    colors: string[]\n}\n\nexport type QuantizeColorScaleConfig =\n    | QuantizeColorScaleSchemeConfig\n    | QuantizeColorScaleColorsConfig\n\nexport interface QuantizeColorScaleValues {\n    min: number\n    max: number\n}\n\nexport const quantizeColorScaleDefaults: {\n    scheme: ColorInterpolatorId\n    steps: NonNullable<QuantizeColorScaleSchemeConfig['steps']>\n} = {\n    scheme: 'turbo',\n    steps: 7,\n}\n\nexport const getQuantizeColorScale = (\n    config: QuantizeColorScaleConfig,\n    values: QuantizeColorScaleValues\n) => {\n    const colorScale = scaleQuantize<string>()\n        .domain(config.domain || [values.min, values.max])\n        .nice()\n\n    if ('colors' in config) {\n        colorScale.range(config.colors)\n    } else {\n        const scheme = config.scheme || quantizeColorScaleDefaults.scheme\n        const steps = config.steps === undefined ? quantizeColorScaleDefaults.steps : config.steps\n        const interpolator = colorInterpolators[scheme]\n        const colors = Array.from({ length: steps }).map((_, step) =>\n            interpolator(step * (1 / (steps - 1)))\n        )\n\n        colorScale.range(colors)\n    }\n\n    return colorScale\n}\n\nexport const useQuantizeColorScale = (\n    config: QuantizeColorScaleConfig,\n    values: QuantizeColorScaleValues\n) => useMemo(() => getQuantizeColorScale(config, values), [config, values])\n", "import { useMemo } from 'react'\nimport { ScaleDiverging, ScaleQuantize, ScaleSequential, scaleLinear } from 'd3-scale'\nimport {\n    SequentialColorScaleConfig,\n    SequentialColorScaleValues,\n    getSequentialColorScale,\n} from './sequentialColorScale'\nimport {\n    DivergingColorScaleConfig,\n    DivergingColorScaleValues,\n    getDivergingColorScale,\n} from './divergingColorScale'\nimport {\n    QuantizeColorScaleConfig,\n    QuantizeColorScaleValues,\n    getQuantizeColorScale,\n} from './quantizeColorScale'\n\nexport type ContinuousColorScaleConfig =\n    | SequentialColorScaleConfig\n    | DivergingColorScaleConfig\n    | QuantizeColorScaleConfig\n\nexport type ContinuousColorScaleValues =\n    | SequentialColorScaleValues\n    | DivergingColorScaleValues\n    | QuantizeColorScaleValues\n\nconst isSequentialColorScaleConfig = (\n    config: ContinuousColorScaleConfig\n): config is SequentialColorScaleConfig => config.type === 'sequential'\n\nconst isDivergingColorScaleConfig = (\n    config: ContinuousColorScaleConfig\n): config is DivergingColorScaleConfig => config.type === 'diverging'\n\nconst isQuantizeColorScaleConfig = (\n    config: ContinuousColorScaleConfig\n): config is QuantizeColorScaleConfig => config.type === 'quantize'\n\nexport const getContinuousColorScale = <Config extends ContinuousColorScaleConfig>(\n    config: Config,\n    values: ContinuousColorScaleValues\n) => {\n    if (isSequentialColorScaleConfig(config)) {\n        return getSequentialColorScale(config, values)\n    }\n\n    if (isDivergingColorScaleConfig(config)) {\n        return getDivergingColorScale(config, values)\n    }\n\n    if (isQuantizeColorScaleConfig(config)) {\n        return getQuantizeColorScale(config, values)\n    }\n\n    throw new Error('Invalid continuous color scale config')\n}\n\nexport const useContinuousColorScale = (\n    config: ContinuousColorScaleConfig,\n    values: ContinuousColorScaleValues\n) => useMemo(() => getContinuousColorScale(config, values), [config, values])\n\nexport const computeContinuousColorScaleColorStops = (\n    scale: ScaleSequential<string> | ScaleDiverging<string> | ScaleQuantize<string>,\n    steps = 16\n) => {\n    const domain = scale.domain()\n\n    // quantize\n    if ('thresholds' in scale) {\n        const stops: {\n            key: string\n            offset: number\n            stopColor: string\n        }[] = []\n\n        const normalizedScale = scaleLinear().domain(domain).range([0, 1])\n        scale.range().forEach((color, index) => {\n            const [start, end] = scale.invertExtent(color)\n\n            stops.push({\n                key: `${index}.0`,\n                offset: normalizedScale(start),\n                stopColor: color,\n            })\n            stops.push({\n                key: `${index}.1`,\n                offset: normalizedScale(end),\n                stopColor: color,\n            })\n        })\n\n        return stops\n    }\n\n    const colorStopsScale = scale.copy()\n    if (domain.length === 2) {\n        // sequential\n        colorStopsScale.domain([0, 1])\n    } else if (domain.length === 3) {\n        // diverging\n        colorStopsScale.domain([0, 0.5, 1])\n    }\n\n    return ((colorStopsScale as any).ticks(steps) as number[]).map((value: number) => ({\n        key: `${value}`,\n        offset: value,\n        stopColor: `${colorStopsScale(value)}`,\n    }))\n}\n", "import { useMemo } from 'react'\nimport { get, isPlainObject } from 'lodash'\nimport { scaleOrdinal } from 'd3-scale'\nimport {\n    ColorSchemeId,\n    colorSchemes,\n    isCategoricalColorScheme,\n    isSequentialColorScheme,\n    isDivergingColorScheme,\n} from '../schemes'\n\n/**\n * Static color.\n */\nexport type OrdinalColorScaleConfigStaticColor = string\n\n/**\n * User defined function, receiving the current datum.\n */\nexport type OrdinalColorScaleConfigCustomFunction<Datum> = (d: Datum) => string\n\n/**\n * Pre-defined color scheme.\n */\nexport interface OrdinalColorScaleConfigScheme {\n    scheme: ColorSchemeId\n    // size is useful for diverging & sequential colors,\n    // as they are array of array, whereas categorical colors\n    // are simple arrays, if the size isn't specified,\n    // the bigger array will be selected, this means the 11th\n    // for diverging colors and 9th for sequential ones.\n    size?: number\n}\n\n/**\n * User defined colors.\n */\nexport type OrdinalColorScaleConfigCustomColors = string[]\n\n/**\n * Get color from datum.\n */\nexport interface OrdinalColorScaleConfigDatumProperty {\n    // path to the color property\n    datum: string\n}\n\nexport type OrdinalColorScaleConfig<Datum = any> =\n    | OrdinalColorScaleConfigStaticColor\n    | OrdinalColorScaleConfigCustomFunction<Datum>\n    | OrdinalColorScaleConfigScheme\n    | OrdinalColorScaleConfigCustomColors\n    | OrdinalColorScaleConfigDatumProperty\n\nconst isOrdinalColorScaleConfigScheme = <Datum>(\n    config: OrdinalColorScaleConfig<Datum>\n): config is OrdinalColorScaleConfigScheme => {\n    return (config as OrdinalColorScaleConfigScheme).scheme !== undefined\n}\n\nconst isOrdinalColorScaleConfigDatumProperty = <Datum>(\n    config: OrdinalColorScaleConfig<Datum>\n): config is OrdinalColorScaleConfigDatumProperty => {\n    return (config as OrdinalColorScaleConfigDatumProperty).datum !== undefined\n}\n\nexport type DatumIdentityAccessor<Datum> = (datum: Datum) => string | number\n\nexport type OrdinalColorScale<Datum> = (d: Datum) => string\n\n/**\n * Compute an ordinal color scale\n */\nexport const getOrdinalColorScale = <Datum = any>(\n    config: OrdinalColorScaleConfig<Datum>,\n    identity?: string | DatumIdentityAccessor<Datum>\n): OrdinalColorScale<Datum> => {\n    // user defined function\n    if (typeof config === 'function') {\n        return config\n    }\n\n    // compute accessor to the datum identity\n    const getIdentity =\n        typeof identity === 'function' ? identity : (datum: Datum) => get(datum, identity as string)\n\n    // user defined color array\n    if (Array.isArray(config)) {\n        const scale = scaleOrdinal(config)\n        const generator = (datum: Datum) => scale(getIdentity(datum))\n        generator.scale = scale\n\n        return generator as OrdinalColorScale<Datum>\n    }\n\n    if (isPlainObject(config)) {\n        // use color from current datum\n        if (isOrdinalColorScaleConfigDatumProperty(config)) {\n            return (datum: Datum) => get(datum, config.datum)\n        }\n\n        // ordinal scale from predefined scheme\n        if (isOrdinalColorScaleConfigScheme(config)) {\n            // categorical color scheme\n            if (isCategoricalColorScheme(config.scheme)) {\n                const scale = scaleOrdinal(colorSchemes[config.scheme])\n                const generator = (datum: Datum) => scale(getIdentity(datum))\n                generator.scale = scale\n\n                return generator as OrdinalColorScale<Datum>\n            }\n\n            // Diverging color schemes support a size k ranging from 3 to 11\n            if (isDivergingColorScheme(config.scheme)) {\n                if (config.size !== undefined && (config.size < 3 || config.size > 11)) {\n                    throw new Error(\n                        `Invalid size '${config.size}' for diverging color scheme '${config.scheme}', must be between 3~11`\n                    )\n                }\n\n                const scale = scaleOrdinal(colorSchemes[config.scheme][config.size || 11])\n                const generator = (d: Datum) => scale(getIdentity(d))\n                generator.scale = scale\n\n                return generator as OrdinalColorScale<Datum>\n            }\n\n            // Sequential, single-hue color schemes support a size k ranging from 3 to 9.\n            // Sequential, multi-hue color schemes support a size k ranging from 3 to 9.\n            if (isSequentialColorScheme(config.scheme)) {\n                if (config.size !== undefined && (config.size < 3 || config.size > 9)) {\n                    throw new Error(\n                        `Invalid size '${config.size}' for sequential color scheme '${config.scheme}', must be between 3~9`\n                    )\n                }\n\n                const scale = scaleOrdinal(colorSchemes[config.scheme][config.size || 9])\n                const generator = (d: Datum) => scale(getIdentity(d))\n                generator.scale = scale\n\n                return generator as OrdinalColorScale<Datum>\n            }\n        }\n\n        throw new Error(\n            `Invalid colors, when using an object, you should either pass a 'datum' or a 'scheme' property`\n        )\n    }\n\n    // static color\n    return () => config as string\n}\n\nexport const useOrdinalColorScale = <Datum = any>(\n    config: OrdinalColorScaleConfig<Datum>,\n    identity: string | DatumIdentityAccessor<Datum>\n) => useMemo(() => getOrdinalColorScale<Datum>(config, identity), [config, identity])\n", "import { CSSProperties } from 'react'\nimport { SpringValue, Interpolation, animated } from '@react-spring/web'\nimport { useTheme } from '@nivo/core'\nimport { DatumWithArcAndColor } from '../types'\n\nconst staticStyle: CSSProperties = {\n    pointerEvents: 'none',\n}\n\nexport interface ArcLabelProps<Datum extends DatumWithArcAndColor> {\n    datum: Datum\n    label: string\n    style: {\n        progress: SpringValue<number>\n        transform: Interpolation<string>\n        textColor: string\n    }\n}\n\nexport const ArcLabel = <Datum extends DatumWithArcAndColor>({\n    label,\n    style,\n}: ArcLabelProps<Datum>) => {\n    const theme = useTheme()\n\n    return (\n        <animated.g transform={style.transform} opacity={style.progress} style={staticStyle}>\n            <animated.text\n                textAnchor=\"middle\"\n                dominantBaseline=\"central\"\n                style={{\n                    ...theme.labels.text,\n                    fill: style.textColor,\n                }}\n            >\n                {label}\n            </animated.text>\n        </animated.g>\n    )\n}\n", "import { useMemo } from 'react'\nimport { radiansToDegrees, positionFromAngle, degreesToRadians } from '@nivo/core'\nimport { DatumWithArc } from './types'\n\n/**\n * Make sure an angle (expressed in radians)\n * always falls in the range 0~2*PI.\n */\nexport const getNormalizedAngle = (angle: number) => {\n    let normalizedAngle = angle % (Math.PI * 2)\n    if (normalizedAngle < 0) {\n        normalizedAngle += Math.PI * 2\n    }\n\n    return normalizedAngle\n}\n\n/**\n * Filter out arcs with a length below `skipAngle`.\n */\nexport const filterDataBySkipAngle = <Datum extends DatumWithArc>(\n    data: Datum[],\n    skipAngle: number\n) =>\n    data.filter(\n        datum => Math.abs(radiansToDegrees(datum.arc.endAngle - datum.arc.startAngle)) >= skipAngle\n    )\n\n/**\n * Memoized version of `filterDataBySkipAngle`.\n */\nexport const useFilteredDataBySkipAngle = <Datum extends DatumWithArc>(\n    data: Datum[],\n    skipAngle: number\n) => useMemo(() => filterDataBySkipAngle(data, skipAngle), [data, skipAngle])\n\nexport const svgEllipticalArcCommand = (\n    radius: number,\n    largeArcFlag: 0 | 1,\n    sweepFlag: 0 | 1,\n    x: number,\n    y: number\n) =>\n    [\n        'A',\n        radius,\n        radius,\n        0, // x-axis-rotation\n        largeArcFlag,\n        sweepFlag,\n        x,\n        y,\n    ].join(' ')\n\nexport const generateSvgArc = (\n    radius: number,\n    originalStartAngle: number,\n    originalEndAngle: number\n): string => {\n    const startAngle = Math.min(originalStartAngle, originalEndAngle)\n    const endAngle = Math.max(originalStartAngle, originalEndAngle)\n\n    const start = positionFromAngle(degreesToRadians(endAngle), radius)\n    const end = positionFromAngle(degreesToRadians(startAngle), radius)\n\n    // we have a full circle, we cannot use a single elliptical arc\n    // to draw it, so we use 2 in that case.\n    if (endAngle - startAngle >= 360) {\n        const mid = positionFromAngle(degreesToRadians(startAngle + 180), radius)\n\n        return [\n            `M ${start.x} ${start.y}`,\n            svgEllipticalArcCommand(radius, 1, 1, mid.x, mid.y),\n            `M ${start.x} ${start.y}`,\n            svgEllipticalArcCommand(radius, 1, 0, mid.x, mid.y),\n        ].join(' ')\n    }\n\n    const largeArcFlag = endAngle - startAngle <= 180 ? 0 : 1\n\n    return [\n        `M ${start.x} ${start.y}`,\n        svgEllipticalArcCommand(radius, largeArcFlag, 0, end.x, end.y),\n    ].join(' ')\n}\n", "import { Arc, DatumWithArc } from './types'\nimport { useMemo } from 'react'\n\nexport interface ArcTransitionModeConfig {\n    enter: (arc: Arc) => Arc\n    update: (arc: Arc) => Arc\n    leave: (arc: Arc) => Arc\n}\n\nexport const arcTransitionModes = [\n    'startAngle',\n    'middleAngle',\n    'endAngle',\n    'innerRadius',\n    'centerRadius',\n    'outerRadius',\n    'pushIn',\n    'pushOut',\n] as const\nexport type ArcTransitionMode = typeof arcTransitionModes[number]\n\nexport const arcTransitionModeById: Record<ArcTransitionMode, ArcTransitionModeConfig> = {\n    startAngle: {\n        enter: (arc: Arc) => ({\n            ...arc,\n            endAngle: arc.startAngle,\n        }),\n        update: (arc: Arc) => arc,\n        leave: (arc: Arc) => ({\n            ...arc,\n            startAngle: arc.endAngle,\n        }),\n    },\n    middleAngle: {\n        enter: (arc: Arc) => {\n            const middleAngle = arc.startAngle + (arc.endAngle - arc.startAngle) / 2\n\n            return {\n                ...arc,\n                startAngle: middleAngle,\n                endAngle: middleAngle,\n            }\n        },\n        update: (arc: Arc) => arc,\n        leave: (arc: Arc) => {\n            const middleAngle = arc.startAngle + (arc.endAngle - arc.startAngle) / 2\n\n            return {\n                ...arc,\n                startAngle: middleAngle,\n                endAngle: middleAngle,\n            }\n        },\n    },\n    endAngle: {\n        enter: (arc: Arc) => ({\n            ...arc,\n            startAngle: arc.endAngle,\n        }),\n        update: (arc: Arc) => arc,\n        leave: (arc: Arc) => ({\n            ...arc,\n            endAngle: arc.startAngle,\n        }),\n    },\n    innerRadius: {\n        enter: (arc: Arc) => ({\n            ...arc,\n            outerRadius: arc.innerRadius,\n        }),\n        update: (arc: Arc) => arc,\n        leave: (arc: Arc) => ({\n            ...arc,\n            innerRadius: arc.outerRadius,\n        }),\n    },\n    centerRadius: {\n        enter: (arc: Arc) => {\n            const centerRadius = arc.innerRadius + (arc.outerRadius - arc.innerRadius) / 2\n\n            return {\n                ...arc,\n                innerRadius: centerRadius,\n                outerRadius: centerRadius,\n            }\n        },\n        update: (arc: Arc) => arc,\n        leave: (arc: Arc) => {\n            const centerRadius = arc.innerRadius + (arc.outerRadius - arc.innerRadius) / 2\n\n            return {\n                ...arc,\n                innerRadius: centerRadius,\n                outerRadius: centerRadius,\n            }\n        },\n    },\n    outerRadius: {\n        enter: (arc: Arc) => ({\n            ...arc,\n            innerRadius: arc.outerRadius,\n        }),\n        update: (arc: Arc) => arc,\n        leave: (arc: Arc) => ({\n            ...arc,\n            outerRadius: arc.innerRadius,\n        }),\n    },\n    pushIn: {\n        enter: (arc: Arc) => ({\n            ...arc,\n            innerRadius: arc.innerRadius - arc.outerRadius + arc.innerRadius,\n            outerRadius: arc.innerRadius,\n        }),\n        update: (arc: Arc) => arc,\n        leave: (arc: Arc) => ({\n            ...arc,\n            innerRadius: arc.outerRadius,\n            outerRadius: arc.outerRadius + arc.outerRadius - arc.innerRadius,\n        }),\n    },\n    pushOut: {\n        enter: (arc: Arc) => ({\n            ...arc,\n            innerRadius: arc.outerRadius,\n            outerRadius: arc.outerRadius + arc.outerRadius - arc.innerRadius,\n        }),\n        update: (arc: Arc) => arc,\n        leave: (arc: Arc) => ({\n            ...arc,\n            innerRadius: arc.innerRadius - arc.outerRadius + arc.innerRadius,\n            outerRadius: arc.innerRadius,\n        }),\n    },\n}\n\nexport interface TransitionExtra<Datum extends DatumWithArc, ExtraProps> {\n    enter: (datum: Datum) => ExtraProps\n    update: (datum: Datum) => ExtraProps\n    leave: (datum: Datum) => ExtraProps\n}\n\nexport const useArcTransitionMode = <Datum extends DatumWithArc, ExtraProps>(\n    mode: ArcTransitionMode,\n    extraTransition?: TransitionExtra<Datum, ExtraProps>\n) =>\n    useMemo(() => {\n        const transitionMode = arcTransitionModeById[mode]\n\n        return {\n            enter: (datum: Datum) => ({\n                progress: 0,\n                ...transitionMode.enter(datum.arc),\n                ...(extraTransition ? extraTransition.enter(datum) : {}),\n            }),\n            update: (datum: Datum) => ({\n                progress: 1,\n                ...transitionMode.update(datum.arc),\n                ...(extraTransition ? extraTransition.update(datum) : {}),\n            }),\n            leave: (datum: Datum) => ({\n                progress: 0,\n                ...transitionMode.leave(datum.arc),\n                ...(extraTransition ? extraTransition.leave(datum) : {}),\n            }),\n        }\n    }, [mode, extraTransition])\n", "import { useMemo } from 'react'\nimport { useTransition, to, SpringValue } from '@react-spring/web'\nimport {\n    // @ts-ignore\n    midAngle,\n    positionFromAngle,\n    useMotionConfig,\n} from '@nivo/core'\nimport { Arc, DatumWithArc, Point } from './types'\nimport { filterDataBySkipAngle } from './utils'\nimport { ArcTransitionMode, TransitionExtra, useArcTransitionMode } from './arcTransitionMode'\n\nexport const computeArcCenter = (arc: Arc, offset: number): Point => {\n    const angle = midAngle(arc) - Math.PI / 2\n    const radius = arc.innerRadius + (arc.outerRadius - arc.innerRadius) * offset\n\n    return positionFromAngle(angle, radius)\n}\n\nexport const interpolateArcCenter =\n    (offset: number) =>\n    (\n        startAngleValue: SpringValue<number>,\n        endAngleValue: SpringValue<number>,\n        innerRadiusValue: SpringValue<number>,\n        outerRadiusValue: SpringValue<number>\n    ) =>\n        to(\n            [startAngleValue, endAngleValue, innerRadiusValue, outerRadiusValue],\n            (startAngle, endAngle, innerRadius, outerRadius) => {\n                const centroid = computeArcCenter(\n                    { startAngle, endAngle, innerRadius, outerRadius },\n                    offset\n                )\n\n                return `translate(${centroid.x},${centroid.y})`\n            }\n        )\n\nexport const useArcCentersTransition = <Datum extends DatumWithArc, ExtraProps = unknown>(\n    data: Datum[],\n    // define where the centers should be placed,\n    // 0.0: inner radius\n    // 0.5: center\n    // 1.0: outer radius\n    offset = 0.5,\n    mode: ArcTransitionMode = 'innerRadius',\n    extra?: TransitionExtra<Datum, ExtraProps>\n) => {\n    const { animate, config: springConfig } = useMotionConfig()\n\n    const phases = useArcTransitionMode<Datum, ExtraProps>(mode, extra)\n\n    const transition = useTransition<\n        Datum,\n        {\n            progress: number\n            startAngle: number\n            endAngle: number\n            innerRadius: number\n            outerRadius: number\n        } & ExtraProps\n    >(data, {\n        keys: datum => datum.id,\n        initial: phases.update,\n        from: phases.enter,\n        enter: phases.update,\n        update: phases.update,\n        leave: phases.leave,\n        config: springConfig,\n        immediate: !animate,\n    })\n\n    return {\n        transition,\n        interpolate: interpolateArcCenter(offset),\n    }\n}\n\nexport interface ArcCenter<Datum extends DatumWithArc> extends Point {\n    data: Datum\n}\n\n/**\n * Compute an array of arc centers from an array of data containing arcs.\n *\n * If you plan to animate those, you could use `useArcCentersTransition`\n * instead, you could use the returned array with react-spring `useTransition`,\n * but this would lead to cartesian transitions (x/y), while `useArcCentersTransition`\n * will generate proper transitions using radius/angle.\n */\nexport const useArcCenters = <\n    Datum extends DatumWithArc,\n    ExtraProps extends Record<string, any> = Record<string, any>\n>({\n    data,\n    offset = 0.5,\n    skipAngle = 0,\n    computeExtraProps = () => ({} as ExtraProps),\n}: {\n    data: Datum[]\n    // define where the centers should be placed,\n    // 0.0: inner radius\n    // 0.5: center\n    // 1.0: outer radius\n    offset?: number\n    // arcs with a length below this (end angle - start angle in degrees)\n    // are going to be excluded, this can typically be used to avoid having\n    // overlapping labels.\n    skipAngle?: number\n    // this can be used to append extra properties to the centers,\n    // can be used to compute a color/label for example.\n    computeExtraProps?: (datum: Datum) => ExtraProps\n}): (ArcCenter<Datum> & ExtraProps)[] =>\n    useMemo(\n        () =>\n            filterDataBySkipAngle<Datum>(data, skipAngle)\n                // compute position and extra props for each eligible datum\n                .map(datum => {\n                    const position = computeArcCenter(datum.arc, offset)\n\n                    return {\n                        ...computeExtraProps(datum),\n                        x: position.x,\n                        y: position.y,\n                        data: datum,\n                    }\n                }),\n        [data, offset, skipAngle, computeExtraProps]\n    )\n", "import { createElement, useMemo } from 'react'\nimport { PropertyAccessor, usePropertyAccessor, radiansToDegrees, useTheme } from '@nivo/core'\nimport { useInheritedColor } from '@nivo/colors'\nimport { useArcCentersTransition } from '../centers'\nimport { ArcTransitionMode } from '../arcTransitionMode'\nimport { DatumWithArcAndColor } from '../types'\nimport { ArcLabelsProps } from './props'\nimport { ArcLabel, ArcLabelProps } from './ArcLabel'\n\nexport type ArcLabelComponent<Datum extends DatumWithArcAndColor> = (\n    props: ArcLabelProps<Datum>\n) => JSX.Element\n\ninterface ArcLabelsLayerProps<Datum extends DatumWithArcAndColor> {\n    center: [number, number]\n    data: Datum[]\n    label: PropertyAccessor<Datum, string>\n    radiusOffset: ArcLabelsProps<Datum>['arcLabelsRadiusOffset']\n    skipAngle: ArcLabelsProps<Datum>['arcLabelsSkipAngle']\n    textColor: ArcLabelsProps<Datum>['arcLabelsTextColor']\n    transitionMode: ArcTransitionMode\n    component?: ArcLabelsProps<Datum>['arcLabelsComponent']\n}\n\nexport const ArcLabelsLayer = <Datum extends DatumWithArcAndColor>({\n    center,\n    data,\n    transitionMode,\n    label: labelAccessor,\n    radiusOffset,\n    skipAngle,\n    textColor,\n    component = ArcLabel,\n}: ArcLabelsLayerProps<Datum>) => {\n    const getLabel = usePropertyAccessor<Datum, string>(labelAccessor)\n    const theme = useTheme()\n    const getTextColor = useInheritedColor<Datum>(textColor, theme)\n\n    const filteredData = useMemo(\n        () =>\n            data.filter(datum => {\n                return (\n                    Math.abs(radiansToDegrees(datum.arc.endAngle - datum.arc.startAngle)) >=\n                    skipAngle\n                )\n            }),\n        [data, skipAngle]\n    )\n\n    const { transition, interpolate } = useArcCentersTransition<Datum>(\n        filteredData,\n        radiusOffset,\n        transitionMode\n    )\n\n    const Label: ArcLabelComponent<Datum> = component\n\n    return (\n        <g transform={`translate(${center[0]},${center[1]})`}>\n            {transition((transitionProps, datum) => {\n                return createElement(Label, {\n                    key: datum.id,\n                    datum,\n                    label: getLabel(datum),\n                    style: {\n                        ...transitionProps,\n                        transform: interpolate(\n                            transitionProps.startAngle,\n                            transitionProps.endAngle,\n                            transitionProps.innerRadius,\n                            transitionProps.outerRadius\n                        ),\n                        textColor: getTextColor(datum),\n                    },\n                })\n            })}\n        </g>\n    )\n}\n", "import { CompleteTheme } from '@nivo/core'\nimport { DatumWithArcAndColor } from '../types'\nimport { ArcLabel } from './useArcLabels'\n\nexport const drawCanvasArcLabels = <Datum extends DatumWithArcAndColor>(\n    ctx: CanvasRenderingContext2D,\n    labels: ArcLabel<Datum>[],\n    theme: CompleteTheme\n) => {\n    ctx.textAlign = 'center'\n    ctx.textBaseline = 'middle'\n    ctx.font = `${theme.labels.text.fontSize}px ${theme.labels.text.fontFamily}`\n\n    labels.forEach(label => {\n        ctx.fillStyle = label.textColor\n        ctx.fillText(`${label.label}`, label.x, label.y)\n    })\n}\n", "import { useCallback } from 'react'\nimport { PropertyAccessor, usePropertyAccessor, useTheme } from '@nivo/core'\nimport { InheritedColorConfig, useInheritedColor } from '@nivo/colors'\nimport { DatumWithArcAndColor } from '../types'\nimport { useArcCenters, ArcCenter } from '../centers'\n\nexport interface ArcLabel<Datum extends DatumWithArcAndColor> extends ArcCenter<Datum> {\n    label: string\n    textColor: string\n}\n\n/**\n * Compute arc labels, please note that the datum should\n * contain a color in order to be able to compute the label text color.\n *\n * Please see `useArcCenters` for a more detailed explanation\n * about the parameters.\n */\nexport const useArcLabels = <Datum extends DatumWithArcAndColor>({\n    data,\n    offset,\n    skipAngle,\n    label,\n    textColor,\n}: {\n    data: Datum[]\n    offset?: number\n    skipAngle?: number\n    label: PropertyAccessor<Datum, string>\n    textColor: InheritedColorConfig<Datum>\n}) => {\n    const getLabel = usePropertyAccessor<Datum, string>(label)\n\n    const theme = useTheme()\n    const getTextColor = useInheritedColor<Datum>(textColor, theme)\n\n    const computeExtraProps = useCallback(\n        (datum: Datum) => {\n            return {\n                label: getLabel(datum),\n                textColor: getTextColor(datum),\n            }\n        },\n        [getLabel, getTextColor]\n    )\n\n    return useArcCenters<Datum, Omit<ArcLabel<Datum>, keyof ArcCenter<Datum>>>({\n        data,\n        offset,\n        skipAngle,\n        computeExtraProps,\n    })\n}\n", "import { ArcLabel } from './ArcLabel'\n\nexport const ArcLabelComponent = ArcLabel\nexport * from './ArcLabelsLayer'\nexport * from './canvas'\nexport * from './props'\nexport * from './useArcLabels'\n", "import { useTheme } from '@nivo/core'\nimport { SpringValue, Interpolation, animated } from '@react-spring/web'\nimport { DatumWithArcAndColor } from '../types'\n\nexport interface ArcLinkLabelProps<Datum extends DatumWithArcAndColor> {\n    datum: Datum\n    label: string\n    style: {\n        path: Interpolation<string>\n        thickness: number\n        textPosition: Interpolation<string>\n        textAnchor: Interpolation<'start' | 'end'>\n        linkColor: SpringValue<string>\n        opacity: SpringValue<number>\n        textColor: SpringValue<string>\n    }\n}\n\nexport const ArcLinkLabel = <Datum extends DatumWithArcAndColor>({\n    label,\n    style,\n}: ArcLinkLabelProps<Datum>) => {\n    const theme = useTheme()\n\n    return (\n        <animated.g opacity={style.opacity}>\n            <animated.path\n                fill=\"none\"\n                stroke={style.linkColor}\n                strokeWidth={style.thickness}\n                d={style.path}\n            />\n            <animated.text\n                transform={style.textPosition}\n                textAnchor={style.textAnchor}\n                dominantBaseline=\"central\"\n                style={{\n                    ...theme.labels.text,\n                    fill: style.textColor,\n                }}\n            >\n                {label}\n            </animated.text>\n        </animated.g>\n    )\n}\n", "import { positionFromAngle } from '@nivo/core'\nimport { Arc, Point } from '../types'\nimport { getNormalizedAngle } from '../utils'\nimport { ArcLink } from './types'\n\n/**\n * Compute text anchor for a given arc.\n *\n * `computeArcLink` already computes a `side`, but when using\n * `react-spring`, you cannot have a single interpolation\n * returning several output values, so we need to compute\n * them in separate interpolations.\n */\nexport const computeArcLinkTextAnchor = (arc: Arc): 'start' | 'end' => {\n    const centerAngle = getNormalizedAngle(\n        arc.startAngle + (arc.endAngle - arc.startAngle) / 2 - Math.PI / 2\n    )\n\n    if (centerAngle < Math.PI / 2 || centerAngle > Math.PI * 1.5) {\n        return 'start'\n    }\n\n    return 'end'\n}\n\n/**\n * Compute the link of a single arc, returning its points,\n * please note that points coordinates are relative to\n * the center of the arc.\n */\nexport const computeArcLink = (\n    arc: Arc,\n    offset: number,\n    diagonalLength: number,\n    straightLength: number\n): ArcLink => {\n    const centerAngle = getNormalizedAngle(\n        arc.startAngle + (arc.endAngle - arc.startAngle) / 2 - Math.PI / 2\n    )\n    const point0: Point = positionFromAngle(centerAngle, arc.outerRadius + offset)\n    const point1: Point = positionFromAngle(centerAngle, arc.outerRadius + offset + diagonalLength)\n\n    let side: ArcLink['side']\n    let point2: Point\n    if (centerAngle < Math.PI / 2 || centerAngle > Math.PI * 1.5) {\n        side = 'after'\n        point2 = {\n            x: point1.x + straightLength,\n            y: point1.y,\n        }\n    } else {\n        side = 'before'\n        point2 = {\n            x: point1.x - straightLength,\n            y: point1.y,\n        }\n    }\n\n    return {\n        side,\n        points: [point0, point1, point2],\n    }\n}\n", "import { useMemo } from 'react'\nimport { SpringValue, useTransition, to } from '@react-spring/web'\nimport { line } from 'd3-shape'\nimport { useMotionConfig, useTheme } from '@nivo/core'\nimport { InheritedColorConfig, useInheritedColor } from '@nivo/colors'\nimport { DatumWithArcAndColor, Point } from '../types'\nimport { useFilteredDataBySkipAngle } from '../utils'\nimport { computeArcLink, computeArcLinkTextAnchor } from './compute'\n\nconst lineGenerator = line<Point>()\n    .x(d => d.x)\n    .y(d => d.y)\n\ntype AnimatedProps = {\n    startAngle: number\n    endAngle: number\n    innerRadius: number\n    outerRadius: number\n    offset: number\n    diagonalLength: number\n    straightLength: number\n    textOffset: number\n    linkColor: string\n    textColor: string\n    opacity: number\n}\n\nconst useTransitionPhases = <Datum extends DatumWithArcAndColor>({\n    offset,\n    diagonalLength,\n    straightLength,\n    textOffset,\n    getLinkColor,\n    getTextColor,\n}: Pick<AnimatedProps, 'offset' | 'diagonalLength' | 'straightLength' | 'textOffset'> & {\n    getLinkColor: (datum: Datum) => string\n    getTextColor: (datum: Datum) => string\n}): Record<'enter' | 'update' | 'leave', (datum: Datum) => AnimatedProps> =>\n    useMemo(\n        () => ({\n            enter: (datum: Datum) => ({\n                startAngle: datum.arc.startAngle,\n                endAngle: datum.arc.endAngle,\n                innerRadius: datum.arc.innerRadius,\n                outerRadius: datum.arc.outerRadius,\n                offset,\n                diagonalLength: 0,\n                straightLength: 0,\n                textOffset,\n                linkColor: getLinkColor(datum),\n                textColor: getTextColor(datum),\n                opacity: 0,\n            }),\n            update: (d: Datum) => ({\n                startAngle: d.arc.startAngle,\n                endAngle: d.arc.endAngle,\n                innerRadius: d.arc.innerRadius,\n                outerRadius: d.arc.outerRadius,\n                offset,\n                diagonalLength,\n                straightLength,\n                textOffset,\n                linkColor: getLinkColor(d),\n                textColor: getTextColor(d),\n                opacity: 1,\n            }),\n            leave: (d: Datum) => ({\n                startAngle: d.arc.startAngle,\n                endAngle: d.arc.endAngle,\n                innerRadius: d.arc.innerRadius,\n                outerRadius: d.arc.outerRadius,\n                offset,\n                diagonalLength: 0,\n                straightLength: 0,\n                textOffset,\n                linkColor: getLinkColor(d),\n                textColor: getTextColor(d),\n                opacity: 0,\n            }),\n        }),\n        [diagonalLength, straightLength, textOffset, getLinkColor, getTextColor]\n    )\n\nconst interpolateLink = (\n    startAngleValue: SpringValue<AnimatedProps['startAngle']>,\n    endAngleValue: SpringValue<AnimatedProps['endAngle']>,\n    innerRadiusValue: SpringValue<AnimatedProps['innerRadius']>,\n    outerRadiusValue: SpringValue<AnimatedProps['outerRadius']>,\n    offsetValue: SpringValue<AnimatedProps['offset']>,\n    diagonalLengthValue: SpringValue<AnimatedProps['diagonalLength']>,\n    straightLengthValue: SpringValue<AnimatedProps['straightLength']>\n) =>\n    to(\n        [\n            startAngleValue,\n            endAngleValue,\n            innerRadiusValue,\n            outerRadiusValue,\n            offsetValue,\n            diagonalLengthValue,\n            straightLengthValue,\n        ],\n        (\n            startAngle,\n            endAngle,\n            innerRadius,\n            outerRadius,\n            offset,\n            diagonalLengthAnimated,\n            straightLengthAnimated\n        ) => {\n            const { points } = computeArcLink(\n                {\n                    startAngle,\n                    endAngle,\n                    innerRadius,\n                    outerRadius,\n                },\n                offset,\n                diagonalLengthAnimated,\n                straightLengthAnimated\n            )\n\n            return lineGenerator(points)\n        }\n    )\n\nconst interpolateTextAnchor = (\n    startAngleValue: SpringValue<AnimatedProps['startAngle']>,\n    endAngleValue: SpringValue<AnimatedProps['endAngle']>,\n    innerRadiusValue: SpringValue<AnimatedProps['innerRadius']>,\n    outerRadiusValue: SpringValue<AnimatedProps['outerRadius']>\n) =>\n    to(\n        [startAngleValue, endAngleValue, innerRadiusValue, outerRadiusValue],\n        (startAngle, endAngle, innerRadius, outerRadius) => {\n            return computeArcLinkTextAnchor({\n                startAngle,\n                endAngle,\n                innerRadius,\n                outerRadius,\n            })\n        }\n    )\n\n/**\n * Interpolating the text position involves almost the same computation\n * as `interpolateLink`, unfortunately `react-spring` does not support\n * multiple output values from a single interpolation.\n *\n * We should revise this if `react-spring` adds this feature at some point.\n */\nconst interpolateTextPosition = (\n    startAngleValue: SpringValue<AnimatedProps['startAngle']>,\n    endAngleValue: SpringValue<AnimatedProps['endAngle']>,\n    innerRadiusValue: SpringValue<AnimatedProps['innerRadius']>,\n    outerRadiusValue: SpringValue<AnimatedProps['outerRadius']>,\n    offsetValue: SpringValue<AnimatedProps['offset']>,\n    diagonalLengthValue: SpringValue<AnimatedProps['diagonalLength']>,\n    straightLengthValue: SpringValue<AnimatedProps['straightLength']>,\n    textOffsetValue: SpringValue<AnimatedProps['textOffset']>\n) =>\n    to(\n        [\n            startAngleValue,\n            endAngleValue,\n            innerRadiusValue,\n            outerRadiusValue,\n            offsetValue,\n            diagonalLengthValue,\n            straightLengthValue,\n            textOffsetValue,\n        ],\n        (\n            startAngle,\n            endAngle,\n            innerRadius,\n            outerRadius,\n            offset,\n            diagonalLengthAnimated,\n            straightLengthAnimated,\n            textOffset\n        ) => {\n            const { points, side } = computeArcLink(\n                {\n                    startAngle,\n                    endAngle,\n                    innerRadius,\n                    outerRadius,\n                },\n                offset,\n                diagonalLengthAnimated,\n                straightLengthAnimated\n            )\n\n            const position = points[2]\n            if (side === 'before') {\n                position.x -= textOffset\n            } else {\n                position.x += textOffset\n            }\n\n            return `translate(${position.x},${position.y})`\n        }\n    )\n\n/**\n * This hook can be used to animate a group of arc link labels,\n * if you just want to compute the labels, please use `useArcLinkLabels`.\n */\nexport const useArcLinkLabelsTransition = <Datum extends DatumWithArcAndColor>({\n    data,\n    offset = 0,\n    diagonalLength,\n    straightLength,\n    skipAngle = 0,\n    textOffset,\n    linkColor,\n    textColor,\n}: {\n    data: Datum[]\n    offset?: number\n    diagonalLength: number\n    straightLength: number\n    skipAngle?: number\n    textOffset: number\n    linkColor: InheritedColorConfig<Datum>\n    textColor: InheritedColorConfig<Datum>\n}) => {\n    const { animate, config: springConfig } = useMotionConfig()\n\n    const theme = useTheme()\n    const getLinkColor = useInheritedColor<Datum>(linkColor, theme)\n    const getTextColor = useInheritedColor<Datum>(textColor, theme)\n\n    const filteredData = useFilteredDataBySkipAngle<Datum>(data, skipAngle)\n    const transitionPhases = useTransitionPhases<Datum>({\n        offset,\n        diagonalLength,\n        straightLength,\n        textOffset,\n        getLinkColor,\n        getTextColor,\n    })\n\n    const transition = useTransition<Datum, AnimatedProps>(filteredData, {\n        keys: datum => datum.id,\n        initial: transitionPhases.update,\n        from: transitionPhases.enter,\n        enter: transitionPhases.update,\n        update: transitionPhases.update,\n        leave: transitionPhases.leave,\n        config: springConfig,\n        immediate: !animate,\n    })\n\n    return {\n        transition,\n        interpolateLink,\n        interpolateTextAnchor,\n        interpolateTextPosition,\n    }\n}\n", "import { createElement } from 'react'\nimport { usePropertyAccessor } from '@nivo/core'\nimport { DatumWithArcAndColor } from '../types'\nimport { useArcLinkLabelsTransition } from './useArcLinkLabelsTransition'\nimport { ArcLinkLabelsProps } from './props'\nimport { ArcLinkLabel, ArcLinkLabelProps } from './ArcLinkLabel'\n\nexport type ArcLinkLabelComponent<Datum extends DatumWithArcAndColor> = (\n    props: ArcLinkLabelProps<Datum>\n) => JSX.Element\n\ninterface ArcLinkLabelsLayerProps<Datum extends DatumWithArcAndColor> {\n    center: [number, number]\n    data: Datum[]\n    label: ArcLinkLabelsProps<Datum>['arcLinkLabel']\n    skipAngle: ArcLinkLabelsProps<Datum>['arcLinkLabelsSkipAngle']\n    offset: ArcLinkLabelsProps<Datum>['arcLinkLabelsOffset']\n    diagonalLength: ArcLinkLabelsProps<Datum>['arcLinkLabelsDiagonalLength']\n    straightLength: ArcLinkLabelsProps<Datum>['arcLinkLabelsStraightLength']\n    strokeWidth: ArcLinkLabelsProps<Datum>['arcLinkLabelsThickness']\n    textOffset: ArcLinkLabelsProps<Datum>['arcLinkLabelsTextOffset']\n    textColor: ArcLinkLabelsProps<Datum>['arcLinkLabelsTextColor']\n    linkColor: ArcLinkLabelsProps<Datum>['arcLinkLabelsColor']\n    component?: ArcLinkLabelComponent<Datum>\n}\n\nexport const ArcLinkLabelsLayer = <Datum extends DatumWithArcAndColor>({\n    center,\n    data,\n    label: labelAccessor,\n    skipAngle,\n    offset,\n    diagonalLength,\n    straightLength,\n    strokeWidth,\n    textOffset,\n    textColor,\n    linkColor,\n    component = ArcLinkLabel,\n}: ArcLinkLabelsLayerProps<Datum>) => {\n    const getLabel = usePropertyAccessor<Datum, string>(labelAccessor)\n\n    const { transition, interpolateLink, interpolateTextAnchor, interpolateTextPosition } =\n        useArcLinkLabelsTransition<Datum>({\n            data,\n            skipAngle,\n            offset,\n            diagonalLength,\n            straightLength,\n            textOffset,\n            linkColor,\n            textColor,\n        })\n\n    const Label: ArcLinkLabelComponent<Datum> = component\n\n    return (\n        <g transform={`translate(${center[0]},${center[1]})`}>\n            {transition((transitionProps, datum) => {\n                return createElement(Label, {\n                    key: datum.id,\n                    datum,\n                    label: getLabel(datum),\n                    style: {\n                        ...transitionProps,\n                        thickness: strokeWidth,\n                        path: interpolateLink(\n                            transitionProps.startAngle,\n                            transitionProps.endAngle,\n                            transitionProps.innerRadius,\n                            transitionProps.outerRadius,\n                            transitionProps.offset,\n                            transitionProps.diagonalLength,\n                            transitionProps.straightLength\n                        ),\n                        textAnchor: interpolateTextAnchor(\n                            transitionProps.startAngle,\n                            transitionProps.endAngle,\n                            transitionProps.innerRadius,\n                            transitionProps.outerRadius\n                        ),\n                        textPosition: interpolateTextPosition(\n                            transitionProps.startAngle,\n                            transitionProps.endAngle,\n                            transitionProps.innerRadius,\n                            transitionProps.outerRadius,\n                            transitionProps.offset,\n                            transitionProps.diagonalLength,\n                            transitionProps.straightLength,\n                            transitionProps.textOffset\n                        ),\n                    },\n                })\n            })}\n        </g>\n    )\n}\n", "import {\n    // @ts-ignore\n    textPropsByEngine,\n    CompleteTheme,\n} from '@nivo/core'\nimport { DatumWithArcAndColor } from '../types'\nimport { ArcLinkLabel } from './types'\n\nexport const drawCanvasArcLinkLabels = <Datum extends DatumWithArcAndColor>(\n    ctx: CanvasRenderingContext2D,\n    labels: ArcLinkLabel<Datum>[],\n    theme: CompleteTheme,\n    strokeWidth: number\n) => {\n    ctx.textBaseline = 'middle'\n    ctx.font = `${theme.labels.text.fontSize}px ${theme.labels.text.fontFamily}`\n\n    labels.forEach(label => {\n        ctx.fillStyle = label.textColor\n        ctx.textAlign = textPropsByEngine.canvas.align[label.textAnchor]\n        ctx.fillText(`${label.label}`, label.x, label.y)\n\n        ctx.beginPath()\n        ctx.strokeStyle = label.linkColor\n        ctx.lineWidth = strokeWidth\n        label.points.forEach((point, index) => {\n            if (index === 0) ctx.moveTo(point.x, point.y)\n            else ctx.lineTo(point.x, point.y)\n        })\n        ctx.stroke()\n    })\n}\n", "import { useMemo } from 'react'\nimport { radiansToDegrees } from '@nivo/core'\nimport { DatumWithArc } from '../types'\nimport { ArcLinkWithDatum } from './types'\nimport { computeArcLink } from './compute'\n\n/**\n * Compute links for an array of data containing arcs.\n *\n * This is typically used to create labels for arcs,\n * and it's used for the `useArcLinkLabels` hook.\n */\nexport const useArcLinks = <\n    Datum extends DatumWithArc,\n    ExtraProps extends Record<string, any> = Record<string, any>\n>({\n    data,\n    skipAngle = 0,\n    offset = 0.5,\n    diagonalLength,\n    straightLength,\n    computeExtraProps = () => ({} as ExtraProps),\n}: {\n    data: Datum[]\n    // arcs with a length below this (end angle - start angle in degrees)\n    // are going to be excluded, this can typically be used to avoid having\n    // overlapping labels.\n    skipAngle?: number\n    // offset from arc outer radius in pixels\n    offset?: number\n    // length of the diagonal segment of the link\n    diagonalLength: number\n    // length of the straight segment of the link\n    straightLength: number\n    // this can be used to append extra properties to the links,\n    // can be used to compute a color/label for example.\n    computeExtraProps?: (datum: ArcLinkWithDatum<Datum>) => ExtraProps\n}): (ArcLinkWithDatum<Datum> & ExtraProps)[] => {\n    const links = useMemo(\n        () =>\n            data\n                // filter out arcs with a length below `skipAngle`\n                .filter(\n                    datum =>\n                        Math.abs(radiansToDegrees(datum.arc.endAngle - datum.arc.startAngle)) >=\n                        skipAngle\n                )\n                // compute the link for each eligible arc\n                .map(datum => ({\n                    ...computeArcLink(datum.arc, offset, diagonalLength, straightLength),\n                    data: datum,\n                })),\n        [data, skipAngle, offset, diagonalLength, straightLength]\n    )\n\n    // splitting memoization of links and extra props can be more efficient,\n    // this way if only `computeExtraProps` changes, we skip links computation.\n    return useMemo(\n        () =>\n            links.map(link => ({\n                ...computeExtraProps(link),\n                ...link,\n            })),\n        [links, computeExtraProps]\n    )\n}\n", "import { useCallback } from 'react'\nimport { PropertyAccessor, usePropertyAccessor, useTheme } from '@nivo/core'\nimport { InheritedColorConfig, useInheritedColor } from '@nivo/colors'\nimport { DatumWithArcAndColor } from '../types'\nimport { ArcLinkWithDatum, ArcLinkLabel } from './types'\nimport { useArcLinks } from './useArcLinks'\n\n/**\n * Compute arc link labels, please note that the datum should\n * contain a color in order to be able to compute the link/label text color.\n *\n * Please see `useArcLinks` for a more detailed explanation\n * about the parameters.\n */\nexport const useArcLinkLabels = <Datum extends DatumWithArcAndColor>({\n    data,\n    skipAngle,\n    offset,\n    diagonalLength,\n    straightLength,\n    textOffset = 0,\n    label,\n    linkColor,\n    textColor,\n}: {\n    data: Datum[]\n    skipAngle?: number\n    offset?: number\n    diagonalLength: number\n    straightLength: number\n    textOffset: number\n    label: PropertyAccessor<Datum, string>\n    linkColor: InheritedColorConfig<Datum>\n    textColor: InheritedColorConfig<Datum>\n}) => {\n    const getLabel = usePropertyAccessor<Datum, string>(label)\n\n    const theme = useTheme()\n    const getLinkColor = useInheritedColor<Datum>(linkColor, theme)\n    const getTextColor = useInheritedColor<Datum>(textColor, theme)\n\n    const computeExtraProps = useCallback(\n        (link: ArcLinkWithDatum<Datum>) => {\n            const position = {\n                x: link.points[2].x,\n                y: link.points[2].y,\n            }\n            let textAnchor: ArcLinkLabel<Datum>['textAnchor']\n            if (link.side === 'before') {\n                position.x -= textOffset\n                textAnchor = 'end'\n            } else {\n                position.x += textOffset\n                textAnchor = 'start'\n            }\n\n            return {\n                ...position,\n                label: getLabel(link.data),\n                linkColor: getLinkColor(link.data),\n                textAnchor,\n                textColor: getTextColor(link.data),\n            }\n        },\n        [getLabel, getLinkColor, getTextColor, textOffset]\n    )\n\n    return useArcLinks<Datum, Omit<ArcLinkLabel<Datum>, keyof ArcLinkWithDatum<Datum>>>({\n        data,\n        skipAngle,\n        offset,\n        diagonalLength,\n        straightLength,\n        computeExtraProps,\n    })\n}\n", "import { ArcLinkLabel } from './ArcLinkLabel'\n\nexport const ArcLinkLabelComponent = ArcLinkLabel\nexport * from './ArcLinkLabelsLayer'\nexport * from './canvas'\nexport * from './compute'\nexport * from './props'\nexport * from './types'\nexport * from './useArcLinkLabels'\nexport * from './useArcLinkLabelsTransition'\nexport * from './useArcLinks'\n", "import { animated, to, AnimatedProps } from '@react-spring/web'\nimport { ExtractProps } from '@nivo/core'\nimport { generateSvgArc } from './utils'\n\ntype ArcLineProps = {\n    animated: AnimatedProps<{\n        radius: number\n        startAngle: number\n        endAngle: number\n        opacity: number\n    }>\n} & ExtractProps<typeof animated.path>\n\nexport const ArcLine = ({ animated: animatedProps, ...rest }: ArcLineProps) => (\n    <animated.path\n        d={to(\n            [animatedProps.radius, animatedProps.startAngle, animatedProps.endAngle],\n            (radius, start, end) => generateSvgArc(radius, start, end)\n        )}\n        {...rest}\n    />\n)\n", "import { useCallback } from 'react'\nimport * as React from 'react'\nimport { SpringValue, Interpolation, animated } from '@react-spring/web'\nimport { DatumWithArcAndColor } from './types'\n\nexport type ArcMouseHandler<Datum extends DatumWithArcAndColor> = (\n    datum: Datum,\n    event: React.MouseEvent<SVGPathElement>\n) => void\n\nexport interface ArcShapeProps<Datum extends DatumWithArcAndColor> {\n    datum: Datum\n    style: {\n        opacity: SpringValue<number>\n        color: SpringValue<string>\n        borderWidth: number\n        borderColor: SpringValue<string>\n        path: Interpolation<string>\n    }\n    onClick?: ArcMouseHandler<Datum>\n    onMouseEnter?: ArcMouseHandler<Datum>\n    onMouseMove?: ArcMouseHandler<Datum>\n    onMouseLeave?: ArcMouseHandler<Datum>\n}\n\n/**\n * A simple arc component to be used typically with an `ArcsLayer`.\n *\n * Please note that the component accepts `SpringValue`s instead of\n * regular values to support animations.\n */\nexport const ArcShape = <Datum extends DatumWithArcAndColor>({\n    datum,\n    style,\n    onClick,\n    onMouseEnter,\n    onMouseMove,\n    onMouseLeave,\n}: ArcShapeProps<Datum>) => {\n    const handleClick = useCallback(event => onClick?.(datum, event), [onClick, datum])\n\n    const handleMouseEnter = useCallback(\n        event => onMouseEnter?.(datum, event),\n        [onMouseEnter, datum]\n    )\n\n    const handleMouseMove = useCallback(event => onMouseMove?.(datum, event), [onMouseMove, datum])\n\n    const handleMouseLeave = useCallback(\n        event => onMouseLeave?.(datum, event),\n        [onMouseLeave, datum]\n    )\n\n    return (\n        <animated.path\n            d={style.path}\n            opacity={style.opacity}\n            fill={datum.fill || style.color}\n            stroke={style.borderColor}\n            strokeWidth={style.borderWidth}\n            onClick={onClick ? handleClick : undefined}\n            onMouseEnter={onMouseEnter ? handleMouseEnter : undefined}\n            onMouseMove={onMouseMove ? handleMouseMove : undefined}\n            onMouseLeave={onMouseLeave ? handleMouseLeave : undefined}\n        />\n    )\n}\n", "import { to, SpringValue } from '@react-spring/web'\nimport { ArcGenerator } from './types'\n\n/**\n * Directly animating paths for arcs leads to sub-optimal results\n * as the interpolation is going to be linear while we deal with polar coordinates,\n * this interpolator is going to generate proper arc transitions.\n * It should be used with the `useAnimatedArc` or `useArcsTransition` hooks.\n */\nexport const interpolateArc = (\n    startAngleValue: SpringValue<number>,\n    endAngleValue: SpringValue<number>,\n    innerRadiusValue: SpringValue<number>,\n    outerRadiusValue: SpringValue<number>,\n    arcGenerator: ArcGenerator\n) =>\n    to(\n        [startAngleValue, endAngleValue, innerRadiusValue, outerRadiusValue],\n        (startAngle, endAngle, innerRadius, outerRadius) => {\n            return arcGenerator({\n                startAngle,\n                endAngle,\n                innerRadius: Math.max(0, innerRadius),\n                outerRadius: Math.max(0, outerRadius),\n            })\n        }\n    )\n", "import { useTransition } from '@react-spring/web'\nimport { useMotionConfig } from '@nivo/core'\nimport { DatumWithArc } from './types'\nimport { ArcTransitionMode, useArcTransitionMode, TransitionExtra } from './arcTransitionMode'\nimport { interpolateArc } from './interpolateArc'\n\n/**\n * This hook can be used to animate a group of arcs,\n * if you want to animate a single arc,\n * please have a look at the `useAnimatedArc` hook.\n */\nexport const useArcsTransition = <Datum extends DatumWithArc, ExtraProps = unknown>(\n    data: Datum[],\n    mode: ArcTransitionMode = 'innerRadius',\n    extra?: TransitionExtra<Datum, ExtraProps>\n) => {\n    const { animate, config: springConfig } = useMotionConfig()\n\n    const phases = useArcTransitionMode<Datum, ExtraProps>(mode, extra)\n\n    const transition = useTransition<\n        Datum,\n        {\n            progress: number\n            startAngle: number\n            endAngle: number\n            innerRadius: number\n            outerRadius: number\n        } & ExtraProps\n    >(data, {\n        keys: datum => datum.id,\n        initial: phases.update,\n        from: phases.enter,\n        enter: phases.update,\n        update: phases.update,\n        leave: phases.leave,\n        config: springConfig,\n        immediate: !animate,\n    })\n\n    return {\n        transition,\n        interpolate: interpolateArc,\n    }\n}\n", "import { createElement } from 'react'\nimport { useTheme } from '@nivo/core'\nimport { InheritedColorConfig, useInheritedColor } from '@nivo/colors'\nimport { DatumWithArcAndColor, ArcGenerator } from './types'\nimport { useArcsTransition } from './useArcsTransition'\nimport { ArcTransitionMode } from './arcTransitionMode'\nimport { ArcMouseHandler, ArcShape, ArcShapeProps } from './ArcShape'\n\nexport type ArcComponent<Datum extends DatumWithArcAndColor> = (\n    props: ArcShapeProps<Datum>\n) => JSX.Element\n\ninterface ArcsLayerProps<Datum extends DatumWithArcAndColor> {\n    center: [number, number]\n    data: Datum[]\n    arcGenerator: ArcGenerator\n    borderWidth: number\n    borderColor: InheritedColorConfig<Datum>\n    onClick?: ArcMouseHandler<Datum>\n    onMouseEnter?: ArcMouseHandler<Datum>\n    onMouseMove?: ArcMouseHandler<Datum>\n    onMouseLeave?: ArcMouseHandler<Datum>\n    transitionMode: ArcTransitionMode\n    component?: ArcComponent<Datum>\n}\n\nexport const ArcsLayer = <Datum extends DatumWithArcAndColor>({\n    center,\n    data,\n    arcGenerator,\n    borderWidth,\n    borderColor,\n    onClick,\n    onMouseEnter,\n    onMouseMove,\n    onMouseLeave,\n    transitionMode,\n    component = ArcShape,\n}: ArcsLayerProps<Datum>) => {\n    const theme = useTheme()\n    const getBorderColor = useInheritedColor<Datum>(borderColor, theme)\n\n    const { transition, interpolate } = useArcsTransition<\n        Datum,\n        {\n            opacity: number\n            color: string\n            borderColor: string\n        }\n    >(data, transitionMode, {\n        enter: datum => ({\n            opacity: 0,\n            color: datum.color,\n            borderColor: getBorderColor(datum),\n        }),\n        update: datum => ({\n            opacity: 1,\n            color: datum.color,\n            borderColor: getBorderColor(datum),\n        }),\n        leave: datum => ({\n            opacity: 0,\n            color: datum.color,\n            borderColor: getBorderColor(datum),\n        }),\n    })\n\n    const Arc: ArcComponent<Datum> = component\n\n    return (\n        <g transform={`translate(${center[0]},${center[1]})`}>\n            {transition((transitionProps, datum) => {\n                return createElement(Arc, {\n                    key: datum.id,\n                    datum,\n                    style: {\n                        ...transitionProps,\n                        borderWidth,\n                        path: interpolate(\n                            transitionProps.startAngle,\n                            transitionProps.endAngle,\n                            transitionProps.innerRadius,\n                            transitionProps.outerRadius,\n                            arcGenerator\n                        ),\n                    },\n                    onClick,\n                    onMouseEnter,\n                    onMouseMove,\n                    onMouseLeave,\n                })\n            })}\n        </g>\n    )\n}\n", "import { positionFromAngle, degreesToRadians } from '@nivo/core'\n\n/**\n * Computes the bounding box for a circle arc.\n *\n * Assumptions:\n *   - Anywhere the arc intersects an axis will be a max or a min.\n *   - If the arc doesn't intersect an axis, then the center\n *     will be one corner of the bounding rectangle,\n *     and this is the only case when it will be.\n *   - The only other possible extreme points of the sector to consider\n *     are the endpoints of the radii.\n *\n * This script was built within the help of this answer on stackoverflow:\n *   https://stackoverflow.com/questions/1336663/2d-bounding-box-of-a-sector\n */\nexport const computeArcBoundingBox = (\n    centerX: number,\n    centerY: number,\n    radius: number,\n    // in degrees\n    startAngle: number,\n    // in degrees\n    endAngle: number,\n    includeCenter = true\n) => {\n    let points: [number, number][] = []\n\n    const p0 = positionFromAngle(degreesToRadians(startAngle), radius)\n    points.push([p0.x, p0.y])\n\n    const p1 = positionFromAngle(degreesToRadians(endAngle), radius)\n    points.push([p1.x, p1.y])\n\n    for (\n        let angle = Math.round(Math.min(startAngle, endAngle));\n        angle <= Math.round(Math.max(startAngle, endAngle));\n        angle++\n    ) {\n        if (angle % 90 === 0) {\n            const p = positionFromAngle(degreesToRadians(angle), radius)\n            points.push([p.x, p.y])\n        }\n    }\n\n    points = points.map(([x, y]) => [centerX + x, centerY + y])\n    if (includeCenter) {\n        points.push([centerX, centerY])\n    }\n\n    const xs = points.map(([x]) => x)\n    const ys = points.map(([, y]) => y)\n\n    const x0 = Math.min(...xs)\n    const x1 = Math.max(...xs)\n\n    const y0 = Math.min(...ys)\n    const y1 = Math.max(...ys)\n\n    return {\n        points,\n        x: x0,\n        y: y0,\n        width: x1 - x0,\n        height: y1 - y0,\n    }\n}\n", "import { getDistance, getAngle } from '@nivo/core'\nimport { Arc } from './types'\n\n/**\n * Check if cursor is in given ring.\n */\nexport const isCursorInRing = (\n    centerX: number,\n    centerY: number,\n    radius: number,\n    innerRadius: number,\n    cursorX: number,\n    cursorY: number\n) => {\n    const distance = getDistance(cursorX, cursorY, centerX, centerY)\n\n    return distance < radius && distance > innerRadius\n}\n\n/**\n * Search for an arc being under cursor.\n */\nexport const findArcUnderCursor = <A extends Arc = Arc>(\n    centerX: number,\n    centerY: number,\n    radius: number,\n    innerRadius: number,\n    arcs: A[],\n    cursorX: number,\n    cursorY: number\n): A | undefined => {\n    if (!isCursorInRing(centerX, centerY, radius, innerRadius, cursorX, cursorY)) {\n        return undefined\n    }\n\n    const cursorAngle = getAngle(cursorX, cursorY, centerX, centerY)\n\n    return arcs.find(\n        ({ startAngle, endAngle }) => cursorAngle >= startAngle && cursorAngle < endAngle\n    )\n}\n", "import { useSpring } from '@react-spring/web'\nimport { useMotionConfig } from '@nivo/core'\nimport { Arc, ArcGenerator } from './types'\nimport { interpolateArc } from './interpolateArc'\n\n/**\n * This hook can be used to animate a single arc,\n * if you want to animate a group of arcs,\n * please have a look at the `useArcsTransition` hook.\n */\nexport const useAnimatedArc = (datumWithArc: { arc: Arc }, arcGenerator: ArcGenerator) => {\n    const { animate, config: springConfig } = useMotionConfig()\n\n    const animatedValues = useSpring({\n        startAngle: datumWithArc.arc.startAngle,\n        endAngle: datumWithArc.arc.endAngle,\n        innerRadius: datumWithArc.arc.innerRadius,\n        outerRadius: datumWithArc.arc.outerRadius,\n        config: springConfig,\n        immediate: !animate,\n    })\n\n    return {\n        ...animatedValues,\n        path: interpolateArc(\n            animatedValues.startAngle,\n            animatedValues.endAngle,\n            animatedValues.innerRadius,\n            animatedValues.outerRadius,\n            arcGenerator\n        ),\n    }\n}\n", "import { useMemo } from 'react'\nimport { arc as d3Arc } from 'd3-shape'\nimport { ArcGenerator, Arc } from './types'\n\n/**\n * Memoize a d3 arc generator.\n *\n * Please note that both inner/outer radius aren't static\n * and should come from the arc itself, while it requires\n * more props on the arcs, it provides more flexibility\n * because it's not limited to pie then but can also work\n * with charts such as sunbursts.\n */\nexport const useArcGenerator = ({\n    cornerRadius = 0,\n    padAngle = 0,\n}: {\n    cornerRadius?: number\n    padAngle?: number\n} = {}): ArcGenerator =>\n    useMemo(\n        () =>\n            d3Arc<Arc>()\n                .innerRadius(arc => arc.innerRadius)\n                .outerRadius(arc => arc.outerRadius)\n                .cornerRadius(cornerRadius)\n                .padAngle(padAngle),\n        [cornerRadius, padAngle]\n    )\n", "import { SymbolProps } from './types'\n\nexport const SymbolCircle = ({\n    x,\n    y,\n    size,\n    fill,\n    opacity = 1,\n    borderWidth = 0,\n    borderColor = 'transparent',\n}: SymbolProps) => {\n    return (\n        <circle\n            r={size / 2}\n            cx={x + size / 2}\n            cy={y + size / 2}\n            fill={fill}\n            opacity={opacity}\n            strokeWidth={borderWidth}\n            stroke={borderColor}\n            style={{\n                pointerEvents: 'none',\n            }}\n        />\n    )\n}\n", "import { SymbolProps } from './types'\n\nexport const SymbolDiamond = ({\n    x,\n    y,\n    size,\n    fill,\n    opacity = 1,\n    borderWidth = 0,\n    borderColor = 'transparent',\n}: SymbolProps) => {\n    return (\n        <g transform={`translate(${x},${y})`}>\n            <path\n                d={`\n                    M${size / 2} 0\n                    L${size * 0.8} ${size / 2}\n                    L${size / 2} ${size}\n                    L${size * 0.2} ${size / 2}\n                    L${size / 2} 0\n                `}\n                fill={fill}\n                opacity={opacity}\n                strokeWidth={borderWidth}\n                stroke={borderColor}\n                style={{\n                    pointerEvents: 'none',\n                }}\n            />\n        </g>\n    )\n}\n", "import { SymbolProps } from './types'\n\nexport const SymbolSquare = ({\n    x,\n    y,\n    size,\n    fill,\n    opacity = 1,\n    borderWidth = 0,\n    borderColor = 'transparent',\n}: SymbolProps) => {\n    return (\n        <rect\n            x={x}\n            y={y}\n            fill={fill}\n            opacity={opacity}\n            strokeWidth={borderWidth}\n            stroke={borderColor}\n            width={size}\n            height={size}\n            style={{\n                pointerEvents: 'none',\n            }}\n        />\n    )\n}\n", "import { SymbolProps } from './types'\n\nexport const SymbolTriangle = ({\n    x,\n    y,\n    size,\n    fill,\n    opacity = 1,\n    borderWidth = 0,\n    borderColor = 'transparent',\n}: SymbolProps) => {\n    return (\n        <g transform={`translate(${x},${y})`}>\n            <path\n                d={`\n                M${size / 2} 0\n                L${size} ${size}\n                L0 ${size}\n                L${size / 2} 0\n            `}\n                fill={fill}\n                opacity={opacity}\n                strokeWidth={borderWidth}\n                stroke={borderColor}\n                style={{\n                    pointerEvents: 'none',\n                }}\n            />\n        </g>\n    )\n}\n", "import { ContinuousColorsLegendProps } from './types'\n\nexport const continuousColorsLegendDefaults: {\n    length: NonNullable<ContinuousColorsLegendProps['length']>\n    thickness: NonNullable<ContinuousColorsLegendProps['thickness']>\n    direction: NonNullable<ContinuousColorsLegendProps['direction']>\n    tickPosition: NonNullable<ContinuousColorsLegendProps['tickPosition']>\n    tickSize: NonNullable<ContinuousColorsLegendProps['tickSize']>\n    tickSpacing: NonNullable<ContinuousColorsLegendProps['tickSpacing']>\n    tickOverlap: NonNullable<ContinuousColorsLegendProps['tickOverlap']>\n    tickFormat: NonNullable<ContinuousColorsLegendProps['tickFormat']>\n    titleAlign: NonNullable<ContinuousColorsLegendProps['titleAlign']>\n    titleOffset: NonNullable<ContinuousColorsLegendProps['titleOffset']>\n} = {\n    length: 200,\n    thickness: 16,\n    direction: 'row',\n    tickPosition: 'after',\n    tickSize: 4,\n    tickSpacing: 3,\n    tickOverlap: false,\n    tickFormat: (value: number) => `${value}`,\n    titleAlign: 'start',\n    titleOffset: 4,\n}\n", "import { scaleLinear } from 'd3-scale'\nimport { getValueFormatter } from '@nivo/core'\nimport { computeContinuousColorScaleColorStops } from '@nivo/colors'\nimport {\n    BoxLegendSvgProps,\n    ContinuousColorsLegendProps,\n    LegendAnchor,\n    LegendItemDirection,\n} from './types'\nimport { continuousColorsLegendDefaults } from './defaults'\n\nconst isObject = <T>(item: unknown): item is T =>\n    typeof item === 'object' && !Array.isArray(item) && item !== null\n\nconst zeroPadding = {\n    top: 0,\n    right: 0,\n    bottom: 0,\n    left: 0,\n}\n\nexport const computeDimensions = ({\n    direction,\n    itemsSpacing,\n    padding: _padding,\n    itemCount,\n    itemWidth,\n    itemHeight,\n}: Pick<BoxLegendSvgProps, 'direction' | 'padding'> &\n    Record<'itemsSpacing' | 'itemCount' | 'itemWidth' | 'itemHeight', number>) => {\n    if (typeof _padding !== 'number' && !isObject(_padding)) {\n        throw new Error('Invalid property padding, must be one of: number, object')\n    }\n\n    const padding =\n        typeof _padding === 'number'\n            ? {\n                  top: _padding,\n                  right: _padding,\n                  bottom: _padding,\n                  left: _padding,\n              }\n            : {\n                  ...zeroPadding,\n                  ..._padding,\n              }\n\n    const horizontalPadding = padding.left + padding.right\n    const verticalPadding = padding.top + padding.bottom\n    let width = itemWidth + horizontalPadding\n    let height = itemHeight + verticalPadding\n    const spacing = (itemCount - 1) * itemsSpacing\n    if (direction === 'row') {\n        width = itemWidth * itemCount + spacing + horizontalPadding\n    } else if (direction === 'column') {\n        height = itemHeight * itemCount + spacing + verticalPadding\n    }\n\n    return { width, height, padding }\n}\n\nexport const computePositionFromAnchor = ({\n    anchor,\n    translateX,\n    translateY,\n    containerWidth,\n    containerHeight,\n    width,\n    height,\n}: { anchor: LegendAnchor } & Record<\n    'translateX' | 'translateY' | 'containerWidth' | 'containerHeight' | 'width' | 'height',\n    number\n>) => {\n    let x = translateX\n    let y = translateY\n\n    switch (anchor) {\n        case 'top':\n            x += (containerWidth - width) / 2\n            break\n\n        case 'top-right':\n            x += containerWidth - width\n            break\n\n        case 'right':\n            x += containerWidth - width\n            y += (containerHeight - height) / 2\n            break\n\n        case 'bottom-right':\n            x += containerWidth - width\n            y += containerHeight - height\n            break\n\n        case 'bottom':\n            x += (containerWidth - width) / 2\n            y += containerHeight - height\n            break\n\n        case 'bottom-left':\n            y += containerHeight - height\n            break\n\n        case 'left':\n            y += (containerHeight - height) / 2\n            break\n\n        case 'center':\n            x += (containerWidth - width) / 2\n            y += (containerHeight - height) / 2\n            break\n    }\n\n    return { x, y }\n}\n\nexport const computeItemLayout = ({\n    direction,\n    justify,\n    symbolSize,\n    symbolSpacing,\n    width,\n    height,\n}: {\n    direction: LegendItemDirection\n    justify: boolean\n} & Record<'symbolSize' | 'symbolSpacing' | 'width' | 'height', number>) => {\n    let symbolX\n    let symbolY\n\n    let labelX\n    let labelY\n    let labelAnchor: 'start' | 'middle' | 'end'\n    let labelAlignment: 'alphabetic' | 'central' | 'text-before-edge'\n\n    switch (direction) {\n        case 'left-to-right':\n            symbolX = 0\n            symbolY = (height - symbolSize) / 2\n\n            labelY = height / 2\n            labelAlignment = 'central'\n            if (justify) {\n                labelX = width\n                labelAnchor = 'end'\n            } else {\n                labelX = symbolSize + symbolSpacing\n                labelAnchor = 'start'\n            }\n            break\n\n        case 'right-to-left':\n            symbolX = width - symbolSize\n            symbolY = (height - symbolSize) / 2\n\n            labelY = height / 2\n            labelAlignment = 'central'\n            if (justify) {\n                labelX = 0\n                labelAnchor = 'start'\n            } else {\n                labelX = width - symbolSize - symbolSpacing\n                labelAnchor = 'end'\n            }\n            break\n\n        case 'top-to-bottom':\n            symbolX = (width - symbolSize) / 2\n            symbolY = 0\n\n            labelX = width / 2\n\n            labelAnchor = 'middle'\n            if (justify) {\n                labelY = height\n                labelAlignment = 'alphabetic'\n            } else {\n                labelY = symbolSize + symbolSpacing\n                labelAlignment = 'text-before-edge'\n            }\n            break\n\n        case 'bottom-to-top':\n            symbolX = (width - symbolSize) / 2\n            symbolY = height - symbolSize\n\n            labelX = width / 2\n            labelAnchor = 'middle'\n            if (justify) {\n                labelY = 0\n                labelAlignment = 'text-before-edge'\n            } else {\n                labelY = height - symbolSize - symbolSpacing\n                labelAlignment = 'alphabetic'\n            }\n            break\n    }\n\n    return {\n        symbolX,\n        symbolY,\n        labelX,\n        labelY,\n        labelAnchor,\n        labelAlignment,\n    }\n}\n\nexport const computeContinuousColorsLegend = ({\n    scale,\n    ticks,\n    length = continuousColorsLegendDefaults.length,\n    thickness = continuousColorsLegendDefaults.thickness,\n    direction = continuousColorsLegendDefaults.direction,\n    tickPosition = continuousColorsLegendDefaults.tickPosition,\n    tickSize = continuousColorsLegendDefaults.tickSize,\n    tickSpacing = continuousColorsLegendDefaults.tickSpacing,\n    tickOverlap = continuousColorsLegendDefaults.tickOverlap,\n    tickFormat = continuousColorsLegendDefaults.tickFormat,\n    title,\n    titleAlign = continuousColorsLegendDefaults.titleAlign,\n    titleOffset = continuousColorsLegendDefaults.titleOffset,\n}: ContinuousColorsLegendProps) => {\n    // left to right for `row`, bottom to top for `column`\n    const domain = direction === 'column' ? [...scale.domain()].reverse() : scale.domain()\n\n    const positionScale = scaleLinear().domain(domain)\n    if (domain.length === 2) {\n        // sequential, quantize\n        positionScale.range([0, length])\n    } else if (domain.length === 3) {\n        // diverging\n        positionScale.range([0, length / 2, length])\n    }\n\n    let values: number[]\n    if ('thresholds' in scale) {\n        // quantize\n        values = [domain[0], ...scale.thresholds(), domain[1]]\n    } else {\n        // sequential, diverging\n        values = Array.isArray(ticks) ? ticks : (scale as any).ticks(ticks)\n    }\n\n    const colorStops = computeContinuousColorScaleColorStops(scale, 32)\n\n    const formatValue = getValueFormatter(tickFormat)\n\n    const computedTicks: {\n        x1: number\n        y1: number\n        x2: number\n        y2: number\n        text: string\n        textX: number\n        textY: number\n        textHorizontalAlign: 'start' | 'middle' | 'end'\n        textVerticalAlign: 'alphabetic' | 'central' | 'hanging'\n    }[] = []\n\n    let width: number\n    let height: number\n\n    const gradientX1 = 0\n    let gradientY1 = 0\n    let gradientX2 = 0\n    const gradientY2 = 0\n\n    let titleX: number\n    let titleY: number\n    let titleRotation: number\n    let titleVerticalAlign: 'alphabetic' | 'hanging'\n\n    if (direction === 'row') {\n        width = length\n        height = thickness\n\n        gradientX2 = 1\n\n        let y1: number\n        let y2: number\n\n        let textY: number\n        const textHorizontalAlign = 'middle'\n        let textVerticalAlign: 'alphabetic' | 'hanging'\n\n        titleRotation = 0\n        if (titleAlign === 'start') {\n            titleX = 0\n        } else if (titleAlign === 'middle') {\n            titleX = length / 2\n        } else {\n            titleX = length\n        }\n\n        if (tickPosition === 'before') {\n            y1 = -tickSize\n            y2 = tickOverlap ? thickness : 0\n\n            textY = -tickSize - tickSpacing\n            textVerticalAlign = 'alphabetic'\n\n            titleY = thickness + titleOffset\n            titleVerticalAlign = 'hanging'\n        } else {\n            y1 = tickOverlap ? 0 : thickness\n            y2 = thickness + tickSize\n\n            textY = y2 + tickSpacing\n            textVerticalAlign = 'hanging'\n\n            titleY = -titleOffset\n            titleVerticalAlign = 'alphabetic'\n        }\n\n        values.forEach(value => {\n            const x = positionScale(value)\n\n            computedTicks.push({\n                x1: x,\n                y1,\n                x2: x,\n                y2,\n                text: formatValue(value),\n                textX: x,\n                textY,\n                textHorizontalAlign,\n                textVerticalAlign,\n            })\n        })\n    } else {\n        width = thickness\n        height = length\n\n        gradientY1 = 1\n\n        let x1: number\n        let x2: number\n\n        let textX: number\n        let textHorizontalAlign: 'start' | 'end'\n        const textVerticalAlign = 'central'\n\n        titleRotation = -90\n        if (titleAlign === 'start') {\n            titleY = length\n        } else if (titleAlign === 'middle') {\n            titleY = length / 2\n        } else {\n            titleY = 0\n        }\n\n        if (tickPosition === 'before') {\n            x1 = -tickSize\n            x2 = tickOverlap ? thickness : 0\n\n            textX = x1 - tickSpacing\n            textHorizontalAlign = 'end'\n\n            titleX = thickness + titleOffset\n            titleVerticalAlign = 'hanging'\n        } else {\n            x1 = tickOverlap ? 0 : thickness\n            x2 = thickness + tickSize\n\n            textX = x2 + tickSpacing\n            textHorizontalAlign = 'start'\n\n            titleX = -titleOffset\n            titleVerticalAlign = 'alphabetic'\n        }\n\n        values.forEach(value => {\n            const y = positionScale(value)\n\n            computedTicks.push({\n                x1,\n                y1: y,\n                x2,\n                y2: y,\n                text: formatValue(value),\n                textX,\n                textY: y,\n                textHorizontalAlign,\n                textVerticalAlign,\n            })\n        })\n    }\n\n    return {\n        width,\n        height,\n        gradientX1,\n        gradientY1,\n        gradientX2,\n        gradientY2,\n        colorStops,\n        ticks: computedTicks,\n        titleText: title,\n        titleX,\n        titleY,\n        titleRotation,\n        titleHorizontalAlign: titleAlign,\n        titleVerticalAlign,\n    }\n}\n", "import { Fragment } from 'react'\nimport { useTheme } from '@nivo/core'\nimport { computeContinuousColorsLegend } from '../compute'\nimport { ContinuousColorsLegendProps } from '../types'\nimport { continuousColorsLegendDefaults } from '../defaults'\n\nexport const ContinuousColorsLegendSvg = ({\n    scale,\n    ticks,\n    length = continuousColorsLegendDefaults.length,\n    thickness = continuousColorsLegendDefaults.thickness,\n    direction = continuousColorsLegendDefaults.direction,\n    tickPosition = continuousColorsLegendDefaults.tickPosition,\n    tickSize = continuousColorsLegendDefaults.tickSize,\n    tickSpacing = continuousColorsLegendDefaults.tickSpacing,\n    tickOverlap = continuousColorsLegendDefaults.tickOverlap,\n    tickFormat = continuousColorsLegendDefaults.tickFormat,\n    title,\n    titleAlign = continuousColorsLegendDefaults.titleAlign,\n    titleOffset = continuousColorsLegendDefaults.titleOffset,\n}: ContinuousColorsLegendProps) => {\n    const {\n        width,\n        height,\n        gradientX1,\n        gradientY1,\n        gradientX2,\n        gradientY2,\n        ticks: computedTicks,\n        colorStops,\n        titleText,\n        titleX,\n        titleY,\n        titleRotation,\n        titleVerticalAlign,\n        titleHorizontalAlign,\n    } = computeContinuousColorsLegend({\n        scale,\n        ticks,\n        length,\n        thickness,\n        direction,\n        tickPosition,\n        tickSize,\n        tickSpacing,\n        tickOverlap,\n        tickFormat,\n        title,\n        titleAlign,\n        titleOffset,\n    })\n\n    const theme = useTheme()\n\n    const id = `ContinuousColorsLegendSvgGradient.${direction}.${colorStops\n        .map(stop => stop.offset)\n        .join('_')}`\n\n    return (\n        <g>\n            <defs>\n                <linearGradient\n                    id={id}\n                    x1={gradientX1}\n                    y1={gradientY1}\n                    x2={gradientX2}\n                    y2={gradientY2}\n                >\n                    {colorStops.map(colorStop => (\n                        <stop {...colorStop} />\n                    ))}\n                </linearGradient>\n            </defs>\n            {titleText && (\n                <text\n                    transform={`translate(${titleX}, ${titleY}) rotate(${titleRotation})`}\n                    textAnchor={titleHorizontalAlign}\n                    dominantBaseline={titleVerticalAlign}\n                    style={theme.legends.title.text}\n                >\n                    {titleText}\n                </text>\n            )}\n            <rect width={width} height={height} fill={`url(#${id}`} />\n            {computedTicks.map((tick, index) => (\n                <Fragment key={index}>\n                    <line\n                        x1={tick.x1}\n                        y1={tick.y1}\n                        x2={tick.x2}\n                        y2={tick.y2}\n                        style={theme.legends.ticks.line}\n                    />\n                    <text\n                        x={tick.textX}\n                        y={tick.textY}\n                        textAnchor={tick.textHorizontalAlign}\n                        dominantBaseline={tick.textVerticalAlign}\n                        style={theme.legends.ticks.text}\n                    >\n                        {tick.text}\n                    </text>\n                </Fragment>\n            ))}\n        </g>\n    )\n}\n", "import { AnchoredContinuousColorsLegendProps } from '../types'\nimport { computePositionFromAnchor } from '../compute'\nimport { continuousColorsLegendDefaults } from '../defaults'\nimport { ContinuousColorsLegendSvg } from './ContinuousColorsLegendSvg'\n\nexport const AnchoredContinuousColorsLegendSvg = ({\n    containerWidth,\n    containerHeight,\n    anchor,\n    translateX = 0,\n    translateY = 0,\n    length = continuousColorsLegendDefaults.length,\n    thickness = continuousColorsLegendDefaults.thickness,\n    direction = continuousColorsLegendDefaults.direction,\n    ...legendProps\n}: AnchoredContinuousColorsLegendProps) => {\n    let width: number\n    let height: number\n    if (direction === 'row') {\n        width = length\n        height = thickness\n    } else {\n        width = thickness\n        height = length\n    }\n\n    const { x, y } = computePositionFromAnchor({\n        anchor,\n        translateX,\n        translateY,\n        containerWidth,\n        containerHeight,\n        width,\n        height,\n    })\n\n    return (\n        <g transform={`translate(${x}, ${y})`}>\n            <ContinuousColorsLegendSvg\n                length={length}\n                thickness={thickness}\n                direction={direction}\n                {...legendProps}\n            />\n        </g>\n    )\n}\n", "import { useState, useCallback } from 'react'\nimport * as React from 'react'\nimport { useTheme } from '@nivo/core'\nimport { LegendSvgItemProps } from '../types'\nimport { computeItemLayout } from '../compute'\nimport { SymbolCircle, SymbolDiamond, SymbolSquare, SymbolTriangle } from './symbols'\n\ntype Style = Partial<{\n    itemBackground: string\n    itemOpacity: number\n    itemTextColor: string\n    symbolBorderColor: string\n    symbolBorderWidth: number\n    symbolSize: number\n}>\n\nconst symbolByShape = {\n    circle: SymbolCircle,\n    diamond: SymbolDiamond,\n    square: SymbolSquare,\n    triangle: SymbolTriangle,\n}\n\nexport const LegendSvgItem = ({\n    x,\n    y,\n    width,\n    height,\n    data,\n    direction = 'left-to-right',\n    justify = false,\n    textColor,\n    background = 'transparent',\n    opacity = 1,\n\n    symbolShape = 'square',\n    symbolSize = 16,\n    symbolSpacing = 8,\n    symbolBorderWidth = 0,\n    symbolBorderColor = 'transparent',\n\n    onClick,\n    onMouseEnter,\n    onMouseLeave,\n    toggleSerie,\n\n    effects,\n}: LegendSvgItemProps) => {\n    const [style, setStyle] = useState<Style>({})\n    const theme = useTheme()\n\n    const handleMouseEnter = useCallback(\n        (event: React.MouseEvent<SVGRectElement>) => {\n            if (effects) {\n                const applyEffects = effects.filter(({ on }) => on === 'hover')\n                const style = applyEffects.reduce(\n                    (acc, effect) => ({\n                        ...acc,\n                        ...effect.style,\n                    }),\n                    {}\n                )\n                setStyle(style)\n            }\n\n            onMouseEnter?.(data, event)\n        },\n        [onMouseEnter, data, effects]\n    )\n    const handleMouseLeave = useCallback(\n        (event: React.MouseEvent<SVGRectElement>) => {\n            if (effects) {\n                const applyEffects = effects.filter(({ on }) => on !== 'hover')\n                const style = applyEffects.reduce(\n                    (acc, effect) => ({\n                        ...acc,\n                        ...effect.style,\n                    }),\n                    {}\n                )\n                setStyle(style)\n            }\n\n            onMouseLeave?.(data, event)\n        },\n        [onMouseLeave, data, effects]\n    )\n\n    const { symbolX, symbolY, labelX, labelY, labelAnchor, labelAlignment } = computeItemLayout({\n        direction,\n        justify,\n        symbolSize: style.symbolSize ?? symbolSize,\n        symbolSpacing,\n        width,\n        height,\n    })\n\n    const isInteractive = [onClick, onMouseEnter, onMouseLeave, toggleSerie].some(\n        handler => handler !== undefined\n    )\n\n    const SymbolShape = typeof symbolShape === 'function' ? symbolShape : symbolByShape[symbolShape]\n\n    return (\n        <g\n            transform={`translate(${x},${y})`}\n            style={{\n                opacity: style.itemOpacity ?? opacity,\n            }}\n        >\n            <rect\n                width={width}\n                height={height}\n                fill={style.itemBackground ?? background}\n                style={{\n                    cursor: isInteractive ? 'pointer' : 'auto',\n                }}\n                onClick={event => {\n                    onClick?.(data, event)\n                    toggleSerie?.(data.id)\n                }}\n                onMouseEnter={handleMouseEnter}\n                onMouseLeave={handleMouseLeave}\n            />\n            {React.createElement(SymbolShape, {\n                id: data.id,\n                x: symbolX,\n                y: symbolY,\n                size: style.symbolSize ?? symbolSize,\n                fill: data.fill ?? data.color ?? 'black',\n                borderWidth: style.symbolBorderWidth ?? symbolBorderWidth,\n                borderColor: style.symbolBorderColor ?? symbolBorderColor,\n                ...(data.hidden ? theme.legends.hidden.symbol : undefined),\n            })}\n            <text\n                textAnchor={labelAnchor}\n                style={{\n                    ...theme.legends.text,\n                    fill: style.itemTextColor ?? textColor ?? theme.legends.text.fill ?? 'black',\n                    dominantBaseline: labelAlignment,\n                    pointerEvents: 'none',\n                    userSelect: 'none',\n                    ...(data.hidden ? theme.legends.hidden.text : undefined),\n                }}\n                x={labelX}\n                y={labelY}\n            >\n                {data.label}\n            </text>\n        </g>\n    )\n}\n", "import { LegendSvgItem } from './LegendSvgItem'\nimport { LegendSvgProps } from '../types'\nimport { computeDimensions } from '../compute'\n\nexport const LegendSvg = ({\n    data,\n\n    x,\n    y,\n    direction,\n    padding: _padding = 0,\n    justify,\n    effects,\n\n    itemWidth,\n    itemHeight,\n    itemDirection = 'left-to-right',\n    itemsSpacing = 0,\n    itemTextColor,\n    itemBackground = 'transparent',\n    itemOpacity = 1,\n\n    symbolShape,\n    symbolSize,\n    symbolSpacing,\n    symbolBorderWidth,\n    symbolBorderColor,\n\n    onClick,\n    onMouseEnter,\n    onMouseLeave,\n    toggleSerie,\n}: LegendSvgProps) => {\n    const { padding } = computeDimensions({\n        itemCount: data.length,\n        itemWidth,\n        itemHeight,\n        itemsSpacing,\n        direction,\n        padding: _padding,\n    })\n\n    const xStep = direction === 'row' ? itemWidth + itemsSpacing : 0\n    const yStep = direction === 'column' ? itemHeight + itemsSpacing : 0\n\n    return (\n        <g transform={`translate(${x},${y})`}>\n            {data.map((data, i) => (\n                <LegendSvgItem\n                    key={i}\n                    data={data}\n                    x={i * xStep + padding.left}\n                    y={i * yStep + padding.top}\n                    width={itemWidth}\n                    height={itemHeight}\n                    direction={itemDirection}\n                    justify={justify}\n                    effects={effects}\n                    textColor={itemTextColor}\n                    background={itemBackground}\n                    opacity={itemOpacity}\n                    symbolShape={symbolShape}\n                    symbolSize={symbolSize}\n                    symbolSpacing={symbolSpacing}\n                    symbolBorderWidth={symbolBorderWidth}\n                    symbolBorderColor={symbolBorderColor}\n                    onClick={onClick}\n                    onMouseEnter={onMouseEnter}\n                    onMouseLeave={onMouseLeave}\n                    toggleSerie={toggleSerie}\n                />\n            ))}\n        </g>\n    )\n}\n", "import { LegendSvg } from './LegendSvg'\nimport { BoxLegendSvgProps } from '../types'\nimport { computeDimensions, computePositionFromAnchor } from '../compute'\n\nexport const BoxLegendSvg = ({\n    data,\n\n    containerWidth,\n    containerHeight,\n    translateX = 0,\n    translateY = 0,\n    anchor,\n    direction,\n    padding = 0,\n    justify,\n\n    itemsSpacing = 0,\n    itemWidth,\n    itemHeight,\n    itemDirection,\n    itemTextColor,\n    itemBackground,\n    itemOpacity,\n\n    symbolShape,\n    symbolSize,\n    symbolSpacing,\n    symbolBorderWidth,\n    symbolBorderColor,\n\n    onClick,\n    onMouseEnter,\n    onMouseLeave,\n    toggleSerie,\n\n    effects,\n}: BoxLegendSvgProps) => {\n    const { width, height } = computeDimensions({\n        itemCount: data.length,\n        itemsSpacing,\n        itemWidth,\n        itemHeight,\n        direction,\n        padding,\n    })\n\n    const { x, y } = computePositionFromAnchor({\n        anchor,\n        translateX,\n        translateY,\n        containerWidth,\n        containerHeight,\n        width,\n        height,\n    })\n\n    return (\n        <LegendSvg\n            data={data}\n            x={x}\n            y={y}\n            direction={direction}\n            padding={padding}\n            justify={justify}\n            effects={effects}\n            itemsSpacing={itemsSpacing}\n            itemWidth={itemWidth}\n            itemHeight={itemHeight}\n            itemDirection={itemDirection}\n            itemTextColor={itemTextColor}\n            itemBackground={itemBackground}\n            itemOpacity={itemOpacity}\n            symbolShape={symbolShape}\n            symbolSize={symbolSize}\n            symbolSpacing={symbolSpacing}\n            symbolBorderWidth={symbolBorderWidth}\n            symbolBorderColor={symbolBorderColor}\n            onClick={onClick}\n            onMouseEnter={onMouseEnter}\n            onMouseLeave={onMouseLeave}\n            toggleSerie={typeof toggleSerie === 'boolean' ? undefined : toggleSerie}\n        />\n    )\n}\n", "import { CompleteTheme, degreesToRadians } from '@nivo/core'\nimport {\n    computeDimensions,\n    computePositionFromAnchor,\n    computeItemLayout,\n    computeContinuousColorsLegend,\n} from './compute'\nimport { AnchoredContinuousColorsLegendProps, LegendCanvasProps } from './types'\nimport { continuousColorsLegendDefaults } from './defaults'\n\nconst textAlignMapping = {\n    start: 'left',\n    middle: 'center',\n    end: 'right',\n} as const\n\nexport const renderLegendToCanvas = (\n    ctx: CanvasRenderingContext2D,\n    {\n        data,\n\n        containerWidth,\n        containerHeight,\n        translateX = 0,\n        translateY = 0,\n        anchor,\n        direction,\n        padding: _padding = 0,\n        justify = false,\n\n        // items\n        itemsSpacing = 0,\n        itemWidth,\n        itemHeight,\n        itemDirection = 'left-to-right',\n        itemTextColor,\n\n        // symbol\n        symbolSize = 16,\n        symbolSpacing = 8,\n        // @todo add support for shapes\n        // symbolShape = LegendSvgItem.defaultProps.symbolShape,\n\n        theme,\n    }: LegendCanvasProps\n) => {\n    const { width, height, padding } = computeDimensions({\n        itemCount: data.length,\n        itemWidth,\n        itemHeight,\n        itemsSpacing,\n        direction,\n        padding: _padding,\n    })\n\n    const { x, y } = computePositionFromAnchor({\n        anchor,\n        translateX,\n        translateY,\n        containerWidth,\n        containerHeight,\n        width,\n        height,\n    })\n\n    const xStep = direction === 'row' ? itemWidth + itemsSpacing : 0\n    const yStep = direction === 'column' ? itemHeight + itemsSpacing : 0\n\n    ctx.save()\n    ctx.translate(x, y)\n\n    ctx.font = `${theme.legends.text.fontSize}px ${theme.legends.text.fontFamily || 'sans-serif'}`\n\n    data.forEach((d, i) => {\n        const itemX = i * xStep + padding.left\n        const itemY = i * yStep + padding.top\n\n        const { symbolX, symbolY, labelX, labelY, labelAnchor, labelAlignment } = computeItemLayout(\n            {\n                direction: itemDirection,\n                justify,\n                symbolSize,\n                symbolSpacing,\n                width: itemWidth,\n                height: itemHeight,\n            }\n        )\n\n        ctx.fillStyle = d.color ?? 'black'\n        ctx.fillRect(itemX + symbolX, itemY + symbolY, symbolSize, symbolSize)\n\n        ctx.textAlign = textAlignMapping[labelAnchor]\n\n        if (labelAlignment === 'central') {\n            ctx.textBaseline = 'middle'\n        }\n\n        ctx.fillStyle = itemTextColor ?? theme.legends.text.fill ?? 'black'\n        ctx.fillText(String(d.label), itemX + labelX, itemY + labelY)\n    })\n\n    ctx.restore()\n}\n\nexport const renderContinuousColorLegendToCanvas = (\n    ctx: CanvasRenderingContext2D,\n    {\n        containerWidth,\n        containerHeight,\n        anchor,\n        translateX = 0,\n        translateY = 0,\n        scale,\n        length = continuousColorsLegendDefaults.length,\n        thickness = continuousColorsLegendDefaults.thickness,\n        direction = continuousColorsLegendDefaults.direction,\n        ticks: _ticks,\n        tickPosition = continuousColorsLegendDefaults.tickPosition,\n        tickSize = continuousColorsLegendDefaults.tickSize,\n        tickSpacing = continuousColorsLegendDefaults.tickSpacing,\n        tickOverlap = continuousColorsLegendDefaults.tickOverlap,\n        tickFormat = continuousColorsLegendDefaults.tickFormat,\n        title,\n        titleAlign = continuousColorsLegendDefaults.titleAlign,\n        titleOffset = continuousColorsLegendDefaults.titleOffset,\n        theme,\n    }: AnchoredContinuousColorsLegendProps & {\n        theme: CompleteTheme\n    }\n) => {\n    const {\n        width,\n        height,\n        gradientX1,\n        gradientY1,\n        gradientX2,\n        gradientY2,\n        colorStops,\n        ticks,\n        titleText,\n        titleX,\n        titleY,\n        titleRotation,\n        titleVerticalAlign,\n        titleHorizontalAlign,\n    } = computeContinuousColorsLegend({\n        scale,\n        ticks: _ticks,\n        length,\n        thickness,\n        direction,\n        tickPosition,\n        tickSize,\n        tickSpacing,\n        tickOverlap,\n        tickFormat,\n        title,\n        titleAlign,\n        titleOffset,\n    })\n\n    const { x, y } = computePositionFromAnchor({\n        anchor,\n        translateX,\n        translateY,\n        containerWidth,\n        containerHeight,\n        width,\n        height,\n    })\n\n    const initialStyles = {\n        font: ctx.font,\n        textAlign: ctx.textAlign,\n        textBaseline: ctx.textBaseline,\n    }\n    ctx.save()\n\n    ctx.translate(x, y)\n\n    const gradient = ctx.createLinearGradient(\n        gradientX1 * width,\n        gradientY1 * height,\n        gradientX2 * width,\n        gradientY2 * height\n    )\n    colorStops.forEach(colorStop => {\n        gradient.addColorStop(colorStop.offset, colorStop.stopColor)\n    })\n\n    ctx.fillStyle = gradient\n    ctx.fillRect(0, 0, width, height)\n\n    ctx.font = `${\n        theme.legends.ticks.text.fontWeight ? `${theme.legends.ticks.text.fontWeight} ` : ''\n    }${theme.legends.ticks.text.fontSize}px ${theme.legends.ticks.text.fontFamily}`\n\n    ticks.forEach(tick => {\n        if ((theme.legends.ticks.line.strokeWidth ?? 0) > 0) {\n            ctx.lineWidth = Number(theme.axis.ticks.line.strokeWidth)\n            if (theme.axis.ticks.line.stroke) {\n                ctx.strokeStyle = theme.axis.ticks.line.stroke\n            }\n            ctx.lineCap = 'square'\n\n            ctx.beginPath()\n            ctx.moveTo(tick.x1, tick.y1)\n            ctx.lineTo(tick.x2, tick.y2)\n            ctx.stroke()\n        }\n\n        if (theme.legends.ticks.text.fill) {\n            ctx.fillStyle = theme.legends.ticks.text.fill\n        }\n        ctx.textAlign = tick.textHorizontalAlign === 'middle' ? 'center' : tick.textHorizontalAlign\n        ctx.textBaseline = tick.textVerticalAlign === 'central' ? 'middle' : tick.textVerticalAlign\n\n        ctx.fillText(tick.text, tick.textX, tick.textY)\n    })\n\n    if (titleText) {\n        ctx.save()\n        ctx.translate(titleX, titleY)\n        ctx.rotate(degreesToRadians(titleRotation))\n\n        ctx.font = `${\n            theme.legends.title.text.fontWeight ? `${theme.legends.title.text.fontWeight} ` : ''\n        }${theme.legends.title.text.fontSize}px ${theme.legends.title.text.fontFamily}`\n        if (theme.legends.title.text.fill) {\n            ctx.fillStyle = theme.legends.title.text.fill\n        }\n        ctx.textAlign = titleHorizontalAlign === 'middle' ? 'center' : titleHorizontalAlign\n        ctx.textBaseline = titleVerticalAlign\n\n        ctx.fillText(titleText, 0, 0)\n\n        ctx.restore()\n    }\n\n    ctx.restore()\n\n    ctx.font = initialStyles.font\n    ctx.textAlign = initialStyles.textAlign\n    ctx.textBaseline = initialStyles.textBaseline\n}\n", "import { useMemo } from 'react'\n\ntype Scale = {\n    (value: number): number\n    invertExtent: (value: number) => [number, number]\n    range: () => number[]\n}\n\nexport const useQuantizeColorScaleLegendData = ({\n    scale,\n    domain: overriddenDomain,\n    reverse = false,\n    valueFormat = v => v,\n    separator = ' - ',\n}: {\n    scale: Scale\n    domain?: number[]\n    reverse?: boolean\n    valueFormat?: <T, U>(value: T) => T | U\n    separator?: string\n}) => {\n    return useMemo(() => {\n        const domain = overriddenDomain ?? scale.range()\n\n        const items = domain.map((domainValue, index) => {\n            const [start, end] = scale.invertExtent(domainValue)\n\n            return {\n                id: domainValue,\n                index,\n                extent: [start, end],\n                label: `${valueFormat(start)}${separator}${valueFormat(end)}`,\n                value: scale(start),\n                color: domainValue,\n            }\n        })\n\n        if (reverse) items.reverse()\n\n        return items\n    }, [overriddenDomain, scale, reverse, separator, valueFormat])\n}\n", "import PropTypes from 'prop-types'\n\n/**\n * The prop type is exported as a simple object instead of `PropTypes.shape`\n * to be able to add extra properties.\n *\n * @example\n * ```javascript\n * import { LegendPropShape } from '@nivo/legends'\n *\n * const customLegendPropType = PropTypes.shape({\n *     ...LegendPropShape,\n *     extra: PropTypes.any.isRequired,\n * })\n * ```\n */\nexport const LegendPropShape = {\n    data: PropTypes.arrayOf(PropTypes.object),\n\n    // position & layout\n    anchor: PropTypes.oneOf([\n        'top',\n        'top-right',\n        'right',\n        'bottom-right',\n        'bottom',\n        'bottom-left',\n        'left',\n        'top-left',\n        'center',\n    ]).isRequired,\n    translateX: PropTypes.number,\n    translateY: PropTypes.number,\n    direction: PropTypes.oneOf(['row', 'column']).isRequired,\n\n    // item\n    itemsSpacing: PropTypes.number,\n    itemWidth: PropTypes.number.isRequired,\n    itemHeight: PropTypes.number.isRequired,\n    itemDirection: PropTypes.oneOf([\n        'left-to-right',\n        'right-to-left',\n        'top-to-bottom',\n        'bottom-to-top',\n    ]),\n    itemTextColor: PropTypes.string,\n    itemBackground: PropTypes.string,\n    itemOpacity: PropTypes.number,\n\n    symbolShape: PropTypes.oneOfType([\n        PropTypes.oneOf(['circle', 'diamond', 'square', 'triangle']),\n        PropTypes.func,\n    ]),\n    symbolSize: PropTypes.number,\n    symbolSpacing: PropTypes.number,\n    symbolBorderWidth: PropTypes.number,\n    symbolBorderColor: PropTypes.string,\n\n    onClick: PropTypes.func,\n    onMouseEnter: PropTypes.func,\n    onMouseLeave: PropTypes.func,\n\n    effects: PropTypes.arrayOf(\n        PropTypes.shape({\n            on: PropTypes.oneOfType([PropTypes.oneOf(['hover'])]).isRequired,\n            style: PropTypes.shape({\n                itemTextColor: PropTypes.string,\n                itemBackground: PropTypes.string,\n                itemOpacity: PropTypes.number,\n                symbolSize: PropTypes.number,\n                symbolBorderWidth: PropTypes.number,\n                symbolBorderColor: PropTypes.string,\n            }).isRequired,\n        })\n    ),\n}\n", "import { BoxLegendSvg } from '@nivo/legends'\nimport { CompletePieSvgProps, ComputedDatum, DatumId } from './types'\n\ninterface PieLegendsProps<RawDatum> {\n    width: number\n    height: number\n    legends: CompletePieSvgProps<RawDatum>['legends']\n    data: Omit<ComputedDatum<RawDatum>, 'arc'>[]\n    toggleSerie: (id: DatumId) => void\n}\n\nconst PieLegends = <RawDatum,>({\n    width,\n    height,\n    legends,\n    data,\n    toggleSerie,\n}: PieLegendsProps<RawDatum>) => {\n    return (\n        <>\n            {legends.map((legend, i) => (\n                <BoxLegendSvg\n                    key={i}\n                    {...legend}\n                    containerWidth={width}\n                    containerHeight={height}\n                    data={legend.data ?? data}\n                    toggleSerie={legend.toggleSerie ? toggleSerie : undefined}\n                />\n            ))}\n        </>\n    )\n}\n\nexport default PieLegends\n", "import { OrdinalColorScaleConfig } from '@nivo/colors'\nimport { ArcTransitionMode } from '@nivo/arcs'\nimport { PieTooltip } from './PieTooltip'\n\nexport const defaultProps = {\n    id: 'id',\n    value: 'value',\n    sortByValue: false,\n    innerRadius: 0,\n    padAngle: 0,\n    cornerRadius: 0,\n\n    layers: ['arcLinkLabels', 'arcs', 'arcLabels', 'legends'],\n\n    // layout\n    startAngle: 0,\n    endAngle: 360,\n    fit: true,\n    activeInnerRadiusOffset: 0,\n    activeOuterRadiusOffset: 0,\n\n    // border\n    borderWidth: 0,\n    borderColor: {\n        from: 'color',\n        modifiers: [['darker', 1]],\n    },\n\n    // arc labels\n    enableArcLabels: true,\n    arcLabel: 'formattedValue',\n    arcLabelsSkipAngle: 0,\n    arcLabelsRadiusOffset: 0.5,\n    arcLabelsTextColor: { theme: 'labels.text.fill' },\n\n    // arc link labels\n    enableArcLinkLabels: true,\n    arcLinkLabel: 'id',\n    arcLinkLabelsSkipAngle: 0,\n    arcLinkLabelsOffset: 0,\n    arcLinkLabelsDiagonalLength: 16,\n    arcLinkLabelsStraightLength: 24,\n    arcLinkLabelsThickness: 1,\n    arcLinkLabelsTextOffset: 6,\n    arcLinkLabelsTextColor: { theme: 'labels.text.fill' },\n    arcLinkLabelsColor: { theme: 'axis.ticks.line.stroke' },\n\n    colors: { scheme: 'nivo' } as unknown as OrdinalColorScaleConfig,\n    defs: [],\n    fill: [],\n\n    isInteractive: true,\n\n    animate: true,\n    motionConfig: 'gentle',\n    transitionMode: 'innerRadius' as ArcTransitionMode,\n\n    tooltip: PieTooltip,\n\n    legends: [],\n\n    role: 'img',\n\n    pixelRatio: typeof window !== 'undefined' ? window.devicePixelRatio ?? 1 : 1,\n}\n", "import { BasicTooltip } from '@nivo/tooltip'\nimport { ComputedDatum } from './types'\n\nexport const PieTooltip = <RawDatum,>({ datum }: { datum: ComputedDatum<RawDatum> }) => (\n    <BasicTooltip\n        id={datum.id}\n        value={datum.formattedValue}\n        enableChip={true}\n        color={datum.color}\n    />\n)\n\nexport default PieTooltip\n", "import { useCallback, useMemo, useState } from 'react'\nimport { pie as d3Pie } from 'd3-shape'\nimport { useArcGenerator, computeArcBoundingBox } from '@nivo/arcs'\nimport {\n    degreesToRadians,\n    radiansToDegrees,\n    useValueFormatter,\n    usePropertyAccessor,\n} from '@nivo/core'\nimport { OrdinalColorScaleConfig, useOrdinalColorScale } from '@nivo/colors'\nimport { defaultProps } from './props'\nimport { CompletePieSvgProps, ComputedDatum, DatumId, PieArc, PieCustomLayerProps } from './types'\n\ninterface MayHaveLabel {\n    label?: string | number\n}\n\n/**\n * Format data so that we get a consistent data structure.\n * It will also add the `formattedValue` and `color` property.\n */\nexport const useNormalizedData = <RawDatum extends MayHaveLabel>({\n    data,\n    id = defaultProps.id,\n    value = defaultProps.value,\n    valueFormat,\n    colors = defaultProps.colors as OrdinalColorScaleConfig<\n        Omit<ComputedDatum<RawDatum>, 'arc' | 'color' | 'fill'>\n    >,\n}: Pick<CompletePieSvgProps<RawDatum>, 'id' | 'value' | 'valueFormat' | 'colors'> & {\n    data: RawDatum[]\n}): Omit<ComputedDatum<RawDatum>, 'arc' | 'fill'>[] => {\n    const getId = usePropertyAccessor<RawDatum, DatumId>(id)\n    const getValue = usePropertyAccessor<RawDatum, number>(value)\n    const formatValue = useValueFormatter<number>(valueFormat)\n\n    const getColor = useOrdinalColorScale<Omit<ComputedDatum<RawDatum>, 'arc' | 'color' | 'fill'>>(\n        colors,\n        'id'\n    )\n\n    return useMemo(\n        () =>\n            data.map(datum => {\n                const datumId = getId(datum)\n                const datumValue = getValue(datum)\n\n                const normalizedDatum: Omit<ComputedDatum<RawDatum>, 'arc' | 'color' | 'fill'> = {\n                    id: datumId,\n                    label: datum.label ?? datumId,\n                    hidden: false,\n                    value: datumValue,\n                    formattedValue: formatValue(datumValue),\n                    data: datum,\n                }\n\n                return {\n                    ...normalizedDatum,\n                    color: getColor(normalizedDatum),\n                }\n            }),\n        [data, getId, getValue, formatValue, getColor]\n    )\n}\n\n/**\n * Compute arcs, which don't depend yet on radius.\n */\nexport const usePieArcs = <RawDatum>({\n    data,\n    startAngle,\n    endAngle,\n    innerRadius,\n    outerRadius,\n    padAngle,\n    sortByValue,\n    activeId,\n    activeInnerRadiusOffset,\n    activeOuterRadiusOffset,\n    hiddenIds,\n}: {\n    data: Omit<ComputedDatum<RawDatum>, 'arc' | 'fill'>[]\n    // in degrees\n    startAngle: number\n    // in degrees\n    endAngle: number\n    // in pixels\n    innerRadius: number\n    // in pixels\n    outerRadius: number\n    padAngle: number\n    sortByValue: boolean\n    activeId: null | DatumId\n    activeInnerRadiusOffset: number\n    activeOuterRadiusOffset: number\n    hiddenIds: DatumId[]\n}): {\n    dataWithArc: Omit<ComputedDatum<RawDatum>, 'fill'>[]\n    legendData: Omit<ComputedDatum<RawDatum>, 'arc' | 'fill'>[]\n} => {\n    const pie = useMemo(() => {\n        const innerPie = d3Pie<Omit<ComputedDatum<RawDatum>, 'arc' | 'fill'>>()\n            .value(d => d.value)\n            .startAngle(degreesToRadians(startAngle))\n            .endAngle(degreesToRadians(endAngle))\n            .padAngle(degreesToRadians(padAngle))\n\n        if (!sortByValue) {\n            innerPie.sortValues(null)\n        }\n\n        return innerPie\n    }, [startAngle, endAngle, padAngle, sortByValue])\n\n    return useMemo(() => {\n        const hiddenData = data.filter(item => !hiddenIds.includes(item.id))\n        const dataWithArc = pie(hiddenData).map(\n            (\n                arc: Omit<\n                    PieArc,\n                    'angle' | 'angleDeg' | 'innerRadius' | 'outerRadius' | 'thickness'\n                > & {\n                    data: Omit<ComputedDatum<RawDatum>, 'arc' | 'fill'>\n                }\n            ) => {\n                const angle = Math.abs(arc.endAngle - arc.startAngle)\n\n                return {\n                    ...arc.data,\n                    arc: {\n                        index: arc.index,\n                        startAngle: arc.startAngle,\n                        endAngle: arc.endAngle,\n                        innerRadius:\n                            activeId === arc.data.id\n                                ? innerRadius - activeInnerRadiusOffset\n                                : innerRadius,\n                        outerRadius:\n                            activeId === arc.data.id\n                                ? outerRadius + activeOuterRadiusOffset\n                                : outerRadius,\n                        thickness: outerRadius - innerRadius,\n                        padAngle: arc.padAngle,\n                        angle,\n                        angleDeg: radiansToDegrees(angle),\n                    },\n                }\n            }\n        )\n        const legendData = data.map(item => ({ ...item, hidden: hiddenIds.includes(item.id) }))\n\n        return { dataWithArc, legendData }\n    }, [\n        pie,\n        data,\n        hiddenIds,\n        activeId,\n        innerRadius,\n        activeInnerRadiusOffset,\n        outerRadius,\n        activeOuterRadiusOffset,\n    ])\n}\n\n/**\n * Compute pie layout using explicit radius/innerRadius,\n * expressed in pixels.\n */\nexport const usePie = <RawDatum>({\n    data,\n    radius,\n    innerRadius,\n    startAngle = defaultProps.startAngle,\n    endAngle = defaultProps.endAngle,\n    padAngle = defaultProps.padAngle,\n    sortByValue = defaultProps.sortByValue,\n    cornerRadius = defaultProps.cornerRadius,\n    activeInnerRadiusOffset = defaultProps.activeInnerRadiusOffset,\n    activeOuterRadiusOffset = defaultProps.activeOuterRadiusOffset,\n}: Pick<\n    Partial<CompletePieSvgProps<RawDatum>>,\n    | 'startAngle'\n    | 'endAngle'\n    | 'padAngle'\n    | 'sortByValue'\n    | 'cornerRadius'\n    | 'activeInnerRadiusOffset'\n    | 'activeOuterRadiusOffset'\n> & {\n    data: Omit<ComputedDatum<RawDatum>, 'arc'>[]\n    radius: number\n    innerRadius: number\n}) => {\n    const [activeId, setActiveId] = useState<DatumId | null>(null)\n    const [hiddenIds, setHiddenIds] = useState<DatumId[]>([])\n    const pieArcs = usePieArcs({\n        data,\n        startAngle,\n        endAngle,\n        innerRadius,\n        outerRadius: radius,\n        padAngle,\n        sortByValue,\n        activeId,\n        activeInnerRadiusOffset,\n        activeOuterRadiusOffset,\n        hiddenIds,\n    })\n\n    const toggleSerie = useCallback((id: DatumId) => {\n        setHiddenIds(state =>\n            state.indexOf(id) > -1 ? state.filter(item => item !== id) : [...state, id]\n        )\n    }, [])\n\n    const arcGenerator = useArcGenerator({ cornerRadius, padAngle: degreesToRadians(padAngle) })\n\n    return { ...pieArcs, arcGenerator, setActiveId, toggleSerie }\n}\n\n/**\n * Compute pie layout using a box to find radius/innerRadius,\n * expressed in ratio (0~1), can optionally use the `fit`\n * attribute to find the most space efficient layout.\n *\n * It also returns `centerX`/`centerY` as those can be altered\n * if `fit` is `true`.\n */\nexport const usePieFromBox = <RawDatum>({\n    data,\n    width,\n    height,\n    innerRadius: innerRadiusRatio = defaultProps.innerRadius,\n    startAngle = defaultProps.startAngle,\n    endAngle = defaultProps.endAngle,\n    padAngle = defaultProps.padAngle,\n    sortByValue = defaultProps.sortByValue,\n    cornerRadius = defaultProps.cornerRadius,\n    fit = defaultProps.fit,\n    activeInnerRadiusOffset = defaultProps.activeInnerRadiusOffset,\n    activeOuterRadiusOffset = defaultProps.activeOuterRadiusOffset,\n}: Pick<\n    CompletePieSvgProps<RawDatum>,\n    | 'width'\n    | 'height'\n    | 'innerRadius'\n    | 'startAngle'\n    | 'endAngle'\n    | 'padAngle'\n    | 'sortByValue'\n    | 'cornerRadius'\n    | 'fit'\n    | 'activeInnerRadiusOffset'\n    | 'activeOuterRadiusOffset'\n> & {\n    data: Omit<ComputedDatum<RawDatum>, 'arc'>[]\n}) => {\n    const [activeId, setActiveId] = useState<string | number | null>(null)\n    const [hiddenIds, setHiddenIds] = useState<DatumId[]>([])\n    const computedProps = useMemo(() => {\n        let radius = Math.min(width, height) / 2\n        let innerRadius = radius * Math.min(innerRadiusRatio, 1)\n\n        let centerX = width / 2\n        let centerY = height / 2\n\n        let boundingBox\n        if (fit) {\n            const { points, ...box } = computeArcBoundingBox(\n                centerX,\n                centerY,\n                radius,\n                startAngle - 90,\n                endAngle - 90\n            )\n            const ratio = Math.min(width / box.width, height / box.height)\n\n            const adjustedBox: {\n                width: number\n                height: number\n                x?: number\n                y?: number\n            } = {\n                width: box.width * ratio,\n                height: box.height * ratio,\n            }\n            adjustedBox.x = (width - adjustedBox.width) / 2\n            adjustedBox.y = (height - adjustedBox.height) / 2\n\n            centerX = ((centerX - box.x) / box.width) * box.width * ratio + adjustedBox.x\n            centerY = ((centerY - box.y) / box.height) * box.height * ratio + adjustedBox.y\n\n            boundingBox = { box, ratio, points }\n\n            radius = radius * ratio\n            innerRadius = innerRadius * ratio\n        }\n\n        return {\n            centerX,\n            centerY,\n            radius,\n            innerRadius,\n            debug: boundingBox,\n        }\n    }, [width, height, innerRadiusRatio, startAngle, endAngle, fit, cornerRadius])\n\n    const pieArcs = usePieArcs({\n        data,\n        startAngle,\n        endAngle,\n        innerRadius: computedProps.innerRadius,\n        outerRadius: computedProps.radius,\n        padAngle,\n        sortByValue,\n        activeId,\n        activeInnerRadiusOffset,\n        activeOuterRadiusOffset,\n        hiddenIds,\n    })\n\n    const toggleSerie = useCallback((id: DatumId) => {\n        setHiddenIds(state =>\n            state.indexOf(id) > -1 ? state.filter(item => item !== id) : [...state, id]\n        )\n    }, [])\n\n    const arcGenerator = useArcGenerator({\n        cornerRadius,\n        padAngle: degreesToRadians(padAngle),\n    })\n\n    return {\n        arcGenerator,\n        setActiveId,\n        toggleSerie,\n        ...pieArcs,\n        ...computedProps,\n    }\n}\n\n/**\n * Memoize the context to pass to custom layers.\n */\nexport const usePieLayerContext = <RawDatum>({\n    dataWithArc,\n    arcGenerator,\n    centerX,\n    centerY,\n    radius,\n    innerRadius,\n}: PieCustomLayerProps<RawDatum>): PieCustomLayerProps<RawDatum> =>\n    useMemo(\n        () => ({\n            dataWithArc,\n            arcGenerator,\n            centerX,\n            centerY,\n            radius,\n            innerRadius,\n        }),\n        [dataWithArc, arcGenerator, centerX, centerY, radius, innerRadius]\n    )\n", "import { createElement, useMemo } from 'react'\nimport * as React from 'react'\nimport { ArcGenerator, ArcsLayer } from '@nivo/arcs'\nimport { useTooltip } from '@nivo/tooltip'\nimport { ComputedDatum, CompletePieSvgProps } from './types'\n\ninterface ArcsProps<RawDatum> {\n    center: [number, number]\n    data: ComputedDatum<RawDatum>[]\n    arcGenerator: ArcGenerator\n    borderWidth: CompletePieSvgProps<RawDatum>['borderWidth']\n    borderColor: CompletePieSvgProps<RawDatum>['borderColor']\n    isInteractive: CompletePieSvgProps<RawDatum>['isInteractive']\n    onClick?: CompletePieSvgProps<RawDatum>['onClick']\n    onMouseEnter?: CompletePieSvgProps<RawDatum>['onMouseEnter']\n    onMouseMove?: CompletePieSvgProps<RawDatum>['onMouseMove']\n    onMouseLeave?: CompletePieSvgProps<RawDatum>['onMouseLeave']\n    setActiveId: (id: null | string | number) => void\n    tooltip: CompletePieSvgProps<RawDatum>['tooltip']\n    transitionMode: CompletePieSvgProps<RawDatum>['transitionMode']\n}\n\nexport const Arcs = <RawDatum,>({\n    center,\n    data,\n    arcGenerator,\n    borderWidth,\n    borderColor,\n    isInteractive,\n    onClick,\n    onMouseEnter,\n    onMouseMove,\n    onMouseLeave,\n    setActiveId,\n    tooltip,\n    transitionMode,\n}: ArcsProps<RawDatum>) => {\n    const { showTooltipFromEvent, hideTooltip } = useTooltip()\n\n    const handleClick = useMemo(() => {\n        if (!isInteractive) return undefined\n\n        return (datum: ComputedDatum<RawDatum>, event: React.MouseEvent<SVGPathElement>) => {\n            onClick?.(datum, event)\n        }\n    }, [isInteractive, onClick])\n\n    const handleMouseEnter = useMemo(() => {\n        if (!isInteractive) return undefined\n\n        return (datum: ComputedDatum<RawDatum>, event: React.MouseEvent<SVGPathElement>) => {\n            showTooltipFromEvent(createElement(tooltip, { datum }), event)\n            setActiveId(datum.id)\n            onMouseEnter?.(datum, event)\n        }\n    }, [isInteractive, showTooltipFromEvent, setActiveId, onMouseEnter, tooltip])\n\n    const handleMouseMove = useMemo(() => {\n        if (!isInteractive) return undefined\n\n        return (datum: ComputedDatum<RawDatum>, event: React.MouseEvent<SVGPathElement>) => {\n            showTooltipFromEvent(createElement(tooltip, { datum }), event)\n            onMouseMove?.(datum, event)\n        }\n    }, [isInteractive, showTooltipFromEvent, onMouseMove, tooltip])\n\n    const handleMouseLeave = useMemo(() => {\n        if (!isInteractive) return undefined\n\n        return (datum: ComputedDatum<RawDatum>, event: React.MouseEvent<SVGPathElement>) => {\n            hideTooltip()\n            setActiveId(null)\n            onMouseLeave?.(datum, event)\n        }\n    }, [isInteractive, hideTooltip, setActiveId, onMouseLeave])\n\n    return (\n        <ArcsLayer<ComputedDatum<RawDatum>>\n            center={center}\n            data={data}\n            arcGenerator={arcGenerator}\n            borderWidth={borderWidth}\n            borderColor={borderColor}\n            transitionMode={transitionMode}\n            onClick={handleClick}\n            onMouseEnter={handleMouseEnter}\n            onMouseMove={handleMouseMove}\n            onMouseLeave={handleMouseLeave}\n        />\n    )\n}\n", "import { ReactNode, Fragment, createElement } from 'react'\nimport {\n    // @ts-ignore\n    bindDefs,\n    useDimensions,\n    Container,\n    SvgWrapper,\n} from '@nivo/core'\nimport { ArcLabelsLayer, ArcLinkLabelsLayer } from '@nivo/arcs'\nimport { InheritedColorConfig } from '@nivo/colors'\nimport PieLegends from './PieLegends'\nimport { useNormalizedData, usePieFromBox, usePieLayerContext } from './hooks'\nimport { ComputedDatum, PieLayer, PieSvgProps, PieLayerId } from './types'\nimport { defaultProps } from './props'\nimport { Arcs } from './Arcs'\n\nconst InnerPie = <RawDatum,>({\n    data,\n    id = defaultProps.id,\n    value = defaultProps.value,\n    valueFormat,\n    sortByValue = defaultProps.sortByValue,\n\n    layers = defaultProps.layers as PieLayer<RawDatum>[],\n\n    startAngle = defaultProps.startAngle,\n    endAngle = defaultProps.endAngle,\n    padAngle = defaultProps.padAngle,\n    fit = defaultProps.fit,\n    innerRadius: innerRadiusRatio = defaultProps.innerRadius,\n    cornerRadius = defaultProps.cornerRadius,\n    activeInnerRadiusOffset = defaultProps.activeInnerRadiusOffset,\n    activeOuterRadiusOffset = defaultProps.activeOuterRadiusOffset,\n\n    width,\n    height,\n    margin: partialMargin,\n\n    colors = defaultProps.colors,\n\n    // border\n    borderWidth = defaultProps.borderWidth,\n    borderColor = defaultProps.borderColor as InheritedColorConfig<ComputedDatum<RawDatum>>,\n\n    // arc labels\n    enableArcLabels = defaultProps.enableArcLabels,\n    arcLabel = defaultProps.arcLabel,\n    arcLabelsSkipAngle = defaultProps.arcLabelsSkipAngle,\n    arcLabelsTextColor = defaultProps.arcLabelsTextColor,\n    arcLabelsRadiusOffset = defaultProps.arcLabelsRadiusOffset,\n    arcLabelsComponent,\n\n    // arc link labels\n    enableArcLinkLabels = defaultProps.enableArcLinkLabels,\n    arcLinkLabel = defaultProps.arcLinkLabel,\n    arcLinkLabelsSkipAngle = defaultProps.arcLinkLabelsSkipAngle,\n    arcLinkLabelsOffset = defaultProps.arcLinkLabelsOffset,\n    arcLinkLabelsDiagonalLength = defaultProps.arcLinkLabelsDiagonalLength,\n    arcLinkLabelsStraightLength = defaultProps.arcLinkLabelsStraightLength,\n    arcLinkLabelsThickness = defaultProps.arcLinkLabelsThickness,\n    arcLinkLabelsTextOffset = defaultProps.arcLinkLabelsTextOffset,\n    arcLinkLabelsTextColor = defaultProps.arcLinkLabelsTextColor,\n    arcLinkLabelsColor = defaultProps.arcLinkLabelsColor,\n    arcLinkLabelComponent,\n\n    // styling\n    defs = defaultProps.defs,\n    fill = defaultProps.fill,\n\n    // interactivity\n    isInteractive = defaultProps.isInteractive,\n    onClick,\n    onMouseEnter,\n    onMouseMove,\n    onMouseLeave,\n    tooltip = defaultProps.tooltip,\n\n    transitionMode = defaultProps.transitionMode,\n\n    legends = defaultProps.legends,\n    role = defaultProps.role,\n}: PieSvgProps<RawDatum>) => {\n    const { outerWidth, outerHeight, margin, innerWidth, innerHeight } = useDimensions(\n        width,\n        height,\n        partialMargin\n    )\n\n    const normalizedData = useNormalizedData<RawDatum>({\n        data,\n        id,\n        value,\n        valueFormat,\n        colors,\n    })\n\n    const {\n        dataWithArc,\n        legendData,\n        arcGenerator,\n        centerX,\n        centerY,\n        radius,\n        innerRadius,\n        setActiveId,\n        toggleSerie,\n    } = usePieFromBox<RawDatum>({\n        data: normalizedData,\n        width: innerWidth,\n        height: innerHeight,\n        fit,\n        innerRadius: innerRadiusRatio,\n        startAngle,\n        endAngle,\n        padAngle,\n        sortByValue,\n        cornerRadius,\n        activeInnerRadiusOffset,\n        activeOuterRadiusOffset,\n    })\n\n    const boundDefs = bindDefs(defs, dataWithArc, fill)\n\n    const layerById: Record<PieLayerId, ReactNode> = {\n        arcLinkLabels: null,\n        arcs: null,\n        arcLabels: null,\n        legends: null,\n    }\n\n    if (enableArcLinkLabels && layers.includes('arcLinkLabels')) {\n        layerById.arcLinkLabels = (\n            <ArcLinkLabelsLayer<ComputedDatum<RawDatum>>\n                key=\"arcLinkLabels\"\n                center={[centerX, centerY]}\n                data={dataWithArc}\n                label={arcLinkLabel}\n                skipAngle={arcLinkLabelsSkipAngle}\n                offset={arcLinkLabelsOffset}\n                diagonalLength={arcLinkLabelsDiagonalLength}\n                straightLength={arcLinkLabelsStraightLength}\n                strokeWidth={arcLinkLabelsThickness}\n                textOffset={arcLinkLabelsTextOffset}\n                textColor={arcLinkLabelsTextColor}\n                linkColor={arcLinkLabelsColor}\n                component={arcLinkLabelComponent}\n            />\n        )\n    }\n\n    if (layers.includes('arcs')) {\n        layerById.arcs = (\n            <Arcs<RawDatum>\n                key=\"arcs\"\n                center={[centerX, centerY]}\n                data={dataWithArc}\n                arcGenerator={arcGenerator}\n                borderWidth={borderWidth}\n                borderColor={borderColor}\n                isInteractive={isInteractive}\n                onClick={onClick}\n                onMouseEnter={onMouseEnter}\n                onMouseMove={onMouseMove}\n                onMouseLeave={onMouseLeave}\n                setActiveId={setActiveId}\n                tooltip={tooltip}\n                transitionMode={transitionMode}\n            />\n        )\n    }\n\n    if (enableArcLabels && layers.includes('arcLabels')) {\n        layerById.arcLabels = (\n            <ArcLabelsLayer<ComputedDatum<RawDatum>>\n                key=\"arcLabels\"\n                center={[centerX, centerY]}\n                data={dataWithArc}\n                label={arcLabel}\n                radiusOffset={arcLabelsRadiusOffset}\n                skipAngle={arcLabelsSkipAngle}\n                textColor={arcLabelsTextColor}\n                transitionMode={transitionMode}\n                component={arcLabelsComponent}\n            />\n        )\n    }\n\n    if (legends.length > 0 && layers.includes('legends')) {\n        layerById.legends = (\n            <PieLegends<RawDatum>\n                key=\"legends\"\n                width={innerWidth}\n                height={innerHeight}\n                data={legendData}\n                legends={legends}\n                toggleSerie={toggleSerie}\n            />\n        )\n    }\n\n    const layerContext = usePieLayerContext<RawDatum>({\n        dataWithArc,\n        arcGenerator,\n        centerX,\n        centerY,\n        radius,\n        innerRadius,\n    })\n\n    return (\n        <SvgWrapper\n            width={outerWidth}\n            height={outerHeight}\n            margin={margin}\n            defs={boundDefs}\n            role={role}\n        >\n            {layers.map((layer, i) => {\n                if (layerById[layer as PieLayerId] !== undefined) {\n                    return layerById[layer as PieLayerId]\n                }\n\n                if (typeof layer === 'function') {\n                    return <Fragment key={i}>{createElement(layer, layerContext)}</Fragment>\n                }\n\n                return null\n            })}\n        </SvgWrapper>\n    )\n}\n\nexport const Pie = <RawDatum,>({\n    isInteractive = defaultProps.isInteractive,\n    animate = defaultProps.animate,\n    motionConfig = defaultProps.motionConfig,\n    theme,\n    renderWrapper,\n    ...otherProps\n}: PieSvgProps<RawDatum>) => (\n    <Container\n        {...{\n            animate,\n            isInteractive,\n            motionConfig,\n            renderWrapper,\n            theme,\n        }}\n    >\n        <InnerPie<RawDatum> isInteractive={isInteractive} {...otherProps} />\n    </Container>\n)\n", "import { ResponsiveWrapper } from '@nivo/core'\nimport { Pie } from './Pie'\nimport { PieSvgProps } from './types'\n\nexport const ResponsivePie = <RawDatum,>(\n    props: Omit<PieSvgProps<RawDatum>, 'width' | 'height'>\n) => (\n    <ResponsiveWrapper>\n        {({ width, height }: { width: number; height: number }) => (\n            <Pie<RawDatum> width={width} height={height} {...props} />\n        )}\n    </ResponsiveWrapper>\n)\n", "import { createElement, useEffect, useMemo, useRef } from 'react'\nimport * as React from 'react'\nimport { getRelativeCursor, useDimensions, useTheme, Container } from '@nivo/core'\nimport { renderLegendToCanvas } from '@nivo/legends'\nimport { useInheritedColor, InheritedColorConfig } from '@nivo/colors'\nimport { useTooltip } from '@nivo/tooltip'\nimport {\n    Arc,\n    findArcUnderCursor,\n    useArcLabels,\n    drawCanvasArcLabels,\n    useArcLinkLabels,\n    drawCanvasArcLinkLabels,\n} from '@nivo/arcs'\nimport { useNormalizedData, usePieFromBox } from './hooks'\nimport { ComputedDatum, PieCanvasProps } from './types'\nimport { defaultProps } from './props'\n\nconst InnerPieCanvas = <RawDatum,>({\n    data,\n    id = defaultProps.id,\n    value = defaultProps.value,\n    valueFormat,\n    sortByValue = defaultProps.sortByValue,\n\n    startAngle = defaultProps.startAngle,\n    endAngle = defaultProps.endAngle,\n    padAngle = defaultProps.padAngle,\n    fit = defaultProps.fit,\n    innerRadius: innerRadiusRatio = defaultProps.innerRadius,\n    cornerRadius = defaultProps.cornerRadius,\n    activeInnerRadiusOffset = defaultProps.activeInnerRadiusOffset,\n    activeOuterRadiusOffset = defaultProps.activeOuterRadiusOffset,\n\n    width,\n    height,\n    margin: partialMargin,\n    pixelRatio = 1,\n\n    colors = defaultProps.colors,\n\n    // border\n    borderWidth = defaultProps.borderWidth,\n    borderColor = defaultProps.borderColor as InheritedColorConfig<ComputedDatum<RawDatum>>,\n\n    // arc labels\n    enableArcLabels = defaultProps.enableArcLabels,\n    arcLabel = defaultProps.arcLabel,\n    arcLabelsSkipAngle = defaultProps.arcLabelsSkipAngle,\n    arcLabelsTextColor = defaultProps.arcLabelsTextColor,\n    arcLabelsRadiusOffset = defaultProps.arcLabelsRadiusOffset,\n\n    // arc link labels\n    enableArcLinkLabels = defaultProps.enableArcLinkLabels,\n    arcLinkLabel = defaultProps.arcLinkLabel,\n    arcLinkLabelsSkipAngle = defaultProps.arcLinkLabelsSkipAngle,\n    arcLinkLabelsOffset = defaultProps.arcLinkLabelsOffset,\n    arcLinkLabelsDiagonalLength = defaultProps.arcLinkLabelsDiagonalLength,\n    arcLinkLabelsStraightLength = defaultProps.arcLinkLabelsStraightLength,\n    arcLinkLabelsThickness = defaultProps.arcLinkLabelsThickness,\n    arcLinkLabelsTextOffset = defaultProps.arcLinkLabelsTextOffset,\n    arcLinkLabelsTextColor = defaultProps.arcLinkLabelsTextColor,\n    arcLinkLabelsColor = defaultProps.arcLinkLabelsColor,\n\n    // interactivity\n    isInteractive = defaultProps.isInteractive,\n    onClick,\n    onMouseMove,\n    tooltip = defaultProps.tooltip,\n\n    legends = defaultProps.legends,\n}: PieCanvasProps<RawDatum>) => {\n    const canvasEl = useRef<HTMLCanvasElement | null>(null)\n    const theme = useTheme()\n\n    const { margin, innerWidth, innerHeight, outerWidth, outerHeight } = useDimensions(\n        width,\n        height,\n        partialMargin\n    )\n\n    const normalizedData = useNormalizedData<RawDatum>({\n        data,\n        id,\n        value,\n        valueFormat,\n        colors,\n    })\n\n    const { dataWithArc, arcGenerator, centerX, centerY, radius, innerRadius, setActiveId } =\n        usePieFromBox<RawDatum>({\n            data: normalizedData,\n            width: innerWidth,\n            height: innerHeight,\n            fit,\n            innerRadius: innerRadiusRatio,\n            startAngle,\n            endAngle,\n            padAngle,\n            sortByValue,\n            cornerRadius,\n            activeInnerRadiusOffset,\n            activeOuterRadiusOffset,\n        })\n\n    const getBorderColor = useInheritedColor<ComputedDatum<RawDatum>>(borderColor, theme)\n\n    const arcLabels = useArcLabels<ComputedDatum<RawDatum>>({\n        data: dataWithArc,\n        label: arcLabel,\n        skipAngle: arcLabelsSkipAngle,\n        offset: arcLabelsRadiusOffset,\n        textColor: arcLabelsTextColor,\n    })\n\n    const arcLinkLabels = useArcLinkLabels<ComputedDatum<RawDatum>>({\n        data: dataWithArc,\n        skipAngle: arcLinkLabelsSkipAngle,\n        offset: arcLinkLabelsOffset,\n        diagonalLength: arcLinkLabelsDiagonalLength,\n        straightLength: arcLinkLabelsStraightLength,\n        label: arcLinkLabel,\n        linkColor: arcLinkLabelsColor,\n        textOffset: arcLinkLabelsTextOffset,\n        textColor: arcLinkLabelsTextColor,\n    })\n\n    useEffect(() => {\n        if (!canvasEl.current) return\n\n        canvasEl.current.width = outerWidth * pixelRatio\n        canvasEl.current.height = outerHeight * pixelRatio\n\n        const ctx = canvasEl.current.getContext('2d')!\n\n        ctx.scale(pixelRatio, pixelRatio)\n\n        ctx.fillStyle = theme.background\n        ctx.fillRect(0, 0, outerWidth, outerHeight)\n\n        ctx.save()\n        ctx.translate(margin.left, margin.top)\n        arcGenerator.context(ctx)\n\n        ctx.save()\n        ctx.translate(centerX, centerY)\n\n        dataWithArc.forEach(arc => {\n            ctx.beginPath()\n            ctx.fillStyle = arc.color\n\n            ctx.strokeStyle = getBorderColor(arc)\n            ctx.lineWidth = borderWidth\n\n            arcGenerator(arc.arc)\n\n            ctx.fill()\n\n            if (borderWidth > 0) {\n                ctx.stroke()\n            }\n        })\n\n        if (enableArcLinkLabels === true) {\n            drawCanvasArcLinkLabels<ComputedDatum<RawDatum>>(\n                ctx,\n                arcLinkLabels,\n                theme,\n                arcLinkLabelsThickness\n            )\n        }\n\n        if (enableArcLabels === true) {\n            drawCanvasArcLabels<ComputedDatum<RawDatum>>(ctx, arcLabels, theme)\n        }\n\n        // legends assume a box rather than a center,\n        // that's why we restore previously saved position here.\n        ctx.restore()\n        legends.forEach(legend => {\n            renderLegendToCanvas(ctx, {\n                ...legend,\n                data: dataWithArc,\n                containerWidth: innerWidth,\n                containerHeight: innerHeight,\n                theme,\n            })\n        })\n    }, [\n        canvasEl,\n        innerWidth,\n        innerHeight,\n        outerWidth,\n        outerHeight,\n        margin.top,\n        margin.left,\n        pixelRatio,\n        centerX,\n        centerY,\n        arcGenerator,\n        dataWithArc,\n        getBorderColor,\n        enableArcLabels,\n        arcLabels,\n        enableArcLinkLabels,\n        arcLinkLabels,\n        arcLinkLabelsThickness,\n        legends,\n        theme,\n    ])\n\n    const arcs = useMemo(\n        () =>\n            dataWithArc.map(datum => ({\n                id: datum.id,\n                ...datum.arc,\n            })),\n        [dataWithArc]\n    )\n\n    const getArcFromMouse = (event: React.MouseEvent<HTMLCanvasElement>) => {\n        if (!canvasEl.current) return null\n\n        const [x, y] = getRelativeCursor(canvasEl.current, event)\n\n        const hoveredArc = findArcUnderCursor<Arc & { id: string | number }>(\n            margin.left + centerX,\n            margin.top + centerY,\n            radius,\n            innerRadius,\n            arcs,\n            x,\n            y\n        )\n\n        if (!hoveredArc) return null\n\n        return dataWithArc.find(datum => datum.id === hoveredArc.id)\n    }\n\n    const { showTooltipFromEvent, hideTooltip } = useTooltip()\n\n    const handleMouseHover = (event: React.MouseEvent<HTMLCanvasElement>) => {\n        const datum = getArcFromMouse(event)\n        if (datum) {\n            onMouseMove?.(datum, event)\n            setActiveId(datum.id)\n            showTooltipFromEvent(createElement(tooltip, { datum }), event)\n        } else {\n            setActiveId(null)\n            hideTooltip()\n        }\n    }\n\n    const handleMouseLeave = () => {\n        hideTooltip()\n    }\n\n    const handleClick = (event: React.MouseEvent<HTMLCanvasElement>) => {\n        if (!onClick) return\n\n        const arc = getArcFromMouse(event)\n        if (arc) {\n            onClick(arc, event)\n        }\n    }\n\n    return (\n        <canvas\n            ref={canvasEl}\n            width={outerWidth * pixelRatio}\n            height={outerHeight * pixelRatio}\n            style={{\n                width: outerWidth,\n                height: outerHeight,\n                cursor: isInteractive ? 'auto' : 'normal',\n            }}\n            onMouseEnter={isInteractive ? handleMouseHover : undefined}\n            onMouseMove={isInteractive ? handleMouseHover : undefined}\n            onMouseLeave={isInteractive ? handleMouseLeave : undefined}\n            onClick={isInteractive ? handleClick : undefined}\n        />\n    )\n}\n\nexport const PieCanvas = <RawDatum,>({\n    isInteractive = defaultProps.isInteractive,\n    theme,\n    renderWrapper,\n    ...otherProps\n}: PieCanvasProps<RawDatum>) => (\n    <Container {...{ isInteractive, renderWrapper, theme }}>\n        <InnerPieCanvas<RawDatum> isInteractive={isInteractive} {...otherProps} />\n    </Container>\n)\n", "import { ResponsiveWrapper } from '@nivo/core'\nimport { PieCanvas } from './PieCanvas'\nimport { PieCanvasProps } from './types'\n\nexport const ResponsivePieCanvas = <RawDatum,>(\n    props: Omit<PieCanvasProps<RawDatum>, 'width' | 'height'>\n) => (\n    <ResponsiveWrapper>\n        {({ width, height }: { width: number; height: number }) => (\n            <PieCanvas<RawDatum> width={width} height={height} {...props} />\n        )}\n    </ResponsiveWrapper>\n)\n"],
  "mappings": "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",
  "names": ["n", "i", "scheme", "scheme", "scheme", "scheme", "scheme", "scheme", "scheme", "scheme", "scheme", "scheme", "scheme", "scheme", "scheme", "scheme", "scheme", "scheme", "scheme", "scheme", "scheme", "scheme", "scheme", "scheme", "scheme", "scheme", "scheme", "scheme", "scheme", "t", "m", "n", "r", "g", "b", "a", "o", "k", "h", "s", "o", "r", "g", "b", "x", "z", "a", "b", "k", "x", "z", "t", "o", "h", "h", "c", "o", "k", "o", "r", "g", "b", "k", "s", "h", "a", "t", "c", "t", "x", "t", "n", "t", "categoricalColorSchemes", "nivo", "category10", "schemeCategory10", "accent", "schemeAccent", "dark2", "schemeDark2", "paired", "schemePaired", "pastel1", "schemePastel1", "pastel2", "schemePastel2", "set1", "schemeSet1", "set2", "schemeSet2", "set3", "schemeSet3", "categoricalColorSchemeIds", "Object", "keys", "divergingColorSchemes", "brown_blueGreen", "schemeBrBG", "purpleRed_green", "schemePRGn", "pink_yellowGreen", "schemePiYG", "purple_orange", "schemePuOr", "red_blue", "schemeRdBu", "red_grey", "schemeRdGy", "red_yellow_blue", "schemeRdYlBu", "red_yellow_green", "schemeRdYlGn", "spectral", "schemeSpectral", "divergingColorSchemeIds", "divergingColorInterpolators", "interpolateBrBG", "interpolatePRGn", "interpolatePiYG", "interpolatePuOr", "interpolateRdBu", "interpolateRdGy", "interpolateRdYlBu", "interpolateRdYlGn", "interpolateSpectral", "sequentialColorSchemes", "blues", "schemeBlues", "greens", "schemeGreens", "greys", "schemeGreys", "oranges", "schemeOranges", "purples", "schemePurples", "reds", "schemeReds", "blue_green", "schemeBuGn", "blue_purple", "schemeBuPu", "green_blue", "schemeGnBu", "orange_red", "schemeOrRd", "purple_blue_green", "schemePuBuGn", "purple_blue", "schemePuBu", "purple_red", "schemePuRd", "red_purple", "schemeRdPu", "yellow_green_blue", "schemeYlGnBu", "yellow_green", "schemeYlGn", "yellow_orange_brown", "schemeYlOrBr", "yellow_orange_red", "schemeYlOrRd", "sequentialColorSchemeIds", "sequentialColorInterpolators", "interpolateBlues", "interpolateGreens", "interpolateGreys", "interpolateOranges", "interpolatePurples", "interpolateReds", "turbo", "interpolateTurbo", "viridis", "interpolateViridis", "inferno", "magma", "plasma", "cividis", "interpolateCividis", "warm", "cool", "cubehelixDefault", "interpolateCubehelixDefault", "interpolateBuGn", "interpolateBuPu", "interpolateGnBu", "interpolateOrRd", "interpolatePuBuGn", "interpolatePuBu", "interpolatePuRd", "interpolateRdPu", "interpolateYlGnBu", "interpolateYlGn", "interpolateYlOrBr", "interpolateYlOrRd", "colorSchemes", "colorSchemeIds", "isCategoricalColorScheme", "scheme", "includes", "isDivergingColorScheme", "isSequentialColorScheme", "cyclicalColorInterpolators", "rainbow", "interpolateRainbow", "sinebow", "interpolateSinebow", "colorInterpolators", "colorInterpolatorIds", "getInheritedColorGenerator", "config", "theme", "_isPlainObject", "Error", "themeColor", "_get", "from", "getColor", "d", "Array", "isArray", "modifiers", "o", "u", "modifier", "modifierType", "amount", "push", "color", "brighter", "darker", "opacity", "length", "datum", "reduce", "modify", "rgb", "toString", "useInheritedColor", "useMemo", "ordinalColorsPropType", "PropTypes", "oneOfType", "func", "arrayOf", "string", "shape", "oneOf", "isRequired", "size", "number", "inheritedColorPropType", "array", "getOrdinalColorScale", "config", "identity", "getIdentity", "datum", "_get", "Array", "isArray", "scale", "scaleOrdinal", "generator", "_isPlainObject", "scheme", "isCategoricalColorScheme", "colorSchemes", "isDivergingColorScheme", "size", "Error", "d", "isSequentialColorScheme", "useOrdinalColorScale", "useMemo", "staticStyle", "pointerEvents", "ArcLabel", "n", "label", "style", "theme", "useTheme", "_jsx", "animated", "g", "transform", "opacity", "progress", "text", "textAnchor", "dominantBaseline", "labels", "fill", "textColor", "getNormalizedAngle", "angle", "normalizedAngle", "Math", "PI", "filterDataBySkipAngle", "data", "skipAngle", "filter", "datum", "abs", "radiansToDegrees", "arc", "endAngle", "startAngle", "arcTransitionModeById", "startAngle", "enter", "arc", "endAngle", "update", "leave", "middleAngle", "innerRadius", "outerRadius", "centerRadius", "pushIn", "pushOut", "useArcTransitionMode", "mode", "extraTransition", "useMemo", "transitionMode", "datum", "progress", "computeArcCenter", "offset", "angle", "midAngle", "Math", "PI", "radius", "positionFromAngle", "interpolateArcCenter", "startAngleValue", "endAngleValue", "innerRadiusValue", "outerRadiusValue", "to", "centroid", "x", "y", "useArcCentersTransition", "data", "extra", "a", "useMotionConfig", "animate", "springConfig", "config", "phases", "transition", "useTransition", "keys", "id", "initial", "from", "immediate", "interpolate", "useArcCenters", "t", "e", "i", "skipAngle", "o", "computeExtraProps", "filterDataBySkipAngle", "map", "position", "ArcLabelsLayer", "center", "labelAccessor", "label", "radiusOffset", "textColor", "component", "ArcLabel", "getLabel", "usePropertyAccessor", "theme", "useTheme", "getTextColor", "useInheritedColor", "filteredData", "filter", "abs", "radiansToDegrees", "Label", "_jsx", "transform", "transitionProps", "createElement", "key", "style", "drawCanvasArcLabels", "ctx", "labels", "textAlign", "textBaseline", "font", "text", "fontSize", "fontFamily", "forEach", "fillStyle", "fillText", "useArcLabels", "useCallback", "ArcLinkLabel", "n", "label", "style", "theme", "useTheme", "_jsxs", "animated", "g", "opacity", "_jsx", "path", "fill", "stroke", "linkColor", "strokeWidth", "thickness", "d", "text", "transform", "textPosition", "textAnchor", "dominantBaseline", "labels", "textColor", "computeArcLinkTextAnchor", "arc", "centerAngle", "getNormalizedAngle", "startAngle", "endAngle", "Math", "PI", "computeArcLink", "offset", "diagonalLength", "straightLength", "side", "point2", "point0", "positionFromAngle", "outerRadius", "point1", "x", "y", "points", "lineGenerator", "line", "interpolateLink", "startAngleValue", "endAngleValue", "innerRadiusValue", "outerRadiusValue", "offsetValue", "diagonalLengthValue", "straightLengthValue", "to", "innerRadius", "diagonalLengthAnimated", "straightLengthAnimated", "interpolateTextAnchor", "interpolateTextPosition", "textOffsetValue", "textOffset", "position", "useArcLinkLabelsTransition", "t", "data", "r", "skipAngle", "useMotionConfig", "animate", "springConfig", "config", "getLinkColor", "useInheritedColor", "getTextColor", "filteredData", "useMemo", "filterDataBySkipAngle", "transitionPhases", "enter", "datum", "update", "leave", "transition", "useTransition", "keys", "id", "initial", "from", "immediate", "ArcLinkLabelsLayer", "center", "labelAccessor", "component", "getLabel", "usePropertyAccessor", "Label", "transitionProps", "createElement", "key", "drawCanvasArcLinkLabels", "ctx", "textBaseline", "font", "fontSize", "fontFamily", "forEach", "fillStyle", "textAlign", "textPropsByEngine", "canvas", "align", "fillText", "beginPath", "strokeStyle", "lineWidth", "point", "index", "moveTo", "lineTo", "useArcLinks", "e", "i", "computeExtraProps", "s", "links", "filter", "abs", "radiansToDegrees", "map", "link", "useArcLinkLabels", "u", "useCallback", "ArcShape", "n", "datum", "style", "onClick", "onMouseEnter", "onMouseMove", "onMouseLeave", "handleClick", "useCallback", "event", "handleMouseEnter", "handleMouseMove", "handleMouseLeave", "_jsx", "animated", "path", "d", "opacity", "fill", "color", "stroke", "borderColor", "strokeWidth", "borderWidth", "undefined", "interpolateArc", "startAngleValue", "endAngleValue", "innerRadiusValue", "outerRadiusValue", "arcGenerator", "to", "startAngle", "endAngle", "innerRadius", "outerRadius", "Math", "max", "useArcsTransition", "data", "mode", "extra", "i", "useMotionConfig", "animate", "springConfig", "config", "phases", "useArcTransitionMode", "transition", "useTransition", "keys", "id", "initial", "update", "from", "enter", "leave", "immediate", "interpolate", "ArcsLayer", "t", "center", "transitionMode", "component", "theme", "useTheme", "getBorderColor", "useInheritedColor", "Arc", "transform", "transitionProps", "createElement", "key", "computeArcBoundingBox", "centerX", "centerY", "radius", "includeCenter", "points", "p0", "positionFromAngle", "degreesToRadians", "push", "x", "y", "p1", "angle", "round", "min", "p", "map", "e", "xs", "ys", "x0", "x1", "y0", "width", "height", "isCursorInRing", "cursorX", "cursorY", "distance", "getDistance", "findArcUnderCursor", "arcs", "cursorAngle", "getAngle", "find", "useArcGenerator", "t", "n", "e", "cornerRadius", "i", "padAngle", "useMemo", "d3Arc", "innerRadius", "arc", "outerRadius", "SymbolCircle", "e", "x", "y", "size", "fill", "opacity", "c", "borderWidth", "d", "borderColor", "_jsx", "r", "cx", "cy", "strokeWidth", "stroke", "style", "pointerEvents", "SymbolDiamond", "transform", "SymbolSquare", "width", "height", "SymbolTriangle", "p", "t", "i", "n", "zeroPadding", "top", "right", "bottom", "left", "computeDimensions", "t", "item", "direction", "itemsSpacing", "_padding", "padding", "itemCount", "itemWidth", "itemHeight", "Array", "isArray", "Error", "horizontalPadding", "verticalPadding", "width", "height", "spacing", "computePositionFromAnchor", "anchor", "translateX", "translateY", "containerWidth", "containerHeight", "x", "y", "computeItemLayout", "symbolX", "symbolY", "labelX", "labelY", "labelAnchor", "labelAlignment", "justify", "symbolSize", "symbolSpacing", "symbolByShape", "circle", "SymbolCircle", "diamond", "SymbolDiamond", "square", "SymbolSquare", "triangle", "SymbolTriangle", "LegendSvgItem", "i", "n", "r", "c", "h", "g", "m", "f", "u", "v", "x", "y", "width", "height", "data", "direction", "z", "B", "justify", "textColor", "background", "Y", "E", "opacity", "T", "symbolShape", "M", "symbolSize", "P", "symbolSpacing", "q", "symbolBorderWidth", "D", "symbolBorderColor", "onClick", "onMouseEnter", "onMouseLeave", "toggleSerie", "effects", "useState", "style", "setStyle", "theme", "useTheme", "handleMouseEnter", "useCallback", "event", "filter", "t", "on", "reduce", "acc", "effect", "handleMouseLeave", "computeItemLayout", "symbolX", "symbolY", "labelX", "labelY", "labelAnchor", "labelAlignment", "isInteractive", "some", "handler", "SymbolShape", "_jsxs", "transform", "itemOpacity", "_jsx", "fill", "itemBackground", "cursor", "id", "createElement", "size", "color", "borderWidth", "borderColor", "hidden", "legends", "symbol", "undefined", "textAnchor", "text", "itemTextColor", "dominantBaseline", "pointerEvents", "userSelect", "label", "LegendSvg", "e", "padding", "_padding", "itemWidth", "itemHeight", "itemDirection", "itemsSpacing", "p", "b", "computeDimensions", "itemCount", "length", "xStep", "yStep", "map", "left", "top", "BoxLegendSvg", "containerWidth", "containerHeight", "translateX", "a", "translateY", "anchor", "computePositionFromAnchor", "textAlignMapping", "start", "middle", "end", "renderLegendToCanvas", "ctx", "O", "save", "translate", "font", "fontSize", "fontFamily", "forEach", "d", "itemX", "itemY", "fillStyle", "fillRect", "textAlign", "textBaseline", "fillText", "String", "restore", "LegendPropShape", "data", "PropTypes", "arrayOf", "object", "anchor", "oneOf", "isRequired", "translateX", "number", "translateY", "direction", "itemsSpacing", "itemWidth", "itemHeight", "itemDirection", "itemTextColor", "string", "itemBackground", "itemOpacity", "symbolShape", "oneOfType", "func", "symbolSize", "symbolSpacing", "symbolBorderWidth", "symbolBorderColor", "onClick", "onMouseEnter", "onMouseLeave", "effects", "shape", "on", "style", "H", "PieLegends", "e", "width", "height", "legends", "data", "toggleSerie", "_jsx", "map", "legend", "i", "BoxLegendSvg", "containerWidth", "containerHeight", "undefined", "defaultProps", "id", "value", "sortByValue", "innerRadius", "padAngle", "cornerRadius", "layers", "startAngle", "endAngle", "fit", "activeInnerRadiusOffset", "activeOuterRadiusOffset", "borderWidth", "borderColor", "from", "modifiers", "enableArcLabels", "arcLabel", "arcLabelsSkipAngle", "arcLabelsRadiusOffset", "arcLabelsTextColor", "theme", "enableArcLinkLabels", "arcLinkLabel", "arcLinkLabelsSkipAngle", "arcLinkLabelsOffset", "arcLinkLabelsDiagonalLength", "arcLinkLabelsStraightLength", "arcLinkLabelsThickness", "arcLinkLabelsTextOffset", "arcLinkLabelsTextColor", "arcLinkLabelsColor", "colors", "scheme", "defs", "fill", "isInteractive", "animate", "motionConfig", "transitionMode", "tooltip", "datum", "BasicTooltip", "formattedValue", "enableChip", "color", "role", "pixelRatio", "window", "devicePixelRatio", "j", "useNormalizedData", "valueFormat", "getId", "usePropertyAccessor", "getValue", "formatValue", "useValueFormatter", "getColor", "useOrdinalColorScale", "useMemo", "datumId", "datumValue", "normalizedDatum", "label", "hidden", "usePieArcs", "outerRadius", "activeId", "hiddenIds", "pie", "innerPie", "d3Pie", "d", "degreesToRadians", "sortValues", "hiddenData", "filter", "item", "includes", "dataWithArc", "arc", "angle", "Math", "abs", "index", "thickness", "angleDeg", "radiansToDegrees", "legendData", "usePie", "radius", "useState", "setActiveId", "setHiddenIds", "pieArcs", "useCallback", "state", "indexOf", "D", "arcGenerator", "useArcGenerator", "usePieFromBox", "n", "innerRadiusRatio", "computedProps", "boundingBox", "min", "centerX", "centerY", "computeArcBoundingBox", "points", "box", "ratio", "adjustedBox", "x", "y", "debug", "usePieLayerContext", "Arcs", "center", "onClick", "onMouseEnter", "onMouseMove", "onMouseLeave", "useTooltip", "showTooltipFromEvent", "hideTooltip", "handleClick", "event", "handleMouseEnter", "createElement", "handleMouseMove", "handleMouseLeave", "ArcsLayer", "InnerPie", "partialMargin", "margin", "arcLabelsComponent", "arcLinkLabelComponent", "useDimensions", "outerWidth", "outerHeight", "innerWidth", "innerHeight", "normalizedData", "boundDefs", "bindDefs", "layerById", "arcLinkLabels", "arcs", "arcLabels", "ArcLinkLabelsLayer", "skipAngle", "offset", "diagonalLength", "straightLength", "strokeWidth", "textOffset", "textColor", "linkColor", "component", "ArcLabelsLayer", "radiusOffset", "length", "layerContext", "SvgWrapper", "layer", "Fragment", "Pie", "renderWrapper", "otherProps", "Container", "ResponsivePie", "props", "ResponsiveWrapper", "InnerPieCanvas", "N", "U", "canvasEl", "useRef", "useTheme", "getBorderColor", "useInheritedColor", "useArcLabels", "useArcLinkLabels", "useEffect", "current", "ctx", "getContext", "scale", "fillStyle", "background", "fillRect", "save", "translate", "left", "top", "context", "forEach", "beginPath", "strokeStyle", "lineWidth", "stroke", "drawCanvasArcLinkLabels", "drawCanvasArcLabels", "restore", "renderLegendToCanvas", "getArcFromMouse", "getRelativeCursor", "hoveredArc", "findArcUnderCursor", "find", "handleMouseHover", "ref", "style", "cursor", "PieCanvas", "ResponsivePieCanvas"]
}
